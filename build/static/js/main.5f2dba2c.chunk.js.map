{"version":3,"sources":["component/errorApp/Error.js","hoc/withAuth.js","App.js","redux/categories/categories-slice.js","redux/statistic/statistic-slice.js","redux/store.js","index.js","redux/user/user-operation.js","services/error/index.js","services/api/index.js","redux/finance/finance-operation.js","redux/global/global-action.js","redux/user/user-selector.js","redux/categories/categories-operation.js","redux/statistic/statistic-operation.js","redux/user/user-slice.js","redux/finance/finance-slice.js","redux/finance/finance-selector.js","redux/statistic/statistic-selector.js","redux/categories/categories-selector.js","component/spinnerLoader/spinnerLoader.js"],"names":["Error","errorCategory","useSelector","isErrorCategory","errorFinance","isErrorFinance","errorStatistic","isErrorStatistic","useEffect","toast","error","withAuth","isAuth","Component","to","Dashboard","lazy","RegistrationPage","LoginPage","App","dispatch","useDispatch","isUserToken","isToken","isUserAuth","token","getToken","userOperation","currentUser","console","log","clear","fallback","path","element","categoriesSlice","createSlice","name","initialState","data","isLoading","reducers","clearError","state","extraReducers","categoriesOperation","getCategories","pending","fulfilled","payload","rejected","message","actions","statisticSlice","dataExpense","dataIncome","totalExpense","totalIncome","statisticOperation","getStatistic","allExpense","allIncome","transactionsExpense","transactionsIncome","persistConfig","key","storage","whitelist","userReducer","persistReducer","userSlice","reducer","store","configureStore","categorySlice","financeSlice","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","devTools","process","rootStore","persistedStore","persistStore","ReactDOM","render","StrictMode","loader","persistor","document","getElementById","login","createAsyncThunk","a","loginAPI","result","register","registerAPI","logout","logoutAPI","getUserAPI","dir","HttpError","status","axios","defaults","baseURL","setAxiosToken","headers","common","Authorization","getError","response","request","statusText","user","post","userName","email","password","get","code","getCategoryAPI","resultD","resultC","categories","getStatisticAPI","month","year","query","transactions","getOperationsAPI","page","limit","addTransactionAPI","transaction","deleteTransactionAPI","id","delete","getOperations","addOperation","deleteOperation","getFinanceOpertaion","createAction","isErrorUser","isModalLogout","getName","openModalLogout","closeModalLogout","balance","userBalance","deleteId","isModalDeleteTransaction","isDeleteTransaction","isModalAddTransaction","isSaveModalDateStatic","total","currentPage","totalPage","openModalDeleteTransaction","closeModalDeleteTransaction","setDeleteTransaction","clearDeleteTransaction","openModalTransaction","closeModalTransaction","setSaveModalDateStatic","clearSaveModalDateStatic","setLimit","user_balance","finance","getBalance","isModalTransaction","isTransactionDeleting","getDeleteId","expense","statistic","length","map","el","sum","totalSum","category","_id","income","isLoadingStatistic","isCategoriesFull","getCategoryDebet","filter","getCategoryCredit","LoaderRoket","className"],"mappings":"4PA2BeA,EAnBD,WACV,IAAMC,EAAgBC,YAAYC,KAC5BC,EAAeF,YAAYG,KAC3BC,EAAiBJ,YAAYK,KAanC,OAXAC,qBAAU,WACFP,GACAQ,IAAMC,MAAMT,GAEZG,GACAK,IAAMC,MAAMN,GAEZE,GACAG,IAAMC,MAAMJ,KAEjB,CAACL,EAAeG,EAAcE,IAC1B,8B,QCtBEK,EAAW,SAACC,EAAQC,GAC7B,OAAID,EACOC,GAAwB,cAAC,IAAD,CAAUC,GAAG,UAErC,cAAC,IAAD,CAAUA,GAAG,Y,wBCMtBC,EAAYC,gBAAK,kBAAM,qEACvBC,EAAmBD,gBAAK,kBAAM,sEAC9BE,EAAYF,gBAAK,kBAAM,uDA0CdG,I,MAAAA,EAxCf,WACI,IAAMC,EAAWC,cACXC,EAAcpB,YAAYqB,KAC1BC,EAAatB,YAAYU,KACzBa,EAAQvB,YAAYwB,KAe1B,OAbAlB,qBAAU,WACFc,IAAgBE,GAChBJ,EAASO,IAAcC,YAAYH,MAExC,IAEHjB,qBAAU,WACNqB,QAAQC,IAAI,oBAAqBN,GAC5BA,GAAeF,GAChBF,EAASW,iBAEd,CAACP,EAAYF,IAGZ,mCACI,eAAC,WAAD,CAAUU,SAAU,cAAC,IAAD,IAApB,UACKR,IAAeF,GACZ,eAAC,IAAD,WACI,cAAC,IAAD,CAAOW,KAAK,QAAQC,QAAS,cAAChB,EAAD,MAC7B,cAAC,IAAD,CAAOe,KAAK,WAAWC,QAAS,cAACjB,EAAD,MAEhC,cAAC,IAAD,CAAOgB,KAAK,IAAIC,QAASvB,EAASa,KAClC,cAAC,IAAD,CACIS,KAAK,KACLC,QAASvB,EAASa,EAAY,cAACT,EAAD,UAI1C,cAAC,EAAD,U,wECvCVoB,EAAkBC,YAAY,CAChCC,KAAM,aACNC,aARiB,CACjBC,KAAM,GACNC,WAAW,EACX9B,MAAO,MAMP+B,SAAU,CACNC,WAAY,SAAAC,GACRA,EAAMjC,MAAQ,OAGtBkC,eAAa,mBACRC,IAAoBC,cAAcC,SAAU,SAAAJ,GACzCA,EAAMH,WAAY,EAClBG,EAAMjC,MAAQ,QAHT,cAKRmC,IAAoBC,cAAcE,WAAY,SAACL,EAAD,GAAyB,IAAfM,EAAc,EAAdA,QACrDN,EAAMJ,KAAN,YAAiBU,GACjBN,EAAMH,WAAY,KAPb,cASRK,IAAoBC,cAAcI,UAAW,SAACP,EAAD,GAAuB,IAAbjC,EAAY,EAAZA,MACpDiC,EAAMH,WAAY,EAClBG,EAAMjC,MAAQA,EAAMyC,WAXf,cAaRpB,KAAQ,SAAAY,GACLA,EAAMJ,KAAO,GACbI,EAAMH,WAAY,EAClBG,EAAMjC,MAAQ,QAhBT,KAsBFyB,GADeA,EAAgBiB,QAA/BV,WACAP,G,QC3BTkB,EAAiBjB,YAAY,CAC/BC,KAAM,YACNC,aAXiB,CACjBgB,YAAa,GACbC,WAAY,GACZC,aAAc,EACdC,YAAa,EACbjB,WAAW,EACX9B,MAAO,MAMP+B,SAAU,CACNC,WAAY,SAAAC,GACRA,EAAMjC,MAAQ,OAGtBkC,eAAa,mBACRc,IAAmBC,aAAaZ,SAAU,SAAAJ,GACvCA,EAAMH,WAAY,EAClBG,EAAMjC,MAAQ,QAHT,cAKRgD,IAAmBC,aAAaX,WAAY,SAACL,EAAD,GAAyB,IAAfM,EAAc,EAAdA,QACnDN,EAAMa,aAAeP,EAAQW,WAC7BjB,EAAMc,YAAcR,EAAQY,UAC5BlB,EAAMW,YAAcL,EAAQa,oBAC5BnB,EAAMY,WAAaN,EAAQc,mBAC3BpB,EAAMH,WAAY,KAVb,cAYRkB,IAAmBC,aAAaT,UAAW,SAACP,EAAD,GAAuB,IAAbjC,EAAY,EAAZA,MAClDiC,EAAMH,WAAY,EAClBG,EAAMjC,MAAQA,EAAMyC,WAdf,cAgBRpB,KAAQ,SAAAY,GACLA,EAAMW,YAAc,GACpBX,EAAMY,WAAa,GACnBZ,EAAMa,aAAe,EACrBb,EAAMc,YAAc,EACpBd,EAAMH,WAAY,EAClBG,EAAMjC,MAAQ,QAtBT,KA4BF2C,GADeA,EAAeD,QAA9BV,WACAW,G,gBC/BTW,EAAgB,CAClBC,IAAK,OACLC,YACAC,UAAW,CAAC,UAGVC,EAAcC,YAAeL,EAAeM,IAAUC,SAWtDC,EAAQC,YAAe,CACzBF,SAAO,mBACFD,IAAUjC,KAAO+B,GADf,cAEFM,EAAcrC,KAAOqC,EAAcH,SAFjC,cAGFlB,EAAehB,KAAOgB,EAAekB,SAHnC,cAIFI,IAAatC,KAAOsC,IAAaJ,SAJ/B,GAMPK,WAhBe,SAAAC,GAAoB,4BAChCA,EAAqB,CACpBC,kBAAmB,CACfC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAH/B,CAMnCC,OAWAC,UAAUC,IAKDC,EAAY,CAAEjB,QAAOkB,eAFXC,YAAanB,I,OClCpCoB,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUtB,MAAOiB,EAAUjB,MAA3B,SACI,cAAC,IAAD,CAAauB,OAAQ,KAAMC,UAAWP,EAAUC,eAAhD,SACI,eAAC,IAAD,WACI,cAAC,EAAD,IACA,cAAC,IAAD,aAKhBO,SAASC,eAAe,U,4GCrBtBC,EAAQC,YAAiB,QAAD,uCAAU,WAAM7D,GAAN,eAAA8D,EAAA,sEACfC,YAAS/D,GADM,cAC9BgE,EAD8B,yBAE7BA,GAF6B,2CAAV,uDAKxBC,EAAWJ,YAAiB,WAAD,uCAAa,WAAM7D,GAAN,eAAA8D,EAAA,sEACrBI,YAAYlE,GADS,cACpCgE,EADoC,yBAEnCA,GAFmC,2CAAb,uDAK3BG,EAASN,YAAiB,SAAD,sBAAW,4BAAAC,EAAA,sEACjBM,cADiB,cAChCJ,EADgC,yBAE/BA,GAF+B,4CAKpC3E,EAAcwE,YAAiB,UAAD,uCAAY,WAAM3E,GAAN,eAAA4E,EAAA,sEACvBO,YAAWnF,GADY,cACtC8E,EADsC,OAE5C1E,QAAQgF,IAAIN,GACZ1E,QAAQC,IAAIyE,GAHgC,kBAIrCA,GAJqC,2CAAZ,uDAOvB5E,EAAgB,CAAEwE,QAAOK,WAAUE,SAAQ9E,gB,8aCzB3CkF,EAAb,kDACI,WAAY3D,EAAS4D,GAAS,IAAD,8BACzB,cAAM5D,IACD4D,OAASA,EAFW,EADjC,mCAA+B/G,QCE/BgH,IAAMC,SAASC,QAAU,wCAEzB,IAAMC,EAAgB,SAAA1F,GAEduF,IAAMC,SAASG,QAAQC,OAAOC,cAD9B7F,EACA,iBAAwDA,GAEV,IAIhD8F,EAAW,SAAA7G,GACb,MAAIA,EAAM8G,SACA,IAAIV,EAAUpG,EAAM8G,SAASjF,KAAKY,QAASzC,EAAM8G,SAAST,QACzDrG,EAAM+G,QACP,IAAIX,EAAUpG,EAAM+G,QAAQC,WAAYhH,EAAM+G,QAAQV,QAEtD,IAAID,EAAUpG,EAAMyC,QAAS,MAM9BsD,EAAW,uCAAG,WAAMkB,GAAN,eAAAtB,EAAA,+EAEEW,IAAMY,KAAK,gBAAiB,CAC7CC,SAAUF,EAAKtF,KACfyF,MAAOH,EAAKG,MACZC,SAAUJ,EAAKI,WALA,cAEbxB,EAFa,OAOnBY,EAAcZ,EAAOhE,KAAKA,KAAKd,OAPZ,kBAQZ8E,EAAOhE,KAAKA,MARA,gCAUnBgF,EAAS,EAAD,IAVW,yDAAH,sDAcXjB,EAAQ,uCAAG,WAAMqB,GAAN,eAAAtB,EAAA,+EAEKW,IAAMY,KAAK,aAAcD,GAF9B,cAEVpB,EAFU,OAGhBY,EAAcZ,EAAOhE,KAAKA,KAAKd,OAHf,kBAIT8E,EAAOhE,KAAKA,MAJH,gCAMhBV,QAAQgF,IAAR,MACAU,EAAS,EAAD,IAPQ,yDAAH,sDAWRZ,EAAS,uCAAG,sBAAAN,EAAA,+EAEXW,IAAMgB,IAAI,eAFC,cAGjBb,IAHiB,kBAIV,CAAEJ,OAAQ,KAAMkB,KAAM,MAJZ,gCAMjBV,EAAS,EAAD,IANS,yDAAH,qDAUTX,EAAU,uCAAG,WAAMnF,GAAN,eAAA4E,EAAA,sEAElBc,EAAc1F,GAFI,SAGGuF,IAAMgB,IAAI,iBAHb,cAGZzB,EAHY,yBAIXA,EAAOhE,KAAKA,KAAKoF,MAJN,gCAMlBJ,EAAS,EAAD,IANU,yDAAH,sDAYVW,EAAc,uCAAG,8BAAA7B,EAAA,+EAEAW,IAAMgB,IAAI,qBAFV,cAEhBG,EAFgB,gBAGAnB,IAAMgB,IAAI,sBAHV,cAGhBI,EAHgB,+CAIXA,EAAQ7F,KAAK8F,YAJF,YAIiBF,EAAQ5F,KAAK8F,cAJ9B,kCAMtBd,EAAS,EAAD,IANc,0DAAH,qDAYde,EAAe,uCAAG,mCAAAjC,EAAA,6DAASkC,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,KAAhB,SAEjBC,EAFiB,UAENF,GAASC,EAAO,IAAM,MAFhB,OAGnBD,EAAK,gBAAYA,GAAU,MAHR,OAIpBA,GAASC,EAAO,IAAM,MAJF,OAISA,EAAI,eAAWA,GAAS,MAJjC,SAMFxB,IAAMgB,IAAN,iCAAoCS,IANlC,cAMjBlC,EANiB,OAOvB1E,QAAQC,IACJ,uEAEJD,QAAQC,IAAIyE,GAVW,kBAWhBA,EAAOhE,KAAKmG,cAXI,kCAavBnB,EAAS,EAAD,IAbe,0DAAH,sDAmBfoB,EAAgB,uCAAG,WAAMpG,GAAN,iBAAA8D,EAAA,sEAEpBoC,EAAQ,GAERA,EADAlG,EACK,4BAAwBA,EAAKqG,KAA7B,kBAA2CrG,EAAKsG,OAEhD,eANe,SAQH7B,IAAMgB,IAAIS,GARP,cAQlBlC,EARkB,yBASjBA,EAAOhE,KAAKA,MATK,gCAWxBgF,EAAS,EAAD,IAXgB,yDAAH,sDAehBuB,EAAiB,uCAAG,WAAMvG,GAAN,eAAA8D,EAAA,+EAEJW,IAAMY,KAAK,eAAgBrF,GAFvB,cAEnBgE,EAFmB,yBAGlBA,EAAOhE,KAAKA,KAAKwG,aAHC,gCAKzBxB,EAAS,EAAD,IALiB,yDAAH,sDASjByB,EAAoB,uCAAG,WAAMC,GAAN,eAAA5C,EAAA,+EAEPW,IAAMkC,OAAN,uBAA6BD,IAFtB,cAEtB1C,EAFsB,OAG5B1E,QAAQC,IAAIyE,GAHgB,kBAIrBA,GAJqB,gCAM5BgB,EAAS,EAAD,IANoB,yDAAH,uD,4GCvH3B4B,EAAgB/C,YAAiB,gBAAD,uCAAkB,WAAM7D,GAAN,eAAA8D,EAAA,sEAC/BsC,YAAiBpG,GADc,cAC9CgE,EAD8C,yBAE7CA,GAF6C,2CAAlB,uDAKhC6C,EAAehD,YAAiB,eAAD,uCAAiB,WAAM7D,GAAN,eAAA8D,EAAA,sEAC7ByC,YAAkBvG,GADW,cAC5CgE,EAD4C,yBAE3CA,GAF2C,2CAAjB,uDAK/B8C,EAAkBjD,YAAiB,kBAAD,uCAAoB,WAAM6C,GAAN,eAAA5C,EAAA,sEACnC2C,YAAqBC,GADc,cAClD1C,EADkD,yBAEjDA,GAFiD,2CAApB,uDAK3B+C,EAAsB,CAC/BD,kBACAF,gBACAC,iB,gCCzBJ,6CAEarH,EAAQwH,YAAa,U,gCCFlC,4MAAO,IAAM3I,EAAS,SAAA+B,GAAK,OAAIA,EAAMgF,KAAK/G,QAE7BW,EAAU,SAAAoB,GAAK,QAAKA,EAAMgF,KAAKlG,OAE/BC,EAAW,SAAAiB,GAAK,OAAIA,EAAMgF,KAAKlG,OAI/B+H,EAAc,SAAA7G,GAAK,OAAIA,EAAMgF,KAAKjH,OAElC+I,EAAgB,SAAA9G,GAAK,OAAIA,EAAMgF,KAAK8B,eAEpCC,EAAU,SAAA/G,GAAK,OAAIA,EAAMgF,KAAKA,KAAKtF,O,4GCJnCQ,EAAsB,CAAEC,cALfsD,YAAiB,gBAAD,sBAAkB,4BAAAC,EAAA,sEAC/B6B,cAD+B,cAC9C3B,EAD8C,yBAE7CA,GAF6C,8C,4GCAlD5C,EAAeyC,YAAiB,eAAD,uCAAiB,WAAM7D,GAAN,eAAA8D,EAAA,sEAC7BiC,YAAgB/F,GADa,cAC5CgE,EAD4C,yBAE3CA,GAF2C,2CAAjB,uDAIxB7C,EAAqB,CAAEC,iB,0KCO9BW,EAAYlC,YAAY,CAC1BC,KAAM,OACNC,aAXiB,CACjBqF,KAAM,GACNlG,MAAO,KACPb,QAAQ,EACR6I,eAAe,EACfjH,WAAW,EACX9B,MAAO,MAMP+B,SAAU,CACNkH,gBAAiB,SAAAhH,GACbA,EAAM8G,eAAgB,GAE1BG,iBAAkB,SAAAjH,GACdA,EAAM8G,eAAgB,GAE1B/G,WAAY,SAAAC,GACRA,EAAMjC,MAAQ,OAGtBkC,eAAa,mBACRjB,IAAc6E,SAASzD,SAAU,SAAAJ,GAC9BA,EAAMH,WAAY,EAClBG,EAAMjC,MAAQ,KACdiC,EAAM/B,QAAS,KAJV,cAMRe,IAAc6E,SAASxD,WAAY,SAACL,EAAD,GAAyB,IAAfM,EAAc,EAAdA,QAC1CN,EAAMgF,KAAKtF,KAAOY,EAAQ0E,KAAKE,SAC/BlF,EAAMgF,KAAKG,MAAQ7E,EAAQ0E,KAAKG,MAChCnF,EAAMlB,MAAQwB,EAAQxB,MACtBkB,EAAM/B,QAAS,EACf+B,EAAMH,WAAY,KAXb,cAaRb,IAAc6E,SAAStD,UAAW,SAACP,EAAD,GAAuB,IAAbjC,EAAY,EAAZA,MACzCiC,EAAMH,WAAY,EAClBG,EAAMjC,MAAQA,EAAMyC,WAff,cAkBRxB,IAAcwE,MAAMpD,SAAU,SAAAJ,GAC3BA,EAAMH,WAAY,EAClBG,EAAMjC,MAAQ,KACdiC,EAAM/B,QAAS,KArBV,cAwBRe,IAAcwE,MAAMnD,WAAY,SAACL,EAAD,GAAyB,IAAfM,EAAc,EAAdA,QACvCpB,QAAQC,IAAImB,GACZN,EAAMgF,KAAKtF,KAAOY,EAAQ0E,KAAKE,SAC/BlF,EAAMgF,KAAKG,MAAQ7E,EAAQ0E,KAAKG,MAChCnF,EAAMlB,MAAQwB,EAAQxB,MACtBkB,EAAM/B,QAAS,EACf+B,EAAMH,WAAY,KA9Bb,cAiCRb,IAAcwE,MAAMjD,UAAW,SAACP,EAAD,GAAuB,IAAbjC,EAAY,EAAZA,MACtCiC,EAAMH,WAAY,EAClBG,EAAMjC,MAAQA,EAAMyC,WAnCf,cAsCRxB,IAAc+E,OAAO3D,SAAU,SAAAJ,GAC5BA,EAAMH,WAAY,EAClBG,EAAMjC,MAAQ,QAxCT,cA0CRiB,IAAc+E,OAAO1D,WAAY,SAACL,EAAD,GAAwB,EAAdM,QACxCN,EAAMgF,KAAO,GACbhF,EAAMlB,MAAQ,KACdkB,EAAM/B,QAAS,EACf+B,EAAMH,WAAY,EAClBG,EAAM8G,eAAgB,KA/CjB,cAiDR9H,IAAc+E,OAAOxD,UAAW,SAACP,EAAD,GAAuB,IAAbjC,EAAY,EAAZA,MACvCiC,EAAMH,WAAY,EAClBG,EAAMjC,MAAQA,EAAMyC,WAnDf,cAqDRxB,IAAcC,YAAYmB,SAAU,SAAAJ,GACjCA,EAAMH,WAAY,EAClBG,EAAMjC,MAAQ,QAvDT,cAyDRiB,IAAcC,YAAYoB,WAAY,SAACL,EAAD,GAAyB,IAAfM,EAAc,EAAdA,QAC7CN,EAAMgF,KAAKtF,KAAOY,EAAQ4E,SAC1BlF,EAAMgF,KAAKG,MAAQ7E,EAAQ6E,MAC3BnF,EAAMgF,KAAKkC,QAAU5G,EAAQ4G,QAC7BlH,EAAM/B,QAAS,EACf+B,EAAMH,WAAY,KA9Db,cAgERb,IAAcC,YAAYsB,UAAW,SAACP,EAAD,GAAuB,IAAbjC,EAAY,EAAZA,MAE5CiC,EAAMlB,MAAQ,KACdkB,EAAM/B,QAAS,EAEf+B,EAAMH,WAAY,EAClBG,EAAMjC,MAAQA,EAAMyC,WAtEf,cAwERpB,KAAQ,SAAAY,GACLA,EAAMgF,KAAO,GACbhF,EAAMlB,MAAQ,KACdkB,EAAM/B,QAAS,EACf+B,EAAM8G,eAAgB,EACtB9G,EAAMH,WAAY,EAClBG,EAAMjC,MAAQ,QA9ET,KAmFV,EACH4D,EAAUlB,QADCuG,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,iBAAkBlH,EAA3C,EAA2CA,WAEnC4B,O,sPC5FTK,EAAevC,YAAY,CAC7BC,KAAM,UACNC,aAlBiB,CACjBC,KAAM,GACNuH,YAAa,EACbtH,WAAW,EACX9B,MAAO,KACPqJ,SAAU,KACVC,0BAA0B,EAC1BC,qBAAqB,EACrBC,uBAAuB,EACvBC,uBAAuB,EACvBC,MAAO,EACPC,YAAa,EACbC,UAAW,EACXzB,MAAO,GAMPpG,SAAU,CACN8H,2BAA4B,SAAC5H,EAAD,GAAyB,IAAfM,EAAc,EAAdA,QAClCN,EAAMqH,0BAA2B,EACjCrH,EAAMsH,qBAAsB,EAC5BtH,EAAMoH,SAAW9G,GAErBuH,4BAA6B,SAAA7H,GACzBA,EAAMqH,0BAA2B,GAErCS,qBAAsB,SAAA9H,GAClBA,EAAMsH,qBAAsB,GAEhCS,uBAAwB,SAAA/H,GACpBA,EAAMsH,qBAAsB,EAC5BtH,EAAMoH,SAAW,MAErBY,qBAAsB,SAAAhI,GAClBA,EAAMuH,uBAAwB,GAElCU,sBAAuB,SAAAjI,GACnBA,EAAMuH,uBAAwB,GAElCW,uBAAwB,SAAAlI,GACpBA,EAAMwH,uBAAwB,GAElCW,yBAA0B,SAAAnI,GACtBA,EAAMwH,uBAAwB,GAElCY,SAAU,SAACpI,EAAD,GAAyB,IAAfM,EAAc,EAAdA,QAChBN,EAAMkG,MAAQ5F,GAElBP,WAAY,SAAAC,GACRA,EAAMjC,MAAQ,OAGtBkC,eAAa,mBACR0G,IAAoBH,cAAcpG,SAAU,SAAAJ,GACzCA,EAAMH,WAAY,EAClBG,EAAMjC,MAAQ,QAHT,cAKR4I,IAAoBH,cAAcnG,WAAY,SAACL,EAAD,GAAyB,IAAfM,EAAc,EAAdA,QACrDN,EAAMJ,KAAN,YAAiBU,EAAQyF,cACzB/F,EAAMmH,YAAc7G,EAAQ+H,aACxB/H,EAAQ2F,OACRjG,EAAM0H,YAAcpH,EAAQ2F,MAE5B3F,EAAQqH,YACR3H,EAAM2H,UAAYrH,EAAQqH,WAE1BrH,EAAQmH,QACRzH,EAAMyH,MAAQnH,EAAQmH,OAE1BzH,EAAMH,WAAY,KAjBb,cAmBR8G,IAAoBH,cAAcjG,UAAW,SAACP,EAAD,GAAuB,IAAbjC,EAAY,EAAZA,MACpDiC,EAAMH,WAAY,EAClBG,EAAMjC,MAAQA,EAAMyC,WArBf,cAwBRmG,IAAoBF,aAAarG,SAAU,SAAAJ,GACxCA,EAAMH,WAAY,EAClBG,EAAMjC,MAAQ,QA1BT,cA4BR4I,IAAoBF,aAAapG,WAAY,SAACL,EAAD,GAAyB,IAAfM,EAAc,EAAdA,QACpDN,EAAMJ,KAAN,CAAcU,GAAd,mBAA0BN,EAAMJ,OAChCI,EAAMH,WAAY,EAClBG,EAAMwH,uBAAwB,KA/BzB,cAiCRb,IAAoBF,aAAalG,UAAW,SAACP,EAAD,GAAuB,IAAbjC,EAAY,EAAZA,MACnDiC,EAAMH,WAAY,EAClBG,EAAMjC,MAAQA,EAAMyC,WAnCf,cAsCRmG,IAAoBD,gBAAgBtG,SAAU,SAAAJ,GAC3CA,EAAMH,WAAY,EAClBG,EAAMjC,MAAQ,KACdiC,EAAMsH,qBAAsB,KAzCvB,cA2CRX,IAAoBD,gBAAgBrG,WAAY,SAAAL,GAC7Cd,QAAQC,IAAI,2BACZa,EAAMH,WAAY,EAClBG,EAAMsH,qBAAsB,EAC5BtH,EAAMqH,0BAA2B,EACjCnI,QAAQC,IAAI,2BAhDP,cAkDRwH,IAAoBD,gBAAgBnG,UAAW,SAACP,EAAD,GAAuB,IAAbjC,EAAY,EAAZA,MACtDiC,EAAMH,WAAY,EAClBG,EAAMjC,MAAQA,EAAMyC,QACpBR,EAAMsH,qBAAsB,EAC5BtH,EAAMqH,0BAA2B,KAtD5B,cAyDRjI,KAAQ,SAAAY,GACLA,EAAMJ,KAAO,GACbI,EAAMmH,YAAc,EACpBnH,EAAM0H,YAAc,EACpB1H,EAAMyH,MAAQ,EACdzH,EAAM2H,UAAY,EAClB3H,EAAMkG,MAAQ,EACdlG,EAAMuH,uBAAwB,EAC9BvH,EAAMwH,uBAAwB,EAC9BxH,EAAMH,WAAY,EAClBG,EAAMjC,MAAQ,QAnET,KAwEV,EAWHiE,EAAavB,QAVbuH,EADG,EACHA,qBACAC,EAFG,EAEHA,sBAEAE,GAJG,EAGHD,uBAHG,EAIHC,0BAGAP,GAPG,EAKHQ,SALG,EAMHrI,WANG,EAOH6H,4BACAC,EARG,EAQHA,4BARG,EASHC,qBATG,EAUHC,uBAEW/F,O,gCC/If,kTAAO,IAAMwE,EAAgB,SAAAxG,GACzB,OAAOA,EAAMsI,QAAQ1I,MAGZ2I,EAAa,SAAAvI,GAAK,OAAIA,EAAMsI,QAAQnB,aAEpCtH,EAAY,SAAAG,GAAK,OAAIA,EAAMsI,QAAQzI,WAEnC2I,EAAqB,SAAAxI,GAAK,OAAIA,EAAMsI,QAAQf,uBAE5CD,EAAsB,SAAAtH,GAAK,OACpCA,EAAMsI,QAAQjB,0BAELG,EAAwB,SAAAxH,GAAK,OACtCA,EAAMsI,QAAQd,uBAELiB,EAAwB,SAAAzI,GAAK,OAAIA,EAAMsI,QAAQhB,qBAE/CoB,EAAc,SAAA1I,GAAK,OAAIA,EAAMsI,QAAQlB,UAErC1J,EAAiB,SAAAsC,GAAK,OAAIA,EAAMsI,QAAQvK,Q,gCCpBrD,sGAeO,IAAMiD,EAAe,SAAAhB,GACxB,IAAM4D,EAAS,GAoBf,OAlBAA,EAAO+E,QACoC,IAAvC3I,EAAM4I,UAAUjI,YAAYkI,OACtB,GACA7I,EAAM4I,UAAUjI,YAAYmI,KAAI,SAAAC,GAAE,MAAK,CACnCC,IAAKD,EAAGE,SACRC,SAAUH,EAAGI,IAAI,GAAGzJ,SAGlCkE,EAAOwF,OACmC,IAAtCpJ,EAAM4I,UAAUhI,WAAWiI,OACrB,GACA7I,EAAM4I,UAAUhI,WAAWkI,KAAI,SAAAC,GAAE,MAAK,CAClCC,IAAKD,EAAGE,SACRC,SAAUH,EAAGI,IAAI,GAAGzJ,SAElCkE,EAAO/C,aAAeb,EAAM4I,UAAU/H,aACtC+C,EAAO9C,YAAcd,EAAM4I,UAAU9H,YACrC5B,QAAQC,IAAI,wBAAyByE,GAC9BA,GAGEyF,EAAqB,SAAArJ,GAAK,OAAIA,EAAM4I,UAAU/I,WAE9CjC,EAAmB,SAAAoC,GAAK,OAAIA,EAAM4I,UAAU7K,Q,gCCzCzD,wIAAO,IAEMuL,EAAmB,SAAAtJ,GAAK,OACjCA,EAAM0F,WAAW9F,KAAKiJ,OAAS,GAEtBU,EAAmB,SAAAvJ,GAAK,OACjCA,EAAM0F,WAAW9F,KAAK4J,QAAO,SAAAT,GAAE,OAAIA,EAAGK,WAE7BK,EAAoB,SAAAzJ,GAAK,OAClCA,EAAM0F,WAAW9F,KAAK4J,QAAO,SAAAT,GAAE,OAAKA,EAAGK,WAE9B5L,EAAkB,SAAAwC,GAAK,OAAIA,EAAM0F,WAAW3H,Q,gCCXzD,iBAKe2L,IAHf,WACI,OAAO,qBAAKC,UAAU,SAAf,0B","file":"static/js/main.5f2dba2c.chunk.js","sourcesContent":["import { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { isErrorCategory } from '@redux/categories/categories-selector';\r\nimport { isErrorFinance } from '@redux/finance/finance-selector';\r\nimport { isErrorStatistic } from '@redux/statistic/statistic-selector';\r\n\r\nconst Error = () => {\r\n    const errorCategory = useSelector(isErrorCategory);\r\n    const errorFinance = useSelector(isErrorFinance);\r\n    const errorStatistic = useSelector(isErrorStatistic);\r\n\r\n    useEffect(() => {\r\n        if (errorCategory) {\r\n            toast.error(errorCategory);\r\n        }\r\n        if (errorFinance) {\r\n            toast.error(errorFinance);\r\n        }\r\n        if (errorStatistic) {\r\n            toast.error(errorStatistic);\r\n        }\r\n    }, [errorCategory, errorFinance, errorStatistic]);\r\n    return <></>;\r\n};\r\n\r\nexport default Error;\r\n","import { Navigate } from 'react-router-dom';\r\n\r\nexport const withAuth = (isAuth, Component) => {\r\n    if (isAuth) {\r\n        return Component ? Component : <Navigate to=\"/home\" />;\r\n    } else {\r\n        return <Navigate to=\"/login\" />;\r\n    }\r\n};\r\n","import { lazy, Suspense, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Route, Routes } from 'react-router-dom';\r\n\r\nimport Error from '@component/errorApp';\r\nimport Loader from '@component/spinnerLoader/spinnerLoader';\r\n\r\nimport { withAuth } from '@hoc/withAuth';\r\nimport { isAuth, isToken, getToken } from '@redux/user/user-selector';\r\nimport { userOperation } from '@redux/user/user-operation';\r\nimport { clear } from '@redux/global/global-action';\r\n\r\nconst Dashboard = lazy(() => import('./pages/dashboard'));\r\nconst RegistrationPage = lazy(() => import('./pages/registration'));\r\nconst LoginPage = lazy(() => import('./pages/login'));\r\n\r\nfunction App() {\r\n    const dispatch = useDispatch();\r\n    const isUserToken = useSelector(isToken);\r\n    const isUserAuth = useSelector(isAuth);\r\n    const token = useSelector(getToken);\r\n\r\n    useEffect(() => {\r\n        if (isUserToken && !isUserAuth) {\r\n            dispatch(userOperation.currentUser(token));\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        console.log('Use effect in app', isUserAuth);\r\n        if (!isUserAuth && !isUserToken) {\r\n            dispatch(clear());\r\n        }\r\n    }, [isUserAuth, isUserToken]);\r\n\r\n    return (\r\n        <>\r\n            <Suspense fallback={<Loader />}>\r\n                {isUserAuth === isUserToken && (\r\n                    <Routes>\r\n                        <Route path=\"login\" element={<LoginPage />} />\r\n                        <Route path=\"register\" element={<RegistrationPage />} />\r\n\r\n                        <Route path=\"/\" element={withAuth(isUserAuth)} />\r\n                        <Route\r\n                            path=\"/*\"\r\n                            element={withAuth(isUserAuth, <Dashboard />)}\r\n                        />\r\n                    </Routes>\r\n                )}\r\n                <Error />\r\n            </Suspense>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nimport { categoriesOperation } from './categories-operation';\r\nimport { clear } from '../global/global-action';\r\n\r\nconst initialState = {\r\n    data: [],\r\n    isLoading: false,\r\n    error: null,\r\n};\r\n\r\nconst categoriesSlice = createSlice({\r\n    name: 'categories',\r\n    initialState,\r\n    reducers: {\r\n        clearError: state => {\r\n            state.error = null;\r\n        },\r\n    },\r\n    extraReducers: {\r\n        [categoriesOperation.getCategories.pending]: state => {\r\n            state.isLoading = true;\r\n            state.error = null;\r\n        },\r\n        [categoriesOperation.getCategories.fulfilled]: (state, { payload }) => {\r\n            state.data = [...payload];\r\n            state.isLoading = false;\r\n        },\r\n        [categoriesOperation.getCategories.rejected]: (state, { error }) => {\r\n            state.isLoading = false;\r\n            state.error = error.message;\r\n        },\r\n        [clear]: state => {\r\n            state.data = [];\r\n            state.isLoading = false;\r\n            state.error = null;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { clearError } = categoriesSlice.actions;\r\nexport default categoriesSlice;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nimport { statisticOperation } from './statistic-operation';\r\nimport { clear } from '../global/global-action';\r\n\r\nconst initialState = {\r\n    dataExpense: [],\r\n    dataIncome: [],\r\n    totalExpense: 0,\r\n    totalIncome: 0,\r\n    isLoading: false,\r\n    error: null,\r\n};\r\n\r\nconst statisticSlice = createSlice({\r\n    name: 'statistic',\r\n    initialState,\r\n    reducers: {\r\n        clearError: state => {\r\n            state.error = null;\r\n        },\r\n    },\r\n    extraReducers: {\r\n        [statisticOperation.getStatistic.pending]: state => {\r\n            state.isLoading = true;\r\n            state.error = null;\r\n        },\r\n        [statisticOperation.getStatistic.fulfilled]: (state, { payload }) => {\r\n            state.totalExpense = payload.allExpense;\r\n            state.totalIncome = payload.allIncome;\r\n            state.dataExpense = payload.transactionsExpense;\r\n            state.dataIncome = payload.transactionsIncome;\r\n            state.isLoading = false;\r\n        },\r\n        [statisticOperation.getStatistic.rejected]: (state, { error }) => {\r\n            state.isLoading = false;\r\n            state.error = error.message;\r\n        },\r\n        [clear]: state => {\r\n            state.dataExpense = [];\r\n            state.dataIncome = [];\r\n            state.totalExpense = 0;\r\n            state.totalIncome = 0;\r\n            state.isLoading = false;\r\n            state.error = null;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { clearError } = statisticSlice.actions;\r\nexport default statisticSlice;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist';\r\nimport logger from 'redux-logger';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport categorySlice from './categories/categories-slice';\r\nimport statisticSlice from './statistic/statistic-slice';\r\nimport userSlice from './user/user-slice';\r\nimport financeSlice from './finance/finance-slice';\r\n\r\nconst persistConfig = {\r\n    key: 'user',\r\n    storage,\r\n    whitelist: ['token'],\r\n};\r\n\r\nconst userReducer = persistReducer(persistConfig, userSlice.reducer);\r\n\r\nconst middleware = getDefaultMiddleware => [\r\n    ...getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n        },\r\n    }),\r\n    logger,\r\n];\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        [userSlice.name]: userReducer,\r\n        [categorySlice.name]: categorySlice.reducer,\r\n        [statisticSlice.name]: statisticSlice.reducer,\r\n        [financeSlice.name]: financeSlice.reducer,\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistedStore = persistStore(store);\r\n\r\nexport const rootStore = { store, persistedStore };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport '@style/style.scss';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport App from '@root/App';\r\nimport { rootStore } from '@redux/store';\r\nimport 'react-datetime/css/react-datetime.css';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={rootStore.store}>\r\n            <PersistGate loader={null} persistor={rootStore.persistedStore}>\r\n                <BrowserRouter>\r\n                    <App />\r\n                    <ToastContainer />\r\n                </BrowserRouter>\r\n            </PersistGate>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { registerAPI, loginAPI, logoutAPI, getUserAPI } from '@api';\r\n\r\nconst login = createAsyncThunk('login', async data => {\r\n    const result = await loginAPI(data);\r\n    return result;\r\n});\r\n\r\nconst register = createAsyncThunk('register', async data => {\r\n    const result = await registerAPI(data);\r\n    return result;\r\n});\r\n\r\nconst logout = createAsyncThunk('logout', async () => {\r\n    const result = await logoutAPI();\r\n    return result;\r\n});\r\n\r\nconst currentUser = createAsyncThunk('current', async token => {\r\n    const result = await getUserAPI(token);\r\n    console.dir(result);\r\n    console.log(result);\r\n    return result;\r\n});\r\n\r\nexport const userOperation = { login, register, logout, currentUser };\r\n","export class HttpError extends Error {\r\n    constructor(message, status) {\r\n        super(message);\r\n        this.status = status;\r\n    }\r\n}\r\n","import axios from 'axios';\r\nimport { HttpError } from '../error';\r\naxios.defaults.baseURL = 'https://wallet-serv.herokuapp.com/api';\r\n\r\nconst setAxiosToken = token => {\r\n    if (token) {\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    } else {\r\n        axios.defaults.headers.common.Authorization = '';\r\n    }\r\n};\r\n\r\nconst getError = error => {\r\n    if (error.response) {\r\n        throw new HttpError(error.response.data.message, error.response.status);\r\n    } else if (error.request) {\r\n        throw new HttpError(error.request.statusText, error.request.status);\r\n    } else {\r\n        throw new HttpError(error.message, 500);\r\n    }\r\n};\r\n\r\n//  ----------------   USER   -----------------------\r\n\r\nexport const registerAPI = async user => {\r\n    try {\r\n        const result = await axios.post('auth/register', {\r\n            userName: user.name,\r\n            email: user.email,\r\n            password: user.password,\r\n        });\r\n        setAxiosToken(result.data.data.token);\r\n        return result.data.data;\r\n    } catch (error) {\r\n        getError(error);\r\n    }\r\n};\r\n\r\nexport const loginAPI = async user => {\r\n    try {\r\n        const result = await axios.post('auth/login', user);\r\n        setAxiosToken(result.data.data.token);\r\n        return result.data.data;\r\n    } catch (error) {\r\n        console.dir(error);\r\n        getError(error);\r\n    }\r\n};\r\n\r\nexport const logoutAPI = async () => {\r\n    try {\r\n        await axios.get('auth/logout');\r\n        setAxiosToken();\r\n        return { status: 'ok', code: 204 };\r\n    } catch (error) {\r\n        getError(error);\r\n    }\r\n};\r\n\r\nexport const getUserAPI = async token => {\r\n    try {\r\n        setAxiosToken(token);\r\n        const result = await axios.get('users/current');\r\n        return result.data.data.user;\r\n    } catch (error) {\r\n        getError(error);\r\n    }\r\n};\r\n\r\n// -------------  Category  --------------------------\r\n\r\nexport const getCategoryAPI = async () => {\r\n    try {\r\n        const resultD = await axios.get('categories/income');\r\n        const resultC = await axios.get('categories/expense');\r\n        return [...resultC.data.categories, ...resultD.data.categories];\r\n    } catch (error) {\r\n        getError(error);\r\n    }\r\n};\r\n\r\n// ------------ Statistic ----------------------------\r\n\r\nexport const getStatisticAPI = async ({ month, year }) => {\r\n    try {\r\n        const query = `${month || year ? '?' : null}${\r\n            month ? `month=${month}` : null\r\n        }${month && year ? '&' : null}${year ? `year=${year}` : null}`;\r\n\r\n        const result = await axios.get(`transactions/statistics${query}`);\r\n        console.log(\r\n            '------------------------------statistic api------------------------',\r\n        );\r\n        console.log(result);\r\n        return result.data.transactions;\r\n    } catch (error) {\r\n        getError(error);\r\n    }\r\n};\r\n\r\n// ------------  Finance (operations) ----------------------------\r\n\r\nexport const getOperationsAPI = async data => {\r\n    try {\r\n        let query = '';\r\n        if (data) {\r\n            query = `transactions?page=${data.page}&limit=${data.limit}`;\r\n        } else {\r\n            query = `transactions`;\r\n        }\r\n        const result = await axios.get(query);\r\n        return result.data.data;\r\n    } catch (error) {\r\n        getError(error);\r\n    }\r\n};\r\n\r\nexport const addTransactionAPI = async data => {\r\n    try {\r\n        const result = await axios.post('transactions', data);\r\n        return result.data.data.transaction;\r\n    } catch (error) {\r\n        getError(error);\r\n    }\r\n};\r\n\r\nexport const deleteTransactionAPI = async id => {\r\n    try {\r\n        const result = await axios.delete(`transactions/${id}`);\r\n        console.log(result);\r\n        return result;\r\n    } catch (error) {\r\n        getError(error);\r\n    }\r\n};\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport {\r\n    deleteTransactionAPI,\r\n    getOperationsAPI,\r\n    addTransactionAPI,\r\n} from '@api';\r\n\r\nconst getOperations = createAsyncThunk('getOperations', async data => {\r\n    const result = await getOperationsAPI(data);\r\n    return result;\r\n});\r\n\r\nconst addOperation = createAsyncThunk('addOperation', async data => {\r\n    const result = await addTransactionAPI(data);\r\n    return result;\r\n});\r\n\r\nconst deleteOperation = createAsyncThunk('deleteOperation', async id => {\r\n    const result = await deleteTransactionAPI(id);\r\n    return result;\r\n});\r\n\r\nexport const getFinanceOpertaion = {\r\n    deleteOperation,\r\n    getOperations,\r\n    addOperation,\r\n};\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const clear = createAction('clear');\r\n","export const isAuth = state => state.user.isAuth;\r\n\r\nexport const isToken = state => (state.user.token ? true : false);\r\n\r\nexport const getToken = state => state.user.token;\r\n\r\nexport const isLoading = state => state.user.isLoading;\r\n\r\nexport const isErrorUser = state => state.user.error;\r\n\r\nexport const isModalLogout = state => state.user.isModalLogout;\r\n\r\nexport const getName = state => state.user.user.name;\r\n\r\nexport const getUser = state => state.user.user;\r\n\r\nexport const getBalance = state => state.user.user.balance;\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { getCategoryAPI } from '@api';\r\n\r\nconst getCategories = createAsyncThunk('getCategories', async () => {\r\n    const result = await getCategoryAPI();\r\n    return result;\r\n});\r\n\r\nexport const categoriesOperation = { getCategories };\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { getStatisticAPI } from '@api';\r\n\r\nconst getStatistic = createAsyncThunk('getStatistic', async data => {\r\n    const result = await getStatisticAPI(data);\r\n    return result;\r\n});\r\nexport const statisticOperation = { getStatistic };\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nimport { userOperation } from './user-operation';\r\nimport { clear } from '../global/global-action';\r\n\r\nconst initialState = {\r\n    user: {},\r\n    token: null,\r\n    isAuth: false,\r\n    isModalLogout: false,\r\n    isLoading: false,\r\n    error: null,\r\n};\r\n\r\nconst userSlice = createSlice({\r\n    name: 'user',\r\n    initialState,\r\n    reducers: {\r\n        openModalLogout: state => {\r\n            state.isModalLogout = true;\r\n        },\r\n        closeModalLogout: state => {\r\n            state.isModalLogout = false;\r\n        },\r\n        clearError: state => {\r\n            state.error = null;\r\n        },\r\n    },\r\n    extraReducers: {\r\n        [userOperation.register.pending]: state => {\r\n            state.isLoading = true;\r\n            state.error = null;\r\n            state.isAuth = false;\r\n        },\r\n        [userOperation.register.fulfilled]: (state, { payload }) => {\r\n            state.user.name = payload.user.userName;\r\n            state.user.email = payload.user.email;\r\n            state.token = payload.token;\r\n            state.isAuth = true;\r\n            state.isLoading = false;\r\n        },\r\n        [userOperation.register.rejected]: (state, { error }) => {\r\n            state.isLoading = false;\r\n            state.error = error.message;\r\n        },\r\n\r\n        [userOperation.login.pending]: state => {\r\n            state.isLoading = true;\r\n            state.error = null;\r\n            state.isAuth = false;\r\n        },\r\n\r\n        [userOperation.login.fulfilled]: (state, { payload }) => {\r\n            console.log(payload);\r\n            state.user.name = payload.user.userName;\r\n            state.user.email = payload.user.email;\r\n            state.token = payload.token;\r\n            state.isAuth = true;\r\n            state.isLoading = false;\r\n        },\r\n\r\n        [userOperation.login.rejected]: (state, { error }) => {\r\n            state.isLoading = false;\r\n            state.error = error.message;\r\n        },\r\n\r\n        [userOperation.logout.pending]: state => {\r\n            state.isLoading = true;\r\n            state.error = null;\r\n        },\r\n        [userOperation.logout.fulfilled]: (state, { payload }) => {\r\n            state.user = {};\r\n            state.token = null;\r\n            state.isAuth = false;\r\n            state.isLoading = false;\r\n            state.isModalLogout = false;\r\n        },\r\n        [userOperation.logout.rejected]: (state, { error }) => {\r\n            state.isLoading = false;\r\n            state.error = error.message;\r\n        },\r\n        [userOperation.currentUser.pending]: state => {\r\n            state.isLoading = true;\r\n            state.error = null;\r\n        },\r\n        [userOperation.currentUser.fulfilled]: (state, { payload }) => {\r\n            state.user.name = payload.userName;\r\n            state.user.email = payload.email;\r\n            state.user.balance = payload.balance;\r\n            state.isAuth = true;\r\n            state.isLoading = false;\r\n        },\r\n        [userOperation.currentUser.rejected]: (state, { error }) => {\r\n            // if (error.code === 'ERR_BAD_REQUEST') {\r\n            state.token = null;\r\n            state.isAuth = false;\r\n            // }\r\n            state.isLoading = false;\r\n            state.error = error.message;\r\n        },\r\n        [clear]: state => {\r\n            state.user = {};\r\n            state.token = null;\r\n            state.isAuth = false;\r\n            state.isModalLogout = false;\r\n            state.isLoading = false;\r\n            state.error = null;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { openModalLogout, closeModalLogout, clearError } =\r\n    userSlice.actions;\r\nexport default userSlice;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nimport { getFinanceOpertaion } from './finance-operation';\r\nimport { clear } from '../global/global-action';\r\n\r\nconst initialState = {\r\n    data: [],\r\n    userBalance: 0,\r\n    isLoading: false,\r\n    error: null,\r\n    deleteId: null,\r\n    isModalDeleteTransaction: false,\r\n    isDeleteTransaction: false,\r\n    isModalAddTransaction: false,\r\n    isSaveModalDateStatic: false,\r\n    total: 0,\r\n    currentPage: 1,\r\n    totalPage: 1,\r\n    limit: 5,\r\n};\r\n\r\nconst financeSlice = createSlice({\r\n    name: 'finance',\r\n    initialState,\r\n    reducers: {\r\n        openModalDeleteTransaction: (state, { payload }) => {\r\n            state.isModalDeleteTransaction = true;\r\n            state.isDeleteTransaction = false;\r\n            state.deleteId = payload;\r\n        },\r\n        closeModalDeleteTransaction: state => {\r\n            state.isModalDeleteTransaction = false;\r\n        },\r\n        setDeleteTransaction: state => {\r\n            state.isDeleteTransaction = true;\r\n        },\r\n        clearDeleteTransaction: state => {\r\n            state.isDeleteTransaction = false;\r\n            state.deleteId = null;\r\n        },\r\n        openModalTransaction: state => {\r\n            state.isModalAddTransaction = true;\r\n        },\r\n        closeModalTransaction: state => {\r\n            state.isModalAddTransaction = false;\r\n        },\r\n        setSaveModalDateStatic: state => {\r\n            state.isSaveModalDateStatic = true;\r\n        },\r\n        clearSaveModalDateStatic: state => {\r\n            state.isSaveModalDateStatic = false;\r\n        },\r\n        setLimit: (state, { payload }) => {\r\n            state.limit = payload;\r\n        },\r\n        clearError: state => {\r\n            state.error = null;\r\n        },\r\n    },\r\n    extraReducers: {\r\n        [getFinanceOpertaion.getOperations.pending]: state => {\r\n            state.isLoading = true;\r\n            state.error = null;\r\n        },\r\n        [getFinanceOpertaion.getOperations.fulfilled]: (state, { payload }) => {\r\n            state.data = [...payload.transactions];\r\n            state.userBalance = payload.user_balance;\r\n            if (payload.page) {\r\n                state.currentPage = payload.page;\r\n            }\r\n            if (payload.totalPage) {\r\n                state.totalPage = payload.totalPage;\r\n            }\r\n            if (payload.total) {\r\n                state.total = payload.total;\r\n            }\r\n            state.isLoading = false;\r\n        },\r\n        [getFinanceOpertaion.getOperations.rejected]: (state, { error }) => {\r\n            state.isLoading = false;\r\n            state.error = error.message;\r\n        },\r\n\r\n        [getFinanceOpertaion.addOperation.pending]: state => {\r\n            state.isLoading = true;\r\n            state.error = null;\r\n        },\r\n        [getFinanceOpertaion.addOperation.fulfilled]: (state, { payload }) => {\r\n            state.data = [payload, ...state.data];\r\n            state.isLoading = false;\r\n            state.isSaveModalDateStatic = true;\r\n        },\r\n        [getFinanceOpertaion.addOperation.rejected]: (state, { error }) => {\r\n            state.isLoading = false;\r\n            state.error = error.message;\r\n        },\r\n\r\n        [getFinanceOpertaion.deleteOperation.pending]: state => {\r\n            state.isLoading = true;\r\n            state.error = null;\r\n            state.isDeleteTransaction = false;\r\n        },\r\n        [getFinanceOpertaion.deleteOperation.fulfilled]: state => {\r\n            console.log('11111111111111111111111');\r\n            state.isLoading = false;\r\n            state.isDeleteTransaction = true;\r\n            state.isModalDeleteTransaction = false;\r\n            console.log('22222222222222222222');\r\n        },\r\n        [getFinanceOpertaion.deleteOperation.rejected]: (state, { error }) => {\r\n            state.isLoading = false;\r\n            state.error = error.message;\r\n            state.isDeleteTransaction = false;\r\n            state.isModalDeleteTransaction = false;\r\n        },\r\n\r\n        [clear]: state => {\r\n            state.data = [];\r\n            state.userBalance = 0;\r\n            state.currentPage = 1;\r\n            state.total = 0;\r\n            state.totalPage = 1;\r\n            state.limit = 5;\r\n            state.isModalAddTransaction = false;\r\n            state.isSaveModalDateStatic = false;\r\n            state.isLoading = false;\r\n            state.error = null;\r\n        },\r\n    },\r\n});\r\n\r\nexport const {\r\n    openModalTransaction,\r\n    closeModalTransaction,\r\n    setSaveModalDateStatic,\r\n    clearSaveModalDateStatic,\r\n    setLimit,\r\n    clearError,\r\n    openModalDeleteTransaction,\r\n    closeModalDeleteTransaction,\r\n    setDeleteTransaction,\r\n    clearDeleteTransaction,\r\n} = financeSlice.actions;\r\nexport default financeSlice;\r\n","export const getOperations = state => {\r\n    return state.finance.data;\r\n};\r\n\r\nexport const getBalance = state => state.finance.userBalance;\r\n\r\nexport const isLoading = state => state.finance.isLoading;\r\n\r\nexport const isModalTransaction = state => state.finance.isModalAddTransaction;\r\n\r\nexport const isDeleteTransaction = state =>\r\n    state.finance.isModalDeleteTransaction;\r\n\r\nexport const isSaveModalDateStatic = state =>\r\n    state.finance.isSaveModalDateStatic;\r\n\r\nexport const isTransactionDeleting = state => state.finance.isDeleteTransaction;\r\n\r\nexport const getDeleteId = state => state.finance.deleteId;\r\n\r\nexport const isErrorFinance = state => state.finance.error;\r\n\r\nexport const getParamPage = state => ({\r\n    total: state.finance.total,\r\n    currentPage: state.finance.currentPage,\r\n    totalPage: state.finance.totalPage,\r\n    limit: state.finance.limit,\r\n});\r\n","// export const getStatistic = state => {\r\n//     const result = state.statistic.data.length === 0\r\n//             ? []\r\n//         : state.statistic.data.map(el => {\r\n//             return {\r\n//                 balance: el.balance,\r\n//                 sum: el.sum,\r\n//                 income: el.income,\r\n//                 id: el._id,\r\n//                 category: el.category.name,\r\n//                 }\r\n//             })\r\n//     return result\r\n// };\r\n\r\nexport const getStatistic = state => {\r\n    const result = {};\r\n\r\n    result.expense =\r\n        state.statistic.dataExpense.length === 0\r\n            ? []\r\n            : state.statistic.dataExpense.map(el => ({\r\n                  sum: el.totalSum,\r\n                  category: el._id[0].name,\r\n              }));\r\n\r\n    result.income =\r\n        state.statistic.dataIncome.length === 0\r\n            ? []\r\n            : state.statistic.dataIncome.map(el => ({\r\n                  sum: el.totalSum,\r\n                  category: el._id[0].name,\r\n              }));\r\n    result.totalExpense = state.statistic.totalExpense;\r\n    result.totalIncome = state.statistic.totalIncome;\r\n    console.log('Selector statistic = ', result);\r\n    return result;\r\n};\r\n\r\nexport const isLoadingStatistic = state => state.statistic.isLoading;\r\n\r\nexport const isErrorStatistic = state => state.statistic.error;\r\n","export const isLoadingCategories = state => state.categories.isLoading;\r\n\r\nexport const isCategoriesFull = state =>\r\n    state.categories.data.length > 0 ? true : false;\r\n\r\nexport const getCategoryDebet = state =>\r\n    state.categories.data.filter(el => el.income);\r\n\r\nexport const getCategoryCredit = state =>\r\n    state.categories.data.filter(el => !el.income);\r\n\r\nexport const isErrorCategory = state => state.categories.error;\r\n","import './spinnerLoader.scss';\r\n\r\nfunction LoaderRoket() {\r\n    return <div className=\"loader\">Loading...</div>;\r\n}\r\nexport default LoaderRoket;\r\n"],"sourceRoot":""}