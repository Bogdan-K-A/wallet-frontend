{"version":3,"sources":["redux/user/user-selector.js","assets/sprite.svg","component/shared/logo/Logo.js","services/api/index.js","redux/user/user-operation.js","redux/user/user-slice.js","data/media.js","data/navigation.js","component/shared/buttonExit/ButtonExit.js","component/shared/itemNav/ItemNav.js","component/headerNav/HeaderNav.js","component/navigation/Navigation.js","redux/finance/finance-selector.js","component/balans/Balans.js","component/header/Header.js","redux/categories/categories-selector.js","redux/finance/finance-operation.js","redux/finance/finance-slice.js","component/modalTransaction/ModalTransaction.js","component/backdrop/Backdrop.js","component/registrationForm/registrationForm.js","services/currencyApi.js","assets/constants.js","component/currency/Currency.jsx","component/homeTabItemMobile/homeTabItemMobile.jsx","component/homeTabItemTabletAndDesktop/homeTabItemTabletAndDesktop.jsx","component/homeTabList/HomeTabList.jsx","component/homeTab/HomeTab.jsx","component/buttonClose/buttonClose.js","redux/categories/categories-operation.js","redux/statistic/statistic-selector.js","component/chartDoughnut/ChartDoughnut.js","component/datePicker/customStyles.js","redux/statistic/statistic-operation.js","component/datePicker/DatePicker.js","component/table/Table.js","component/diagramTab/DiagramTab.js","pages/statistic/Statistic.js","pages/dashboard/Dashboard.js","pages/registration/RegistrationPage.js","services/hoc/withAuth.js","assets/img/tablet/tabletMan.svg","component/loginForm/LoginForm.js","pages/login/LoginPage.js","component/spinnerLoader/spinnerLoader.js","App.js","redux/categories/categories-slice.js","redux/statistic/statistic-slice.js","redux/store.js","index.js"],"names":["isAuth","state","user","isToken","token","getToken","isLoading","error","isModalLogout","getName","name","getBalance","balance","Logo","className","href","sprite","axios","defaults","baseURL","tempData","categories","id","income","transaction","categoryId","sum","comment","datetime","Date","now","month","year","email","password","statistic","category","operations","date","dataExampl","registerAPI","a","loginAPI","Error","logoutAPI","status","code","getUserAPI","getCategoryAPI","getStatisticAPI","getOperationsAPI","transactions","user_balance","addTransactionAPI","data","login","createAsyncThunk","result","register","logout","currentUser","userOperation","userSlice","createSlice","initialState","reducers","openModalLogout","closeModalLogout","extraReducers","pending","fulfilled","payload","userName","rejected","message","actions","globalMedia","small","medium","mediumOnly","large","navList","icon","text","linkTo","ButtonExit","dispatch","useDispatch","onClick","queries","matches","ItemNav","isActive","to","HeaderNav","useSelector","Navigation","map","el","idx","getOperations","finance","userBalance","isModalTransaction","isModalAddTransaction","isSaveModalDateStatic","Balans","n","balans","parseFloat","toFixed","replace","Header","isCategoriesFull","length","getCategoryDebet","filter","getCategoryCredit","addOperation","getFinanceOpertaion","financeSlice","openModalTransaction","closeModalTransaction","setSaveModalDateStatic","clearSaveModalDateStatic","ModalTransaction","useState","modalTypeTransaction","setModalTypeTransaction","setDate","setCategory","listActive","setListActive","summ","styling","icons","delay","currentBalance","getDebit","getCredit","pushDate","console","log","closeModalItem","categoryClick","e","target","textContent","preventDefault","alert","hide","sticker","closer","dir1","useEffect","backdrop","document","querySelector","clickBackdrop","pressEsc","addEventListener","removeEventListener","dropListSelectJSX","DropMenuActive","elem","onSubmit","switchActiveDebet","htmlFor","onChange","checked","type","defaultChecked","switchActive","required","min","step","placeholder","_d","inputProps","initialValue","closeOnSelect","timeFormat","Backdrop","children","modalRoot","createPortal","RegistrationForm","initialValues","confirmPassword","validationSchema","Yup","shape","max","oneOf","props","values","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","onBlur","value","disabled","fetch","response","json","fetchCurrency","currencies","CurrencyTable","currency","setCurrency","currencyApi","filteredCurrencies","forEach","element","parseInt","buy","ccy","push","Number","sale","localStorage","setItem","JSON","stringify","currencyLS","parse","getItem","currencyTime","item","homeTabItemMobile","operation","moment","format","homeTabItemTabletAndDesktop","index","HomeTabList","HomeTab","isLoad","ButtonClose","categoriesOperation","getCategories","updateStatistic","ChartJS","ArcElement","Tooltip","Legend","options","responsive","maintainAspectRatio","cutout","plugins","legend","display","ChartDoughnut","color","labels","datasets","label","backgroundColor","borderColor","borderWidth","customStyles","container","provided","width","control","height","border","borderRadius","boxShadow","cursor","dropdownIndicator","paddingRight","indicatorSeparator","menu","background","backdropFilter","overflow","option","isFocused","isSelected","borderTop","borderBottom","padding","fontSize","lineHeight","fontFamily","textTransform","fontWeight","singleValue","valueContainer","getStatistic","statisticOperation","locale","thisMonth","getMonth","monthsList","_locale","_months","standalone","monthsOptions","thisYear","getFullYear","yearsOptions","Array","from","val","DropdownIndicator","DatePicker","selectedOption","setSelectedOption","prev","num","findIndex","components","defaultValue","isSearchable","styles","Table","arr","total","transformData","toString","i","style","minWidth","minHeight","reduce","acc","totalIncome","rgb","DiagramTab","filterById","objCategories","objStat","idDebet","includes","nameCategory","Statistic","Dashboard","isCategories","isOpenModalTransaction","isOpenModalLogout","isSaveTransaction","onOpenModalTransaction","path","RegistrationPage","withAuth","Component","LoginForm","src","imgMan","alt","handleReset","LoginPage","LoaderRoket","App","isUserToken","isUserAuth","loading","isError","categoriesSlice","statisticSlice","persistConfig","key","storage","whitelist","userReducer","persistReducer","reducer","store","configureStore","categorySlice","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","devTools","process","rootStore","persistedStore","persistStore","ReactDOM","render","StrictMode","loader","persistor","getElementById"],"mappings":"orBAAaA,EAAS,SAAAC,GAAK,OAAIA,EAAMC,KAAKF,QAE7BG,EAAU,SAAAF,GAAK,QAAKA,EAAMC,KAAKE,OAE/BC,EAAW,SAAAJ,GAAK,OAAIA,EAAMC,KAAKE,OAE/BE,EAAY,SAAAL,GAAK,OAAIA,EAAMC,KAAKI,WAEhCC,EAAQ,SAAAN,GAAK,OAAIA,EAAMC,KAAKK,OAE5BC,EAAgB,SAAAP,GAAK,OAAIA,EAAMC,KAAKM,eAEpCC,EAAU,SAAAR,GAAK,OAAIA,EAAMC,KAAKA,KAAKQ,MAInCC,EAAa,SAAAV,GAAK,OAAIA,EAAMC,KAAKA,KAAKU,SChBpC,MAA0B,mC,gBCG5BC,EAAO,WAChB,OACI,qBAAKC,UAAU,OAAf,SACI,oBAAGC,KAAK,IAAID,UAAU,YAAtB,UACI,qBAAKA,UAAU,YAAf,SACI,qBAAKC,KAAI,UAAKC,EAAL,eAEb,mBAAGF,UAAU,YAAb,0B,iECThBG,IAAMC,SAASC,QAAU,6BAEzB,I,IAIMC,EAAW,CACbC,WAAY,CACR,CACIC,GAAI,EACJC,QAAQ,EACRb,KAAM,mFAEV,CACIY,GAAI,EACJC,QAAQ,EACRb,KAAM,0DAEV,CACIY,GAAI,EACJC,QAAQ,EACRb,KAAM,4BAEV,CACIY,GAAI,EACJC,QAAQ,EACRb,KAAM,uBAGdc,YAAa,CACT,CACIF,GAAI,EACJG,WAAY,EACZF,QAAQ,EACRG,IAAK,KACLC,QAAS,aACTf,QAAS,KACTgB,SAAUC,KAAKC,MACfC,MAAO,EACPC,KAAM,OAGd9B,KAAM,CACFQ,KAAM,QACNuB,MAAO,iBACPC,SAAU,SACVtB,QAAS,KACTR,MAAO,iCAEX+B,UAAW,CACP,CAAEC,SAAU,EAAGV,IAAK,KACpB,CAAEU,SAAU,EAAGV,IAAK,KACpB,CAAEU,SAAU,EAAGV,IAAK,KACpB,CAAEU,SAAU,EAAGV,IAAK,MAExBW,WAAY,CACR,CACIf,GAAI,EACJc,SAAU,8FACVb,QAAQ,EACRG,IAAK,IACLC,QAAS,uCACTf,QAAS,IACT0B,KAAMT,KAAKC,MACXC,MAAO,EACPC,KAAM,MAEV,CACIV,GAAI,EACJc,SAAU,iCACVb,QAAQ,EACRG,IAAK,IACLC,QAAS,wFACTf,QAAS,IACT0B,KAAMT,KAAKC,MACXC,MAAO,EACPC,KAAM,MAEV,CACIV,GAAI,EACJc,SAAU,2GACVb,QAAQ,EACRG,IAAK,IACLC,QAAS,6CACTf,QAAS,KACT0B,KAAMT,KAAKC,MACXC,MAAO,EACPC,KAAM,MAEV,CACIV,GAAI,EACJc,SAAU,uCACVb,QAAQ,EACRG,IAAK,IACLC,QAAS,uCACTf,QAAS,IACT0B,KAAMT,KAAKC,MACXC,MAAO,EACPC,KAAM,MAEV,CACIV,GAAI,EACJc,SAAU,mDACVb,QAAQ,EACRG,IAAK,IACLC,QAAS,0DACTf,QAAS,KACT0B,KAAMT,KAAKC,MACXC,MAAO,EACPC,KAAM,QAKZO,EACU,CACR,CAAEjB,GAAI,EAAGZ,KAAM,wFAAmBa,QAAQ,GAC1C,CAAED,GAAI,EAAGZ,KAAM,mDAAYa,QAAQ,GACnC,CAAED,GAAI,EAAGZ,KAAM,uCAAUa,QAAQ,GACjC,CAAED,GAAI,EAAGZ,KAAM,yFAAoBa,QAAQ,GAC3C,CAAED,GAAI,EAAGZ,KAAM,yFAAoBa,QAAQ,GAC3C,CAAED,GAAI,EAAGZ,KAAM,mFAAmBa,QAAQ,GAC1C,CAAED,GAAI,EAAGZ,KAAM,uCAAUa,QAAQ,GACjC,CAAED,GAAI,EAAGZ,KAAM,mDAAYa,QAAQ,GACnC,CAAED,GAAI,EAAGZ,KAAM,sEAAgBa,QAAQ,GACvC,CAAED,GAAI,GAAIZ,KAAM,iCAASa,QAAQ,GACjC,CAAED,GAAI,GAAIZ,KAAM,gEAAea,QAAQ,IAZzCgB,EAcS,CACP,CAAEH,SAAU,EAAGV,IAAK,MACpB,CAAEU,SAAU,EAAGV,IAAK,SACpB,CAAEU,SAAU,EAAGV,IAAK,MACpB,CAAEU,SAAU,EAAGV,IAAK,KACpB,CAAEU,SAAU,EAAGV,IAAK,SACpB,CAAEU,SAAU,EAAGV,IAAK,KACpB,CAAEU,SAAU,EAAGV,IAAK,MACpB,CAAEU,SAAU,EAAGV,IAAK,MACpB,CAAEU,SAAU,EAAGV,IAAK,MAMfc,EAAW,uCAAG,WAAMtC,GAAN,SAAAuC,EAAA,+EAWhBrB,EAASlB,MAXO,2CAAH,sDAcXwC,EAAQ,uCAAG,WAAMxC,GAAN,SAAAuC,EAAA,yDAShBvC,EAAK+B,QAAUb,EAASlB,KAAK+B,OAC7B/B,EAAKgC,WAAad,EAASlB,KAAKgC,SAVhB,yCAYTd,EAASlB,MAZA,aAcd,IAAIyC,MAAM,2BAdI,2CAAH,sDAiBRC,EAAS,uCAAG,sBAAAH,EAAA,+EAEd,CAAEI,OAAQ,KAAMC,KAAM,MAFR,2CAAH,qDAKTC,EAAU,uCAAG,WAAM3C,GAAN,SAAAqC,EAAA,+EAMfrB,EAASlB,MANM,2CAAH,sDAWV8C,EAAc,uCAAG,sBAAAP,EAAA,+EAMnBF,GANmB,2CAAH,qDAWdU,EAAe,uCAAG,uBAAAR,EAAA,+DAASV,MAAT,EAAgBC,KAAhB,kBAUpBO,GAVoB,2CAAH,sDAefW,EAAgB,uCAAG,sBAAAT,EAAA,+EAKrB,CAAEU,aAAc/B,EAASiB,WAAYe,aAAc,OAL9B,2CAAH,qDAQhBC,EAAiB,uCAAG,WAAMC,GAAN,SAAAb,EAAA,2HAAH,sDC9NxBc,EAAQC,YAAiB,QAAD,uCAAU,WAAMF,GAAN,eAAAb,EAAA,sEACfC,EAASY,GADM,cAC9BG,EAD8B,yBAE7BA,GAF6B,2CAAV,uDAKxBC,EAAWF,YAAiB,WAAD,uCAAa,WAAMF,GAAN,eAAAb,EAAA,sEACrBD,EAAYc,GADS,cACpCG,EADoC,yBAEnCA,GAFmC,2CAAb,uDAK3BE,EAASH,YAAiB,SAAD,sBAAW,4BAAAf,EAAA,sEACjBG,IADiB,cAChCa,EADgC,yBAE/BA,GAF+B,4CAKpCG,EAAcJ,YAAiB,UAAD,uCAAY,WAAMpD,GAAN,eAAAqC,EAAA,sEACvBM,EAAW3C,GADY,cACtCqD,EADsC,yBAErCA,GAFqC,2CAAZ,uDAKvBI,EAAgB,CAAEN,QAAOG,WAAUC,SAAQC,eCVlDE,EAAYC,YAAY,CAC1BrD,KAAM,OACNsD,aAXiB,CACjB9D,KAAM,GACNE,MAAO,KACPJ,QAAQ,EACRQ,eAAe,EACfF,WAAW,EACXC,MAAO,MAMP0D,SAAU,CACNC,gBAAiB,SAAAjE,GACbA,EAAMO,eAAgB,GAE1B2D,iBAAkB,SAAAlE,GACdA,EAAMO,eAAgB,IAG9B4D,eAAa,mBACRP,EAAcH,SAASW,SAAU,SAAApE,GAC9BA,EAAMK,WAAY,EAClBL,EAAMM,MAAQ,KACdN,EAAMD,QAAS,KAJV,cAMR6D,EAAcH,SAASY,WAAY,SAACrE,EAAD,GAAyB,IAAfsE,EAAc,EAAdA,QAC1CtE,EAAMC,KAAKQ,KAAO6D,EAAQC,SAC1BvE,EAAMC,KAAK+B,MAAQsC,EAAQtC,MAC3BhC,EAAMG,MAAQmE,EAAQnE,MACtBH,EAAMD,QAAS,EACfC,EAAMK,WAAY,KAXb,cAaRuD,EAAcH,SAASe,UAAW,SAACxE,EAAD,GAAuB,IAAbM,EAAY,EAAZA,MACzCN,EAAMK,WAAY,EAClBL,EAAMM,MAAQA,EAAMmE,WAff,cAkBRb,EAAcN,MAAMc,SAAU,SAAApE,GAC3BA,EAAMK,WAAY,EAClBL,EAAMM,MAAQ,KACdN,EAAMD,QAAS,KArBV,cAwBR6D,EAAcN,MAAMe,WAAY,SAACrE,EAAD,GAAyB,IAAfsE,EAAc,EAAdA,QACvCtE,EAAMC,KAAKQ,KAAO6D,EAAQC,SAC1BvE,EAAMC,KAAK+B,MAAQsC,EAAQtC,MAC3BhC,EAAMG,MAAQmE,EAAQnE,MACtBH,EAAMD,QAAS,EACfC,EAAMK,WAAY,KA7Bb,cAgCRuD,EAAcN,MAAMkB,UAAW,SAACxE,EAAD,GAAuB,IAAbM,EAAY,EAAZA,MACtCN,EAAMK,WAAY,EAClBL,EAAMM,MAAQA,EAAMmE,WAlCf,cAqCRb,EAAcF,OAAOU,SAAU,SAAApE,GAC5BA,EAAMK,WAAY,EAClBL,EAAMM,MAAQ,QAvCT,cAyCRsD,EAAcF,OAAOW,WAAY,SAACrE,EAAD,GAAwB,EAAdsE,QACxCtE,EAAMC,KAAO,GACbD,EAAMG,MAAQ,KACdH,EAAMD,QAAS,EACfC,EAAMK,WAAY,KA7Cb,cA+CRuD,EAAcF,OAAOc,UAAW,SAACxE,EAAD,GAAuB,IAAbM,EAAY,EAAZA,MACvCN,EAAMK,WAAY,EAClBL,EAAMM,MAAQA,EAAMmE,WAjDf,cAmDRb,EAAcD,YAAYS,SAAU,SAAApE,GACjCA,EAAMK,WAAY,EAClBL,EAAMM,MAAQ,QArDT,cAuDRsD,EAAcD,YAAYU,WAAY,SAACrE,EAAD,GAAyB,IAAfsE,EAAc,EAAdA,QAC7CtE,EAAMC,KAAKQ,KAAO6D,EAAQC,SAC1BvE,EAAMC,KAAK+B,MAAQsC,EAAQtC,MAC3BhC,EAAMC,KAAKU,QAAU2D,EAAQ3D,QAC7BX,EAAMD,QAAS,EACfC,EAAMK,WAAY,KA5Db,cA8DRuD,EAAcD,YAAYa,UAAW,SAACxE,EAAD,GAAuB,IAAbM,EAAY,EAAZA,MAC5CN,EAAMK,WAAY,EAClBL,EAAMM,MAAQA,EAAMmE,WAhEf,KAqEV,EAA8CZ,EAAUa,QAChDb,GADR,EAAQI,gBAAR,EAAyBC,iBACjBL,GC9FFc,EAAc,CACvBC,MAAO,qBACPC,OAAQ,qBACRC,WAAY,6CACZC,MAAO,uBCJEC,EAAU,CACnB,CAAEC,KAAM,OAAQC,KAAM,6CAAWC,OAAQ,SACzC,CAAEF,KAAM,YAAaC,KAAM,+DAAcC,OAAQ,YACjD,CAAEF,KAAM,WAAYC,KAAM,GAAIC,OAAQ,cCO7BC,EAAa,WACtB,IAAMC,EAAWC,cAOjB,OACI,yBAAQzE,UAAU,cAAc0E,QANpB,WAEZF,EAASzB,EAAcF,WAIvB,UACI,qBAAK7C,UAAU,qBAAf,SACI,qBAAKA,UAAU,oBAAf,SACI,qBAAKC,KAAI,UAAKC,EAAL,eAGjB,cAAC,IAAD,CAAOyE,QAASb,EAAhB,SACK,SAAAc,GAAO,OACJ,mCACKA,EAAQZ,QACL,mBAAGhE,UAAU,oBAAb,qD,QCtBf6E,I,OAAU,SAAC,GAA4B,IAA1BT,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAClC,OACI,eAAC,IAAD,CACItE,UAAW,qBAAG8E,SACC,kBAAoB,YAEnCC,GAAIT,EAJR,UAMI,qBAAKtE,UAAU,iBAAf,SACI,qBAAKC,KAAI,UAAKC,EAAL,YAAekE,OAE5B,cAAC,IAAD,CAAOO,QAASb,EAAhB,SACK,SAAAc,GAAO,OACJ,mCACKA,EAAQZ,QACL,mBAAGhE,UAAU,iBAAb,SAA+BqE,cChB9CW,I,OAAY,WACrB,IAAMtB,EAAWuB,YAAYtF,GAC7B,OACI,qBAAIK,UAAU,mBAAd,UACI,oBAAIA,UAAU,mBAAd,SACI,sBAAMA,UAAU,mBAAhB,SAAoC0D,MAExC,oBAAI1D,UAAU,mBAAd,SACI,cAAC,EAAD,WCTHkF,I,OAAa,WACtB,OACI,oBAAIlF,UAAU,WAAd,SACKmE,EAAQgB,KAAI,SAACC,EAAIC,GACd,OACI,cAAC,IAAD,CAAOV,QAASb,EAAhB,SACK,SAAAc,GAAO,OACJ,mCACKA,EAAQZ,QAAsB,KAAZoB,EAAGf,KAAc,KAChC,oBAAIrE,UAAU,iBAAd,SACI,cAAC,GAAD,CACIoE,KAAMgB,EAAGhB,KACTC,KAAMe,EAAGf,KACTC,OAAQc,EAAGd,UAJiBe,OAJlBA,UCVzCC,I,OAAgB,SAAAnG,GACzB,OAAOA,EAAMoG,QAAQ/C,OAGZ3C,GAAa,SAAAV,GAAK,OAAIA,EAAMoG,QAAQC,aAEpChG,GAAY,SAAAL,GAAK,OAAIA,EAAMoG,QAAQ/F,WAEnCiG,GAAqB,SAAAtG,GAAK,OAAIA,EAAMoG,QAAQG,uBAE5CC,GAAwB,SAAAxG,GAAK,OACtCA,EAAMoG,QAAQI,uBCPLC,GAAS,WAClB,IAEkBC,EAFZC,EAASb,YAAYpF,IAQ3B,OACI,sBAAKG,UAAU,SAAf,UACI,mBAAGA,UAAU,gBAAb,qEACA,oBAAGA,UAAU,gBAAb,qBATU6F,EASsCC,EAR7CC,WAAWF,GACbG,QAAQ,GACRC,QAAQ,sBAAuB,eCN/BC,I,OAAS,WAClB,OACI,mCACI,qBAAKlG,UAAU,SAAf,SACI,sBAAKA,UAAU,8BAAf,UACI,cAAC,EAAD,IACA,cAAC,GAAD,a,8BCRPmG,GAAmB,SAAAhH,GAAK,OACjCA,EAAMoB,WAAWiC,KAAK4D,OAAS,GAEtBC,GAAmB,SAAAlH,GAAK,OACjCA,EAAMoB,WAAWiC,KAAK8D,QAAO,SAAAlB,GAAE,OAAIA,EAAG3E,WAE7B8F,GAAoB,SAAApH,GAAK,OAClCA,EAAMoB,WAAWiC,KAAK8D,QAAO,SAAAlB,GAAE,OAAKA,EAAG3E,WCNrC6E,GAAgB5C,YAAiB,gBAAD,uCAAkB,WAAMF,GAAN,eAAAb,EAAA,sEAC/BS,EAAiBI,GADc,cAC9CG,EAD8C,yBAG7CA,GAH6C,2CAAlB,uDAMhC6D,GAAe9D,YAAiB,eAAD,uCAAiB,WAAMF,GAAN,eAAAb,EAAA,sEAC7BY,EAAkBC,GADW,cAC5CG,EAD4C,yBAE3CA,GAF2C,2CAAjB,uDAKxB8D,GAAsB,CAAEnB,iBAAekB,iB,SCD9CE,GAAezD,YAAY,CAC7BrD,KAAM,UACNsD,aAXiB,CACjBV,KAAM,GACNgD,YAAa,EACbhG,WAAW,EACXC,MAAO,KACPiG,uBAAuB,EACvBC,uBAAuB,GAMvBxC,SAAU,CACNwD,qBAAsB,SAAAxH,GAClBA,EAAMuG,uBAAwB,GAElCkB,sBAAuB,SAAAzH,GACnBA,EAAMuG,uBAAwB,GAElCmB,uBAAwB,SAAA1H,GACpBA,EAAMwG,uBAAwB,GAElCmB,yBAA0B,SAAA3H,GACtBA,EAAMwG,uBAAwB,IAGtCrC,eAAa,mBACRmD,GAAoBnB,cAAc/B,SAAU,SAAApE,GACzCA,EAAMK,WAAY,EAClBL,EAAMM,MAAQ,QAHT,cAKRgH,GAAoBnB,cAAc9B,WAAY,SAACrE,EAAD,GAAyB,IAAfsE,EAAc,EAAdA,QACrDtE,EAAMqD,KAAN,aAAiBiB,EAAQpB,cACzBlD,EAAMqG,YAAc/B,EAAQnB,aAC5BnD,EAAMK,WAAY,KARb,cAURiH,GAAoBnB,cAAc3B,UAAW,SAACxE,EAAD,GAAuB,IAAbM,EAAY,EAAZA,MACpDN,EAAMK,WAAY,EAClBL,EAAMM,MAAQA,EAAMmE,WAZf,cAeR6C,GAAoBD,aAAajD,SAAU,SAAApE,GACxCA,EAAMK,WAAY,EAClBL,EAAMM,MAAQ,QAjBT,cAmBRgH,GAAoBD,aAAahD,WAAY,SAACrE,EAAD,GAAyB,IAAfsE,EAAc,EAAdA,QACpDtE,EAAMqD,KAAN,uBAAiBiB,GAAjB,aAA6BtE,EAAMqD,OACnCrD,EAAMK,WAAY,KArBb,cAuBRiH,GAAoBD,aAAa7C,UAAW,SAACxE,EAAD,GAAuB,IAAbM,EAAY,EAAZA,MACnDN,EAAMK,WAAY,EAClBL,EAAMM,MAAQA,EAAMmE,WAzBf,KA8BV,GAKH8C,GAAa7C,QAJb8C,GADG,GACHA,qBACAC,GAFG,GAEHA,sBAEAE,IAJG,GAGHD,uBAHG,GAIHC,0BAEWJ,M,yBChDFK,GAAmB,WAC5B,MAAwDC,mBAAS,UAAjE,oBAAOC,EAAP,KAA6BC,EAA7B,KACA,EAAwBF,mBAAS,IAAIjG,MAArC,oBAAOS,EAAP,KAAa2F,EAAb,KACA,EAAgCH,mBAAS,+FAAzC,oBAAO1F,EAAP,KAAiB8F,EAAjB,KACA,EAAoCJ,oBAAS,GAA7C,oBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAwBN,mBAAS,IAAjC,oBAAOO,EAAP,UAEAnH,YAASoH,QAAU,WACnBpH,YAASqH,MAAQ,WACjBrH,YAASsH,MAAQ,IACjB,IAAMC,EAAiB1C,YAAYpF,GAC7B+H,EAAW3C,YAAYoB,IACvBwB,EAAY5C,YAAYsB,IACxBuB,EAAW7C,YAAYU,IAC7BoC,QAAQC,IAAIJ,GACZG,QAAQC,IAAIH,GACZ,IAAMrD,EAAWC,cAEjB,SAASwD,IACLzD,EAASoC,MAsCb,SAASsB,EAAcC,GACnBf,EAAYe,EAAEC,OAAOC,aACrBf,GAAeD,GA3De,4CAwFlC,WAA6Bc,GAA7B,SAAAxG,EAAA,yDACIwG,EAAEG,mBACkBX,EAAiBJ,GAElB,GACU,aAAzBN,GACa,4GAAb3F,GANR,uBAQQiH,iBAAM,CACFlE,KAAM,sHACNmE,MAAM,EACNd,MAAO,IACPe,SAAS,EACTC,QAAQ,EACRC,KAAM,SAdlB,6BAkBqB,4GAAbrH,EAlBR,uBAmBQiH,iBAAM,CACFlE,KAAM,uKACNmE,MAAM,EACNd,MAAO,IACPe,SAAS,EACTC,QAAQ,EACRC,KAAM,SAzBlB,+DAxFkC,sBAsBlCC,qBAAU,WACN,IAAMC,EAAWC,SAASC,cAAc,aAExC,SAASC,EAAcb,GACfA,EAAEC,SAAWS,GACbZ,IAIR,SAASgB,EAASd,GACC,WAAXA,EAAEnG,MACFiG,IAOR,OAHAa,SAASI,iBAAiB,QAASF,GACnCF,SAASI,iBAAiB,UAAWD,GAE9B,WACHH,SAASK,oBAAoB,QAASH,GACtCF,SAASK,oBAAoB,UAAWF,MAE7C,CAAChB,IACJW,qBAAU,WACFd,GACAG,MAEL,CAACH,IA0FJ,IAAMsB,EACF,sBAAKpJ,UAAU,gBAAf,UACI,qBAAKA,UAZb,WACI,GAAiB,4GAAbsB,EAAmC,CAInC,MAAM,GAAN,OAHiB,YAGjB,YAFe,mBAKnB,MAAO,YAIa+H,GAAkB3E,QAvF1C,WACI4C,GAAeD,IAsFX,SACI,sBAAMrH,UAAU,eAAhB,SAAgCsB,MAGnC+F,GACG,qBAAIrH,UAAU,WAAd,UAE8B,WAAzBiH,GACGW,EAASzC,KAAI,SAACmE,EAAMjE,GAChB,OACI,oBACIX,QAASwD,EACTlI,UAAU,eAEV,UAASsJ,EAAK9I,GAJlB,SAMK8I,EAAK1J,MAHDyF,MAcK,aAAzB4B,GACG,oBAAIvC,QAASwD,EAAelI,UAAU,eAAtC,8DAIsB,aAAzBiH,GACG,oBAAIvC,QAASwD,EAAelI,UAAU,eAAtC,gCAIsB,aAAzBiH,GACG,oBAAIvC,QAASwD,EAAelI,UAAU,eAAtC,sCAIsB,aAAzBiH,GACG,oBAAIvC,QAASwD,EAAelI,UAAU,eAAtC,8DAIsB,aAAzBiH,GACG,oBAAIvC,QAASwD,EAAelI,UAAU,eAAtC,sCAIsB,aAAzBiH,GACG,oBAAIvC,QAASwD,EAAelI,UAAU,eAAtC,gCAIsB,aAAzBiH,GACG,oBAAIvC,QAASwD,EAAelI,UAAU,eAAtC,gFAIsB,aAAzBiH,GACG,oBAAIvC,QAASwD,EAAelI,UAAU,eAAtC,uEAOZ,sBAAMA,UAAU,gBAAhB,SACI,qBAAKA,UAAU,WAAf,SACI,qBAAKC,KAAI,UAAKC,EAAL,2BAMzB,OACI,sBAAKF,UAAU,iBAAf,UACI,qBAAKA,UAAU,iBAAiB0E,QAASuD,EAAzC,SACI,sBAAMjI,UAAU,iBAAhB,SACI,qBAAKA,UAAU,eAAf,SACI,qBAAKC,KAAI,UAAKC,EAAL,uBAIrB,oBAAIF,UAAU,YAAd,2HACA,uBACIuJ,SAtOsB,4CAuOtB/I,GAAG,mBACHR,UAAU,YAHd,UAKI,sBAAKA,UAAU,oBAAf,UACI,sBAAMA,UAtKtB,WACI,GAA6B,WAAzBiH,EAAmC,CAGnC,MAAM,GAAN,OAFiB,0BAEjB,YADe,mCAInB,MAAO,0BA+JsBuC,GAAjB,4CACA,sBAAKxJ,UAAU,sBAAf,UACI,uBACIA,UAAU,iBACVyJ,QAAQ,eAEZ,sBAAMzJ,UAlLO,WAAzBiH,EACO,eAEJ,qBA+K0CzG,GAAG,SAApC,SACI,qBAAKR,UAAU,eAAf,SACI,qBACIC,KACI,UACSC,EADgB,WAAzB+G,EAAA,mCAQpB,uBACIjH,UAAU,oBACV0J,SAxIpB,SAA4BvB,GACxB,IAAKA,EAAEC,OAAOuB,QAGV,OAFAzC,EAAwB,iBACxBE,EAAY,2GAGhBF,EAAwB,UACxBE,EAAY,gGAkIIxH,KAAK,uBACLgK,KAAK,WACLpJ,GAAG,aACHqJ,gBAAc,IAElB,sBAAM7J,UAvLtB,WACI,GAA6B,aAAzBiH,EAAqC,CAGrC,MAAM,GAAN,OAFiB,0BAEjB,YADe,mCAInB,MAAO,0BAgLsB6C,GAAjB,qDAEHV,EACD,qBAAKpJ,UAAU,eAAf,SACI,uBACIA,UAAU,WACV+J,UAAQ,EACRC,IAAI,OACJC,KAAK,OACLL,KAAK,SACLM,YAAY,WAIpB,sBAAKlK,UAAU,oBAAf,UACI,cAAC,KAAD,CACI0J,SAlOpB,SAAoBvB,GAChBhB,EAAQgB,EAAEgC,KAkOMC,WAAY,CAAEpK,UAAW,iBACzBqK,aAAc7I,EACd8I,eAAe,EACfC,YAAY,IAEhB,qBAAKvK,UAAU,eAAf,SACI,qBAAKC,KAAI,UAAKC,EAAL,uBAGjB,qBAAKF,UAAU,mBAAf,SACI,0BACIA,UAAU,eACVkK,YAAY,sEAIxB,sBAAKlK,UAAU,kBAAf,UACI,wBACIA,UAAU,eACV4J,KAAK,SACLlF,QAAS,WACLF,EAASiC,GAAoBD,aAAa,MAJlD,8DASA,wBAAQxG,UAAU,eAAe0E,QAASuD,EAA1C,yDC9THuC,I,OAAW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACjBC,EAAY5B,SAASC,cAAc,cACzC,OAAO4B,uBACH,qBAAKnK,GAAG,WAAWR,UAAU,WAA7B,SACKyK,IAELC,K,kBCLKE,GAAmB,WAC7B,IAAMpG,EAAWC,cAEjB,OACG,8BACG,cAAC,KAAD,CACGoG,cAAe,CACZ1J,MAAO,GACPC,SAAU,GACV0J,gBAAiB,GACjBlL,KAAM,IAIT2J,SAAU,YAAgC,IAA7BpI,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,SACXhC,EAAO,CAAEQ,KADuB,EAAXA,KACNuB,QAAOC,YAC5B2G,QAAQC,IAAI5I,GACZoF,EAASzB,EAAcH,SAASxD,KAMnC2L,iBAAkBC,OAAaC,MAAM,CAClC9J,MAAO6J,OAAa7J,QAAQ4I,SAAS,YACrC3I,SAAU4J,OACNjB,SAAS,YACTC,IAAI,EAAG,0CACPkB,IAAI,GAAI,0CACZJ,gBAAiBE,OACbjB,SAAS,YACToB,MACE,CAACH,KAAQ,YAAa,MACtB,wBAENpL,KAAMoL,OAAahB,IAChB,EACA,wCAhCT,SAoCI,SAAAoB,GACE,IACGC,EAOCD,EAPDC,OACAC,EAMCF,EANDE,QACAC,EAKCH,EALDG,OACAC,EAICJ,EAJDI,aACAC,EAGCL,EAHDK,aACAC,EAECN,EAFDM,WACAC,EACCP,EADDO,aAEH,OAGG,cAFA,CAEA,QAAMpC,SAAUoC,EAAhB,UACG,uBACG/B,KAAK,QACLhK,KAAK,QACLsK,YAAY,SACZR,SAAU+B,EACVG,OAAQF,EACRG,MAAOR,EAAOlK,QAEhBoK,EAAOpK,OAASmK,EAAQnK,OAASoK,EAAOpK,MACzC,uBACGyI,KAAK,WACLhK,KAAK,WACLsK,YAAY,uCACZR,SAAU+B,EACVG,OAAQF,EACRG,MAAOR,EAAOjK,WAEhBmK,EAAOnK,UACLkK,EAAQlK,UACRmK,EAAOnK,SACV,uBACGwI,KAAK,WACLhK,KAAK,kBACLsK,YAAY,0GACZR,SAAU+B,EACVG,OAAQF,EACRG,MAAOR,EAAOP,kBAEhBS,EAAOT,iBACLQ,EAAQR,iBACRS,EAAOT,gBACV,uBACGlB,KAAK,OACLhK,KAAK,OACLsK,YAAY,8CACZR,SAAU+B,EACVG,OAAQF,EACRG,MAAOR,EAAOzL,OAEhB2L,EAAO3L,MAAQ0L,EAAQ1L,MAAQ2L,EAAO3L,KAEvC,wBACGgK,KAAK,SACLkC,SAAUN,EAFb,gFAOA,wBAAQ5B,KAAK,SAASkC,SAAUN,EAAhC,+C,8CC5GrB,8BAAA7J,EAAA,sEAC2BoK,MACnB,qEAFR,cACUC,EADV,gBAIuBA,EAASC,OAJhC,cAIUzJ,EAJV,yBAMWA,GANX,4C,sBASe,QAAE0J,c,6CCTJC,GAAa,CAAC,MAAO,MAAO,O,OCO1B,SAASC,KACpB,MAAgCpF,mBAAS,IAAzC,oBAAOqF,EAAP,KAAiBC,EAAjB,KAqCA,OAnCA1D,qBAAU,WACN,IAAMsD,EAAa,uCAAG,8BAAAvK,EAAA,sEACC4K,GAAYL,gBADb,OACZ1J,EADY,OAEZgK,EAAqB,GAC3BL,GAAWM,SAAQ,SAAAJ,GACf7J,EAAKiK,SAAQ,SAAAC,GACTC,SAASD,EAAQE,KAAK5G,QAAQ,GAC1B0G,EAAQG,MAAQR,GAChBG,EAAmBM,KAAK,CACpBD,IAAKH,EAAQG,IACbD,IAAKG,OAAOL,EAAQE,KAAK5G,QAAQ,GACjCgH,KAAMD,OAAOL,EAAQM,MAAMhH,QAAQ,WAKnDsG,EAAYE,GACZS,aAAaC,QACT,WACAC,KAAKC,UAAUZ,IAEnBS,aAAaC,QAAQ,eAAgBnM,KAAKC,OApBxB,2CAAH,qDAsBfqM,EAAaF,KAAKG,MAAML,aAAaM,QAAQ,aAC7CC,EAAeL,KAAKG,MAAML,aAAaM,QAAQ,iBAC9CF,GACDnB,IAEAnL,KAAKC,MAAQwM,EAAe,KAC5BtB,IAEAI,EAAYe,KAEjB,IAGC,qBAAKrN,UAAU,WAAf,SACI,kCACI,gCACI,+BACI,sEACA,4EACA,2EAGR,gCACKqM,EAASlH,KAAI,SAAAsI,GACV,OACI,+BACI,6BAAKA,EAAKZ,MACV,6BAAKY,EAAKb,MACV,6BAAKa,EAAKT,SAHLS,EAAKZ,e,6CCpB3Ba,GAnCW,SAAC,GAEpB,IAAD,IADFC,UAAarM,EACX,EADWA,SAAUb,EACrB,EADqBA,OAAQG,EAC7B,EAD6BA,IAAKd,EAClC,EADkCA,QAASe,EAC3C,EAD2CA,QAASW,EACpD,EADoDA,KAEtD,OACI,qBACIxB,UACIS,EACM,iCACA,+BAJd,UAOI,0DAEI,+BAAOmN,KAAOpM,GAAMqM,OAAO,iBAE/B,oDACQ,+BAAOpN,EAAS,IAAM,SAE9B,wFACc,+BAAOa,OAErB,oGACgB,+BAAOT,OAEvB,gEAEI,sBAAMb,UAAU,oBAAhB,SAAqCY,OAEzC,sEACW,+BAAOd,WCLfgO,I,OAxBqB,SAAC,GAG9B,IAAD,IAFFH,UAAarM,EAEX,EAFWA,SAAUb,EAErB,EAFqBA,OAAQG,EAE7B,EAF6BA,IAAKd,EAElC,EAFkCA,QAASe,EAE3C,EAF2CA,QAASW,EAEpD,EAFoDA,KAEpD,EADFuM,MAEA,OACI,qBAAI/N,UAAU,8BAAd,UACI,4BAAI4N,KAAOpM,GAAMqM,OAAO,cACxB,4BAAIpN,EAAS,IAAM,MACnB,4BAAIa,IACJ,4BAAIT,IACJ,mBACIb,UACIS,EACM,iEACA,+DAJd,SAOKG,IAEL,4BAAId,SCwCDkO,GAzDK,SAAC,GAAoB,IAAlBzM,EAAiB,EAAjBA,WACnB,OACI,oBAAIvB,UAAU,cAAd,SACI,cAAC,IAAD,CACI2E,QAAS,CACLZ,MAAO,4CACPC,OAAQ,sBAHhB,SAMK,SAAAY,GACG,QAAQ,GACJ,KAAKA,EAAQb,MACT,OAAOxC,EAAW4D,KAAI,SAAAwI,GAClB,OACI,cAAC,GAAD,CACIA,UAAWA,GACNA,EAAUnN,OAI/B,KAAKoE,EAAQZ,OACT,OACI,qCACI,qBACIhE,UAAU,0BADd,UAII,0DACA,oDACA,wFACA,kFACA,0DACA,wEAPK,GASRuB,EAAW4D,KAAI,SAACwI,EAAWI,GACxB,OACI,mCACI,cAAC,GAAD,CACIJ,UAAWA,EACXI,OAAK,GACAJ,EAAUnN,YAO3C,QAEI,OADAuH,QAAQC,IAAI,iCACL,gKCzBpBiG,GAtBC,WACZ,IAAMzJ,EAAWC,cACXyJ,EAASjJ,YAAYzF,IACrB+B,EAAa0D,YAAYK,IAQ/B,OANAsD,qBAAU,WACoB,IAAtBrH,EAAW6E,QACX5B,EAASiC,GAAoBnB,mBAElC,IAEK4I,EAOJ,qFANA,yBAASlO,UAAU,kBAAnB,SACI,qBAAKA,UAAU,YAAf,SACI,cAAC,GAAD,CAAauB,WAAYA,SCV1B4M,I,OARK,SAAC,GAAiB,IAAfzJ,EAAc,EAAdA,QACnB,OACI,yBAAQ1E,UAAU,SAAS0E,QAASA,EAApC,UACI,sBAAM1E,UAAU,mBAChB,sBAAMA,UAAU,wBCCfoO,GAAsB,CAAEC,cALf3L,YAAiB,gBAAD,sBAAkB,4BAAAf,EAAA,sEAC/BO,IAD+B,cAC9CS,EAD8C,yBAE7CA,GAF6C,6CCS3C2L,GAAkB,SAAAnP,GAC3B,OAAOA,EAAMkC,UAAUmB,M,mCCN3B+L,KAAQ3L,SAAS4L,KAAYC,KAASC,MAEtC,IAAMC,GAAU,CACdC,YAAY,EACZC,qBAAqB,EACrBC,OAAQ,MACNC,QAAS,CACPC,OAAQ,CACNC,SAAS,KAKV,SAASC,GAAT,GAAgE,IAAvC5N,EAAsC,EAAtCA,SAAUxB,EAA4B,EAA5BA,QAASqP,EAAmB,EAAnBA,MAC3C3M,EAAO,CAEb4M,OAAQ9N,EACR+N,SAAU,CACR,CACEC,MAAO,aAGP9M,KATgE,EAAZnB,UASpC8D,KAAI,SAAAC,GAAE,OAAEA,EAAGxE,OAC3B2O,gBAAiBJ,EACjBK,YAAaL,EACbM,YAAa,KAKjB,OAAO,gCAGL,oBAAIzP,UAAU,oBAAd,0EACA,sBAAKA,UAAU,gBAAf,UACE,sBAAKA,UAAU,UAAf,oBAAkC,IAAMF,EAAxC,OACA,cAAC,KAAD,CAAU0C,KAAMA,EAAMmM,QAASA,W,8BC3CxBe,I,OAAe,CAC1BC,UAAW,SAACC,GAAD,oBAAC,gBACPA,GADM,IAETC,MAAO,UAGTC,QAAS,SAACF,GAAD,oBAAC,gBACLA,GADI,IAEPG,OAAQ,GACRF,MAAO,OACPG,OAAQ,oBACRC,aAAc,GACdV,gBAAiB,cACjBW,UAAW,OACXC,OAAQ,UACR,UAAW,CACTH,OAAQ,oBACRE,UAAW,WAIfE,kBAAmB,SAACR,GAAD,oBAAC,gBACfA,GADc,IAEjBS,aAAc,UAGhBC,mBAAoB,iBAAO,CAAErB,QAAS,SAMtCsB,KAAM,SAACX,GAAD,oBAAC,gBACFA,GADC,IAEJY,WAAY,2BACZN,UAAW,mCACXO,eAAgB,YAChBR,aAAc,GACdS,SAAU,YAKZC,OAAQ,SAACf,EAAD,OAAagB,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,WAAxB,oBAAC,gBACJjB,GADG,IAENkB,UAAW,qCACXC,aAAc,qCACdP,WAAYI,GAAaC,EAAa,2BAA6B,cACnE1B,MAAOyB,GAAaC,EAAa,UAAY,UAC7CV,OAAQ,UACRa,QAAS,YACTC,SAAU,OACVC,WAAY,OACZC,WAAY,oBACZC,cAAe,gBAGjBlH,YAAa,SAAC0F,GAAD,oBAAC,gBACTA,GADQ,IAEXT,MAAO,UACP8B,SAAU,OACVI,WAAY,IACZH,WAAY,UAGdI,YAAa,SAAC1B,EAAD,KAAY1F,YAAZ,oBAAC,gBACT0F,GADQ,IAEXqB,SAAU,OACVC,WAAY,OACZ/B,MAAO,aAGToC,eAAgB,SAAC3B,GAAD,oBAAC,gBACZA,GADW,IAEdoB,QAAS,aACTI,cAAe,kBCxEbI,GAAe9O,YAAiB,eAAD,uCAAiB,WAAMF,GAAN,eAAAb,EAAA,sEAC7BQ,EAAgBK,GADa,cAC5CG,EAD4C,yBAE3CA,GAF2C,2CAAjB,uDAIxB8O,GAAqB,CAAED,iB,OCIpC5D,KAAO8D,OAAO,MAEd,IAAMC,IAAa,IAAI5Q,MAAQ6Q,WAAa,EAEtCC,GAAajE,KAAO,IAAI7M,KAAQ,OAAQ,MAAM+Q,QAAQC,QAAQC,WAC9DC,GAAgBJ,GAAW1M,KAAI,SAACC,GAAD,MAAS,CAAEyG,MAAOzG,EAAIkK,MAAOlK,MAE5D8M,IAAY,IAAInR,MAAQoR,cAGxBC,GAFYC,MAAMC,KAAK,IAAID,MAAM,KAAK,SAACE,EAAKxE,GAAN,OAAgBmE,GAAWnE,KAExC5I,KAAI,SAACC,GAAD,MAAS,CAAEyG,MAAOzG,EAAIkK,MAAOlK,MAE1DoN,GAAoB,SAAApH,GAExB,OACE,cAAC,KAAWoH,kBAAZ,6BAAkCpH,GAAlC,aACE,qBAAKpL,UAAU,mBAAmB6P,MAAM,KAAKE,OAAO,KAApD,SACE,qBAAK9P,KAAI,UAAKC,EAAL,wBAMV,SAASuS,KAEd,MAA4CzL,mBAAS,MAArD,oBAAO0L,EAAP,KAAuBC,EAAvB,KACMnO,EAAWC,cAEjBmE,qBAAU,WACRpE,EAAS4J,GAAoBC,iBAEN,OAAnBqE,GACFlO,EAASiN,GAAmBD,aAAakB,MAG1C,CAAClO,EAAUkO,IAGd,IAAMjH,EAAe,SAAC7L,EAAMiM,GAAW,IAAD,IASpC,GAPA,YAAI,OAAC6G,QAAD,IAACA,KAAgBzR,cAArB,UACE0R,GAAkB,SAACC,GAAD,oBAAC,gBAAeA,GAAhB,IAAsB3R,MAAO0Q,QAEjD,YAAI,OAACe,QAAD,IAACA,KAAgBxR,aAArB,UACEyR,GAAkB,SAACC,GAAD,oBAAC,gBAAeA,GAAhB,IAAsB1R,KAAMgR,QAGnC,UAATtS,EAAkB,CACpB,IAAMiT,EAAMhB,GAAWiB,WAAU,SAAA3K,GAAC,OAAIA,IAAM0D,KAAS,EACrD9D,QAAQC,IAAI6K,GACZF,GAAkB,SAACC,GAAD,oBAAC,gBAAeA,GAAhB,kBAAuBhT,EAAOiT,OAGrC,SAATjT,GACF+S,GAAkB,SAACC,GAAD,oBAAC,gBAAeA,GAAhB,kBAAuBhT,EAAOiM,QAKpD,OACE,sBAAK7L,UAAU,sBAAf,UACE,cAAC,KAAD,CACE+S,WAAY,CAACP,sBACbQ,aAAcN,EAGdhJ,SAAU,SAACiH,GAAalF,EAAa,QAASkF,EAAO9E,QACrD8C,QAASsD,GACT/H,YAAY,uCACV+I,cAAc,EAChBC,OAAQxD,KAGV,cAAC,KAAD,CACEqD,WAAY,CAACP,sBACbQ,aAAcN,EAGdhJ,SAAU,SAACiH,GAAalF,EAAa,OAAQkF,EAAO9E,QACpD8C,QAASyD,GACTlI,YAAY,qBACV+I,cAAc,EAChBC,OAAQxD,Q,OC3FT,SAASyD,GAAT,GAAiD,IAMpCC,EANI9R,EAA+B,EAA/BA,SAAU6N,EAAqB,EAArBA,MAAOvP,EAAc,EAAdA,KAAMyT,EAAQ,EAARA,MAErCC,EAAgB,SAACT,GACf,OAAOA,EAAI7M,QAAQ,GAAGuN,WAAWtN,QAAQ,wBAAyB,MAO1E,OAAO,sBAAKjG,UAAU,mBAAf,UACH,sBAAKA,UAAU,cAAf,UACI,uFACA,4DAGJ,sBAAKA,UAAU,YAAf,UACI,6BACKsB,EAAS6D,KAAI,WAAoBqO,GAApB,IAAGlS,EAAH,EAAGA,SAAUV,EAAb,EAAaA,IAAb,OAEV,qBAAIZ,UAAU,eAAd,UACI,qBAAKyT,MAAO,CAAElE,gBAAiBJ,EAAMqE,GAAIE,SAAU,OAAWC,UAAW,UACzE,sBAAK3T,UAAU,UAAf,UACI,mBAAGA,UAAU,eAAb,SAA8BJ,EAAK4T,KACnC,mBAAGxT,UAAU,MAAb,SAAqBsT,EAAc1S,UAJTU,QAS1C,qBAAItB,UAAU,cAAd,UACI,oBAAIA,UAAU,kBAAd,SACI,oBAAGA,UAAU,MAAb,wDAA2B,sBAAMA,UAAU,UAAhB,SAA2BsT,GAzBtDF,EAyB2E9R,EAxBhF8R,EAAIQ,QAAO,SAACC,EAAKzO,GAAN,OAAayO,EAAMzO,EAAGxE,MAAK,YA0BrC,oBAAIZ,UAAU,kBAAd,SACI,oBAAGA,UAAU,MAAb,kDAA0B,sBAAMA,UAAU,SAAhB,SAA0BsT,EAAcD,EAAMS,6BC1B5F,IAAMT,GAAQ,CACV,YAAe,SACf,aAAgB,OAIdU,GAAM,CACV,CAAEvT,GAAI,EAAGuT,IAAK,qBACd,CAACvT,GAAI,EAAGuT,IAAI,sBACZ,CAACvT,GAAI,EAAGuT,IAAI,sBACZ,CAACvT,GAAI,EAAGuT,IAAI,sBACZ,CAACvT,GAAI,EAAGuT,IAAI,sBACZ,CAACvT,GAAI,EAAGuT,IAAI,oBACZ,CAACvT,GAAI,EAAGuT,IAAI,sBACZ,CAACvT,GAAI,EAAGuT,IAAI,qBACZ,CAACvT,GAAI,EAAGuT,IAAI,qBAGP,SAASC,KAEZ,IAAM3S,EAAY4D,YAAYqJ,IACxB/N,EAAa0E,YAAYoB,IACzBvG,EAAUmF,YAAYpF,GAQ5B,SAASoU,EAAWC,EAAeC,GAC/B,IAAMC,EAAUF,EAAc/O,KAAI,SAAAC,GAAE,OAAIA,EAAG5E,MAG3C,OAFgB2T,EAAQ7N,QAAO,SAAAlB,GAAE,OAAIgP,EAAQC,SAASjP,EAAG9D,aAK7D,IAbuBuR,EAajByB,EAAe/T,EAAW4E,KAAI,SAAAC,GAAE,OAAIA,EAAGxF,QAGvCuP,EAAQ4E,GAAI5O,KAAI,SAAAC,GAAE,OAAEA,EAAG2O,OAEzB,OAAO,sBAAK/T,UAAU,qBAAf,UAEH,cAACkP,GAAD,CACI5N,SAAUgT,EACVjT,UAAW4S,EAAW1T,EAAYc,GAClCvB,SAvBW+S,EAuBY/S,EAtBxB+S,EAAI7M,QAAQ,GAAGuN,WAAWtN,QAAQ,wBAAyB,MAuB1DkJ,MAAOA,IAEX,sBAAKnP,UAAU,uBAAf,UACI,cAACyS,GAAD,IACA,cAACU,GAAD,CAAO7R,SAAU2S,EAAW1T,EAAYc,GAAY8N,MAAOA,EAAOvP,KAAM0U,EAAcjB,MAAOA,WCtD7G,IAAM1B,IAAa,IAAI5Q,MAAQ6Q,WAAa,EACtCM,IAAY,IAAInR,MAAQoR,cAEjBoC,GAAY,WACrB,IAAM/P,EAAWC,cAYjB,OAVAmE,qBAAU,WAENpE,EACIiN,GAAmBD,aAAa,CAC5BvQ,MAAO0Q,GACPzQ,KAAMgR,QAGf,CAAC1N,IAGA,sBAAKxE,UAAU,oBAAf,UAGI,oBAAIA,UAAU,yBAAd,0EACA,cAACgU,GAAD,QCICQ,GAAY,WACrB,IAAMhQ,EAAWC,cACXgQ,EAAexP,YAAYkB,IAC3BuO,EAAyBzP,YAAYQ,IACrCkP,EAAoB1P,YAAYvF,GAChCkV,EAAoB3P,YAAYU,IAEhCkP,EAAyB,WAC3BrQ,EAASmC,OAkBb,OAfAiC,qBAAU,WACD6L,GACDjQ,EAAS4J,GAAoBC,mBAIlC,IAEHzF,qBAAU,WACFgM,IAAsBnP,KACtBjB,EAASiC,GAAoBnB,iBAC7Bd,EAASsC,SAEd,CAAC8N,EAAmBF,IAGnB,qCACI,cAAC,GAAD,IACA,+BACI,sBAAK1U,UAAU,4BAAf,UACI,qBAAKA,UAAU,qBAAf,SACI,cAAC,IAAD,CAAO2E,QAASb,EAAhB,SACK,SAAAc,GAAO,OACJ,qCACKA,EAAQb,OACL,qCACI,cAAC,GAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CACI+Q,KAAK,OACLpI,QAAS,cAAC,GAAD,MAEb,cAAC,IAAD,CAAOoI,KAAK,YACZ,cAAC,IAAD,CACIA,KAAK,WACLpI,QAAS,cAAC,GAAD,MAEb,cAAC,IAAD,CACIoI,KAAK,IACLpI,QAAS,mDAKxB9H,EAAQZ,QACL,sBAAKhE,UAAU,aAAf,UACI,gCACI,cAAC,GAAD,IACA,cAAC,GAAD,OAEJ,cAAC,GAAD,eAOxB,eAAC,IAAD,WACI,cAAC,IAAD,CACI8U,KAAK,QACLpI,QACI,qCACI,cAAC,GAAD,IACA,cAAC,GAAD,CACIhI,QAASmQ,SAKzB,cAAC,IAAD,CACIC,KAAK,YACLpI,QACI,cAAC,IAAD,CAAO/H,QAASb,EAAhB,SACK,SAAAc,GAAO,OACJ,mCACKA,EAAQZ,QACL,qCACI,cAAC,GAAD,IACA,cAAC,GAAD,CACIU,QACImQ,cAUpC,cAAC,IAAD,CAAOC,KAAK,WAAWpI,QAAS,cAAC,GAAD,cAI3CgI,GACG,mCACI,cAAC,GAAD,UACI,cAAC,GAAD,QAIXC,GACG,mCACI,cAAC,GAAD,UChJb,SAASI,KACZ,OACI,8BACI,cAAC,GAAD,MCJL,IAAMC,GAAW,SAAC9V,EAAQ+V,GAC7B,OAAI/V,EACO+V,GAAwB,cAAC,IAAD,CAAUlQ,GAAG,UAErC,cAAC,IAAD,CAAUA,GAAG,YCNb,OAA0B,sC,OCS1B,SAASmQ,KACpB,IAAM1Q,EAAWC,cAEjB,OACI,oCACI,sBAAKzE,UAAU,sBAAf,UACI,qBAAKA,UAAU,YAAYmV,IAAKC,GAAQC,IAAI,GAAGxF,MAAM,UACrD,gDAGJ,cAAC,KAAD,CACIhF,cAAe,CAAE1J,MAAO,IACxBoI,SAAU,YAA0B,IAAvBpI,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAChBoD,EAASzB,EAAcN,MAAM,CAAEtB,QAAOC,eAE1C2J,iBAAkBC,OAAaC,MAAM,CACjC9J,MAAO6J,OAAa7J,QAAQ4I,SAAS,YACrC3I,SAAU4J,OAAajB,SAAS,cAPxC,SAUK,SAAAqB,GACG,IACIC,EAQAD,EARAC,OAGAG,GAKAJ,EAPAE,QAOAF,EANAG,OAMAH,EALAI,cACAC,EAIAL,EAJAK,aACAC,EAGAN,EAHAM,WACAC,EAEAP,EAFAO,aACA2J,EACAlK,EADAkK,YAGJ,OACI,qBAAKtV,UAAU,iBAAf,SACI,uBACIuJ,SAAUoC,EACV3L,UAAU,aAFd,UAII,qBAAKA,UAAU,mBAAf,SACI,cAAC,EAAD,MAGJ,wBAAOA,UAAU,oBAAjB,UACI,qBAAKA,UAAU,mBAAf,SACI,qBAAKC,KAAI,UAAKC,EAAL,cAEb,uBACIF,UAAU,oBACVQ,GAAG,QACH0J,YAAY,UACZN,KAAK,QACLiC,MAAOR,EAAOlK,MACduI,SAAU+B,EACVG,OAAQF,OAQhB,wBAAO1L,UAAU,oBAAjB,UACI,qBAAKA,UAAU,mBAAf,SACI,qBAAKC,KAAI,UAAKC,EAAL,iBAEb,uBACIF,UAAU,oBACVQ,GAAG,WACH0J,YAAY,uCACZN,KAAK,WACLiC,MAAOR,EAAOjK,SACdsI,SAAU+B,EACVG,OAAQF,OAShB,wBACI1L,UAAU,6CACV4J,KAAK,SACLkC,SAAUN,EAHd,SAKI,8DAEJ,wBACIxL,UAAU,wCACV4J,KAAK,SACLlF,QAAS4Q,EACTxJ,SAAUN,EAJd,SAMI,6GC/FpC,IAUe+J,GAVG,WACKtQ,YAAYzF,GAC/B,OACI,8BAEI,cAAC0V,GAAD,O,OCRGM,OAHf,WACI,OAAO,qBAAKxV,UAAU,SAAf,yBCyDIyV,I,SAAAA,GAzCf,WACI,IAAMC,EAAczQ,YAAY5F,GAC1BsW,EAAa1Q,YAAY/F,GACzB0W,EAAU3Q,YAAYzF,GACtBqW,EAAU5Q,YAAYxF,GACtBH,EAAQ2F,YAAY1F,GACpBiF,EAAWC,cAejB,OAbAmE,qBAAU,WAEFpE,EADAkR,IAAgBC,EACP5S,EAAcD,YAAYxD,GAG/ByD,EAAcN,MAAM,CAChBtB,MAAO,iBACPC,SAAU,cAIvB,IAGC,qCACKwU,GAAW,cAAC,GAAD,IACXC,GAAW,yCAAYA,MACtBD,IAAYC,GAAWF,IAAeD,GACpC,eAAC,IAAD,WACI,cAAC,IAAD,CAAOZ,KAAK,QAAQpI,QAAS,cAAC,GAAD,MAC7B,cAAC,IAAD,CAAOoI,KAAK,WAAWpI,QAAS,cAACqI,GAAD,MAEhC,cAAC,IAAD,CAAOD,KAAK,IAAIpI,QAASsI,GAASW,KAClC,cAAC,IAAD,CACIb,KAAK,KACLpI,QAASsI,GAASW,EAAY,cAAC,GAAD,c,mDC1ChDG,GAAkB7S,YAAY,CAChCrD,KAAM,aACNsD,aARiB,CACjBV,KAAM,GACNhD,WAAW,EACXC,MAAO,MAMP6D,eAAa,qBACR8K,GAAoBC,cAAc9K,SAAU,SAAApE,GACzCA,EAAMK,WAAY,EAClBL,EAAMM,MAAQ,QAHT,eAKR2O,GAAoBC,cAAc7K,WAAY,SAACrE,EAAD,GAAyB,IAAfsE,EAAc,EAAdA,QACrDtE,EAAMqD,KAAN,aAAiBiB,GACjBtE,EAAMK,WAAY,KAPb,eASR4O,GAAoBC,cAAc1K,UAAW,SAACxE,EAAD,GAAuB,IAAbM,EAAY,EAAZA,MACpDN,EAAMK,WAAY,EAClBL,EAAMM,MAAQA,EAAMmE,WAXf,MAgBFkS,MCnBTC,GAAiB9S,YAAY,CAC/BrD,KAAM,YACNsD,aARiB,CACjBV,KAAM,GACNhD,WAAW,EACXC,MAAO,MAMP6D,eAAa,qBACRmO,GAAmBD,aAAajO,SAAU,SAAApE,GACvCA,EAAMK,WAAY,EAClBL,EAAMM,MAAQ,QAHT,eAKRgS,GAAmBD,aAAahO,WAAY,SAACrE,EAAD,GAAyB,IAAfsE,EAAc,EAAdA,QACnDtE,EAAMqD,KAAN,aAAiBiB,GACjBtE,EAAMK,WAAY,KAPb,eASRiS,GAAmBD,aAAa7N,UAAW,SAACxE,EAAD,GAAuB,IAAbM,EAAY,EAAZA,MAClDN,EAAMK,WAAY,EAClBL,EAAMM,MAAQA,EAAMmE,WAXf,MAgBFmS,MCVTC,GAAgB,CAClBC,IAAK,OACLC,aACAC,UAAW,CAAC,UAGVC,GAAcC,aAAeL,GAAehT,EAAUsT,SAWtDC,GAAQC,YAAe,CACzBF,SAAO,qBACFtT,EAAUpD,KAAOwW,IADf,eAEFK,GAAc7W,KAAO6W,GAAcH,SAFjC,eAGFP,GAAenW,KAAOmW,GAAeO,SAHnC,eAIF5P,GAAa9G,KAAO8G,GAAa4P,SAJ/B,IAMPI,WAhBe,SAAAC,GAAoB,6BAChCA,EAAqB,CACpBC,kBAAmB,CACfC,eAAgB,CAACC,KAAOC,KAAWC,KAAOC,KAASC,KAAOC,UAH/B,CAMnCC,QAWAC,UAAUC,IAKDC,GAAY,CAAEhB,SAAOiB,eAFXC,aAAalB,K,OCrCpCmB,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUrB,MAAOgB,GAAUhB,MAA3B,SACI,cAAC,IAAD,CAAasB,OAAQ,KAAMC,UAAWP,GAAUC,eAAhD,SACI,cAAC,IAAD,UACI,cAAC,GAAD,YAKhB1O,SAASiP,eAAe,W","file":"static/js/main.15be68e6.chunk.js","sourcesContent":["export const isAuth = state => state.user.isAuth;\r\n\r\nexport const isToken = state => (state.user.token ? true : false);\r\n\r\nexport const getToken = state => state.user.token;\r\n\r\nexport const isLoading = state => state.user.isLoading;\r\n\r\nexport const error = state => state.user.error;\r\n\r\nexport const isModalLogout = state => state.user.isModalLogout;\r\n\r\nexport const getName = state => state.user.user.name;\r\n\r\nexport const getUser = state => state.user.user;\r\n\r\nexport const getBalance = state => state.user.user.balance;\r\n","export default __webpack_public_path__ + \"static/media/sprite.da5a518e.svg\";","import sprite from '@assets/sprite.svg';\r\nimport './logo.scss';\r\n\r\nexport const Logo = () => {\r\n    return (\r\n        <div className=\"logo\">\r\n            <a href=\"/\" className=\"logo_link\">\r\n                <svg className=\"logo_icon\">\r\n                    <use href={`${sprite}#wallet`}></use>\r\n                </svg>\r\n                <p className=\"logo_text\">Wallet</p>\r\n            </a>\r\n        </div>\r\n    );\r\n};\r\n","import axios from 'axios';\r\naxios.defaults.baseURL = 'http://localhost:3001/api/';\r\n\r\nconst setAxiosToken = token => {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n};\r\n\r\nconst tempData = {\r\n    categories: [\r\n        {\r\n            id: 1,\r\n            income: true,\r\n            name: 'Основний дохід',\r\n        },\r\n        {\r\n            id: 2,\r\n            income: true,\r\n            name: 'Додатково',\r\n        },\r\n        {\r\n            id: 3,\r\n            income: false,\r\n            name: 'Авто',\r\n        },\r\n        {\r\n            id: 4,\r\n            income: false,\r\n            name: 'Їжа',\r\n        },\r\n    ],\r\n    transaction: [\r\n        {\r\n            id: 1,\r\n            categoryId: 1,\r\n            income: true,\r\n            sum: 2500,\r\n            comment: 'my comment',\r\n            balance: 2500,\r\n            datetime: Date.now(),\r\n            month: 5,\r\n            year: 2022,\r\n        },\r\n    ],\r\n    user: {\r\n        name: 'Guest',\r\n        email: 'test@gmail.com',\r\n        password: 'qwerty',\r\n        balance: 2500,\r\n        token: 'qwetyyuuiioopppkkcjhcggfufufj',\r\n    },\r\n    statistic: [\r\n        { category: 1, sum: 3000 },\r\n        { category: 2, sum: 1000 },\r\n        { category: 3, sum: 500 },\r\n        { category: 4, sum: 1000 },\r\n    ],\r\n    operations: [\r\n        {\r\n            id: 1,\r\n            category: 'Регулярний дохід',\r\n            income: true,\r\n            sum: 10000,\r\n            comment: 'Робота',\r\n            balance: 10000,\r\n            date: Date.now(),\r\n            month: 5,\r\n            year: 2022,\r\n        },\r\n        {\r\n            id: 2,\r\n            category: 'Різне',\r\n            income: false,\r\n            sum: 1000,\r\n            comment: 'Подарок дружині',\r\n            balance: 9000,\r\n            date: Date.now(),\r\n            month: 5,\r\n            year: 2022,\r\n        },\r\n        {\r\n            id: 3,\r\n            category: 'Не регулярний дохід',\r\n            income: true,\r\n            sum: 2000,\r\n            comment: 'Подарок',\r\n            balance: 11000,\r\n            date: Date.now(),\r\n            month: 5,\r\n            year: 2022,\r\n        },\r\n        {\r\n            id: 4,\r\n            category: 'Машина',\r\n            income: false,\r\n            sum: 3000,\r\n            comment: 'Ремонт',\r\n            balance: 8000,\r\n            date: Date.now(),\r\n            month: 5,\r\n            year: 2022,\r\n        },\r\n        {\r\n            id: 5,\r\n            category: 'Продукти',\r\n            income: false,\r\n            sum: 500,\r\n            comment: 'На тиждень',\r\n            balance: 7500,\r\n            date: Date.now(),\r\n            month: 5,\r\n            year: 2022,\r\n        },\r\n    ],\r\n};\r\n\r\nconst dataExampl = {\r\n    categories: [\r\n        { id: 1, name: 'Основні витрати', income: true },\r\n        { id: 2, name: 'Продукти', income: true },\r\n        { id: 3, name: 'Машина', income: true },\r\n        { id: 4, name: 'Турбота про себе', income: true },\r\n        { id: 5, name: 'Турбота за дітей', income: true },\r\n        { id: 6, name: 'Товари для дому', income: true },\r\n        { id: 7, name: 'Освіта', income: true },\r\n        { id: 8, name: 'Дозвілля', income: true },\r\n        { id: 9, name: 'Інші витрати', income: true },\r\n        { id: 10, name: 'Дохід', income: false },\r\n        { id: 11, name: 'Інший дохід', income: false },\r\n    ],\r\n    statistic: [\r\n        { category: 1, sum: 8700 },\r\n        { category: 2, sum: 3800.74 },\r\n        { category: 3, sum: 1500 },\r\n        { category: 4, sum: 800 },\r\n        { category: 5, sum: 2208.05 },\r\n        { category: 6, sum: 300 },\r\n        { category: 7, sum: 3400 },\r\n        { category: 8, sum: 1230 },\r\n        { category: 9, sum: 610 },\r\n    ],\r\n};\r\n\r\n//  ----------------   USER   -----------------------\r\n\r\nexport const registerAPI = async user => {\r\n    // const result = await axios.post('auth/register', {\r\n    //     userName: user.name,\r\n    //     email: user.email,\r\n    //     password: user.password,\r\n    // });\r\n    // if (result.data.code === 201) {\r\n    //     setAxiosToken(result.data.data.token);\r\n    //     return result.data.data;\r\n    // }\r\n\r\n    return tempData.user;\r\n};\r\n\r\nexport const loginAPI = async user => {\r\n    // const result = await axios.post('auth/login', user);\r\n    // if (result.data.code === 200) {\r\n    //     console.log(result.data.data.token);\r\n    //     setAxiosToken(result.data.data.token);\r\n    //     console.dir(axios);\r\n    //     return result.data.data;\r\n    // }\r\n    if (\r\n        user.email === tempData.user.email &&\r\n        user.password === tempData.user.password\r\n    ) {\r\n        return tempData.user;\r\n    }\r\n    throw new Error('Wrong email or password');\r\n};\r\n\r\nexport const logoutAPI = async () => {\r\n    // await axios.get('auth/logout');\r\n    return { status: 'ok', code: 204 };\r\n};\r\n\r\nexport const getUserAPI = async token => {\r\n    // setAxiosToken(token);\r\n    // const result = await axios.get('users/current');\r\n    // if (result.data.code === 200) {\r\n    //     return result.data.data.user;\r\n    // }\r\n    return tempData.user;\r\n};\r\n\r\n// -------------  Category  --------------------------\r\n\r\nexport const getCategoryAPI = async () => {\r\n    // const resultD = await axios.get('categories/income');\r\n    // const resultC = await axios.get('categories/expense');\r\n    // return [...resultC.data.categories, ...resultD.data.categories];\r\n\r\n    // return tempData.categories;\r\n    return dataExampl.categories;\r\n};\r\n\r\n// ------------ Statistic ----------------------------\r\n\r\nexport const getStatisticAPI = async ({ month, year }) => {\r\n    // const query = `${month || year ? '?' : null}${\r\n    //     month ? `month=${month}` : null\r\n    // }${month && year ? '&' : null}${year ? `year=${year}` : null}`;\r\n\r\n    // const result = await axios.get(`transactions/statistics${query}`);\r\n    // console.log('-------------- statistic -----------------');\r\n    // console.log(result);\r\n    // return result.data.data.transaction;\r\n    // return tempData.statistic;\r\n    return dataExampl.statistic;\r\n};\r\n\r\n// ------------  Finance (operations) ----------------------------\r\n\r\nexport const getOperationsAPI = async () => {\r\n    // const result = await axios.get('transactions');\r\n    // console.log('--------------- transaction --------------');\r\n    // console.log(result);\r\n    // return result.data.data;\r\n    return { transactions: tempData.operations, user_balance: 3500 };\r\n};\r\n\r\nexport const addTransactionAPI = async data => {\r\n    // const result = await axios.post('transactions', data);\r\n    // return result.data.transaction;\r\n    return;\r\n};\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { registerAPI, loginAPI, logoutAPI, getUserAPI } from '@api';\r\n\r\nconst login = createAsyncThunk('login', async data => {\r\n    const result = await loginAPI(data);\r\n    return result;\r\n});\r\n\r\nconst register = createAsyncThunk('register', async data => {\r\n    const result = await registerAPI(data);\r\n    return result;\r\n});\r\n\r\nconst logout = createAsyncThunk('logout', async () => {\r\n    const result = await logoutAPI();\r\n    return result;\r\n});\r\n\r\nconst currentUser = createAsyncThunk('current', async token => {\r\n    const result = await getUserAPI(token);\r\n    return result;\r\n});\r\n\r\nexport const userOperation = { login, register, logout, currentUser };\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nimport { userOperation } from './user-operation';\r\n\r\nconst initialState = {\r\n    user: {},\r\n    token: null,\r\n    isAuth: false,\r\n    isModalLogout: false,\r\n    isLoading: false,\r\n    error: null,\r\n};\r\n\r\nconst userSlice = createSlice({\r\n    name: 'user',\r\n    initialState,\r\n    reducers: {\r\n        openModalLogout: state => {\r\n            state.isModalLogout = true;\r\n        },\r\n        closeModalLogout: state => {\r\n            state.isModalLogout = false;\r\n        },\r\n    },\r\n    extraReducers: {\r\n        [userOperation.register.pending]: state => {\r\n            state.isLoading = true;\r\n            state.error = null;\r\n            state.isAuth = false;\r\n        },\r\n        [userOperation.register.fulfilled]: (state, { payload }) => {\r\n            state.user.name = payload.userName;\r\n            state.user.email = payload.email;\r\n            state.token = payload.token;\r\n            state.isAuth = true;\r\n            state.isLoading = false;\r\n        },\r\n        [userOperation.register.rejected]: (state, { error }) => {\r\n            state.isLoading = false;\r\n            state.error = error.message;\r\n        },\r\n\r\n        [userOperation.login.pending]: state => {\r\n            state.isLoading = true;\r\n            state.error = null;\r\n            state.isAuth = false;\r\n        },\r\n\r\n        [userOperation.login.fulfilled]: (state, { payload }) => {\r\n            state.user.name = payload.userName;\r\n            state.user.email = payload.email;\r\n            state.token = payload.token;\r\n            state.isAuth = true;\r\n            state.isLoading = false;\r\n        },\r\n\r\n        [userOperation.login.rejected]: (state, { error }) => {\r\n            state.isLoading = false;\r\n            state.error = error.message;\r\n        },\r\n\r\n        [userOperation.logout.pending]: state => {\r\n            state.isLoading = true;\r\n            state.error = null;\r\n        },\r\n        [userOperation.logout.fulfilled]: (state, { payload }) => {\r\n            state.user = {};\r\n            state.token = null;\r\n            state.isAuth = false;\r\n            state.isLoading = false;\r\n        },\r\n        [userOperation.logout.rejected]: (state, { error }) => {\r\n            state.isLoading = false;\r\n            state.error = error.message;\r\n        },\r\n        [userOperation.currentUser.pending]: state => {\r\n            state.isLoading = true;\r\n            state.error = null;\r\n        },\r\n        [userOperation.currentUser.fulfilled]: (state, { payload }) => {\r\n            state.user.name = payload.userName;\r\n            state.user.email = payload.email;\r\n            state.user.balance = payload.balance;\r\n            state.isAuth = true;\r\n            state.isLoading = false;\r\n        },\r\n        [userOperation.currentUser.rejected]: (state, { error }) => {\r\n            state.isLoading = false;\r\n            state.error = error.message;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { openModalLogout, closeModalLogout } = userSlice.actions;\r\nexport default userSlice;\r\n","export const globalMedia = {\r\n    small: '(max-width: 767px)',\r\n    medium: '(min-width: 768px)',\r\n    mediumOnly: '(min-width: 768px) and (max-width: 1199px)',\r\n    large: '(min-width: 1200px)',\r\n};\r\n","export const navList = [\r\n    { icon: 'home', text: 'Головна', linkTo: '/home' },\r\n    { icon: 'statistic', text: 'Статистика', linkTo: '/diagram' },\r\n    { icon: 'currency', text: '', linkTo: '/currency' },\r\n];\r\n","import { useDispatch } from 'react-redux';\r\nimport Media from 'react-media';\r\n\r\nimport sprite from '@assets/sprite.svg';\r\nimport './buttonExit.scss';\r\n\r\nimport { openModalLogout } from '@redux/user/user-slice';\r\nimport { userOperation } from '@redux/user/user-operation';\r\nimport { globalMedia } from '@data';\r\n\r\nexport const ButtonExit = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const onClick = () => {\r\n        // dispatch(openModalLogout());\r\n        dispatch(userOperation.logout());\r\n    };\r\n\r\n    return (\r\n        <button className=\"button_exit\" onClick={onClick}>\r\n            <div className=\"button_exit__block\">\r\n                <svg className=\"button_exit__icon\">\r\n                    <use href={`${sprite}#exit`}></use>\r\n                </svg>\r\n            </div>\r\n            <Media queries={globalMedia}>\r\n                {matches => (\r\n                    <>\r\n                        {matches.medium && (\r\n                            <p className=\"button_exit__text\">Вийти</p>\r\n                        )}\r\n                    </>\r\n                )}\r\n            </Media>\r\n        </button>\r\n    );\r\n};\r\n","import { NavLink } from 'react-router-dom';\r\nimport Media from 'react-media';\r\n\r\nimport sprite from '@assets/sprite.svg';\r\nimport './itemNav.scss';\r\nimport { globalMedia } from '@data';\r\n\r\nexport const ItemNav = ({ icon, text, linkTo }) => {\r\n    return (\r\n        <NavLink\r\n            className={({ isActive }) =>\r\n                isActive ? 'nav_item active' : 'nav_item'\r\n            }\r\n            to={linkTo}\r\n        >\r\n            <svg className=\"nav_item__icon\">\r\n                <use href={`${sprite}#${icon}`}></use>\r\n            </svg>\r\n            <Media queries={globalMedia}>\r\n                {matches => (\r\n                    <>\r\n                        {matches.medium && (\r\n                            <p className=\"nav_item__text\">{text}</p>\r\n                        )}\r\n                    </>\r\n                )}\r\n            </Media>\r\n        </NavLink>\r\n    );\r\n};\r\n","import { useSelector } from 'react-redux';\r\n\r\nimport { getName } from '@redux/user/user-selector';\r\nimport { ButtonExit } from '@shared';\r\nimport './headerNav.scss';\r\n\r\nexport const HeaderNav = () => {\r\n    const userName = useSelector(getName);\r\n    return (\r\n        <ul className=\"header_nav__list\">\r\n            <li className=\"header_nav__item\">\r\n                <span className=\"header_nav__text\">{userName}</span>\r\n            </li>\r\n            <li className=\"header_nav__item\">\r\n                <ButtonExit />\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n","import Media from 'react-media';\r\nimport { navList, globalMedia } from '@data';\r\nimport { ItemNav } from '@shared';\r\nimport './navigation.scss';\r\n\r\nexport const Navigation = () => {\r\n    return (\r\n        <ul className=\"nav_list\">\r\n            {navList.map((el, idx) => {\r\n                return (\r\n                    <Media queries={globalMedia} key={idx}>\r\n                        {matches => (\r\n                            <>\r\n                                {matches.medium && el.text === '' ? null : (\r\n                                    <li className=\"nav_list__item\" key={idx}>\r\n                                        <ItemNav\r\n                                            icon={el.icon}\r\n                                            text={el.text}\r\n                                            linkTo={el.linkTo}\r\n                                        />\r\n                                    </li>\r\n                                )}\r\n                            </>\r\n                        )}\r\n                    </Media>\r\n                );\r\n            })}\r\n        </ul>\r\n    );\r\n};\r\n","export const getOperations = state => {\r\n    return state.finance.data;\r\n};\r\n\r\nexport const getBalance = state => state.finance.userBalance;\r\n\r\nexport const isLoading = state => state.finance.isLoading;\r\n\r\nexport const isModalTransaction = state => state.finance.isModalAddTransaction;\r\n\r\nexport const isSaveModalDateStatic = state =>\r\n    state.finance.isSaveModalDateStatic;\r\n","import { useSelector } from 'react-redux';\r\nimport './balans.scss';\r\nimport { getBalance } from '@redux/finance/finance-selector';\r\n\r\nexport const Balans = () => {\r\n    const balans = useSelector(getBalance);\r\n\r\n    const makeMoney = n => {\r\n        return parseFloat(n)\r\n            .toFixed(2)\r\n            .replace(/(\\d)(?=(\\d{3})+\\.)/g, '$1 ');\r\n    };\r\n\r\n    return (\r\n        <div className=\"balans\">\r\n            <p className=\"balans__title\">Ваш баланс</p>\r\n            <p className=\"balans__order\">&#8372; {makeMoney(balans)}</p>\r\n        </div>\r\n    );\r\n};\r\n","import { HeaderNav } from '@component';\r\nimport { Logo } from '@shared';\r\nimport './header.scss';\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <>\r\n            <div className=\"header\">\r\n                <div className=\"container container__header\">\r\n                    <Logo />\r\n                    <HeaderNav />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","export const isLoadingCategories = state => state.categories.isLoading;\r\n\r\nexport const isCategoriesFull = state =>\r\n    state.categories.data.length > 0 ? true : false;\r\n\r\nexport const getCategoryDebet = state =>\r\n    state.categories.data.filter(el => el.income);\r\n\r\nexport const getCategoryCredit = state =>\r\n    state.categories.data.filter(el => !el.income);\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { getOperationsAPI, addTransactionAPI } from '@api';\r\n\r\nconst getOperations = createAsyncThunk('getOperations', async data => {\r\n    const result = await getOperationsAPI(data);\r\n\r\n    return result;\r\n});\r\n\r\nconst addOperation = createAsyncThunk('addOperation', async data => {\r\n    const result = await addTransactionAPI(data);\r\n    return result;\r\n});\r\n\r\nexport const getFinanceOpertaion = { getOperations, addOperation };\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nimport { getFinanceOpertaion } from './finance-operation';\r\n\r\nconst initialState = {\r\n    data: [],\r\n    userBalance: 0,\r\n    isLoading: false,\r\n    error: null,\r\n    isModalAddTransaction: false,\r\n    isSaveModalDateStatic: false,\r\n};\r\n\r\nconst financeSlice = createSlice({\r\n    name: 'finance',\r\n    initialState,\r\n    reducers: {\r\n        openModalTransaction: state => {\r\n            state.isModalAddTransaction = true;\r\n        },\r\n        closeModalTransaction: state => {\r\n            state.isModalAddTransaction = false;\r\n        },\r\n        setSaveModalDateStatic: state => {\r\n            state.isSaveModalDateStatic = true;\r\n        },\r\n        clearSaveModalDateStatic: state => {\r\n            state.isSaveModalDateStatic = false;\r\n        },\r\n    },\r\n    extraReducers: {\r\n        [getFinanceOpertaion.getOperations.pending]: state => {\r\n            state.isLoading = true;\r\n            state.error = null;\r\n        },\r\n        [getFinanceOpertaion.getOperations.fulfilled]: (state, { payload }) => {\r\n            state.data = [...payload.transactions];\r\n            state.userBalance = payload.user_balance;\r\n            state.isLoading = false;\r\n        },\r\n        [getFinanceOpertaion.getOperations.rejected]: (state, { error }) => {\r\n            state.isLoading = false;\r\n            state.error = error.message;\r\n        },\r\n\r\n        [getFinanceOpertaion.addOperation.pending]: state => {\r\n            state.isLoading = true;\r\n            state.error = null;\r\n        },\r\n        [getFinanceOpertaion.addOperation.fulfilled]: (state, { payload }) => {\r\n            state.data = [...payload, ...state.data];\r\n            state.isLoading = false;\r\n        },\r\n        [getFinanceOpertaion.addOperation.rejected]: (state, { error }) => {\r\n            state.isLoading = false;\r\n            state.error = error.message;\r\n        },\r\n    },\r\n});\r\n\r\nexport const {\r\n    openModalTransaction,\r\n    closeModalTransaction,\r\n    setSaveModalDateStatic,\r\n    clearSaveModalDateStatic,\r\n} = financeSlice.actions;\r\nexport default financeSlice;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Datetime from 'react-datetime';\r\nimport { getBalance } from '../../redux/user/user-selector';\r\nimport {\r\n    getCategoryDebet,\r\n    getCategoryCredit,\r\n} from '@redux/categories/categories-selector';\r\nimport { isSaveModalDateStatic } from '@redux/finance/finance-selector';\r\nimport { getFinanceOpertaion } from '@redux/finance/finance-operation';\r\nimport { closeModalTransaction } from '@redux/finance/finance-slice';\r\nimport 'moment/locale/ru';\r\n\r\nimport sprite from '@assets/sprite.svg';\r\nimport './modalTransaction.scss';\r\nimport { alert, defaults } from '@pnotify/core';\r\n\r\n// import { validate } from 'indicative/validator';\r\nexport const ModalTransaction = () => {\r\n    const [modalTypeTransaction, setModalTypeTransaction] = useState('income');\r\n    const [date, setDate] = useState(new Date());\r\n    const [category, setCategory] = useState('Регулярный доход');\r\n    const [listActive, setListActive] = useState(false);\r\n    const [summ, setSumm] = useState('');\r\n\r\n    defaults.styling = 'material';\r\n    defaults.icons = 'material';\r\n    defaults.delay = 1000;\r\n    const currentBalance = useSelector(getBalance);\r\n    const getDebit = useSelector(getCategoryDebet);\r\n    const getCredit = useSelector(getCategoryCredit);\r\n    const pushDate = useSelector(isSaveModalDateStatic);\r\n    console.log(getDebit);\r\n    console.log(getCredit);\r\n    const dispatch = useDispatch();\r\n\r\n    function closeModalItem() {\r\n        dispatch(closeModalTransaction());\r\n    }\r\n\r\n    useEffect(() => {\r\n        const backdrop = document.querySelector('#backdrop');\r\n\r\n        function clickBackdrop(e) {\r\n            if (e.target === backdrop) {\r\n                closeModalItem();\r\n            }\r\n        }\r\n\r\n        function pressEsc(e) {\r\n            if (e.code === 'Escape') {\r\n                closeModalItem();\r\n            }\r\n        }\r\n\r\n        document.addEventListener('click', clickBackdrop);\r\n        document.addEventListener('keydown', pressEsc);\r\n\r\n        return function cleanup() {\r\n            document.removeEventListener('click', clickBackdrop);\r\n            document.removeEventListener('keydown', pressEsc);\r\n        };\r\n    }, [closeModalItem]);\r\n    useEffect(() => {\r\n        if (pushDate) {\r\n            closeModalItem();\r\n        }\r\n    }, [pushDate]);\r\n\r\n    function dateChange(e) {\r\n        setDate(e._d);\r\n    }\r\n    function listOpen() {\r\n        setListActive(!listActive);\r\n    }\r\n    function categoryClick(e) {\r\n        setCategory(e.target.textContent);\r\n        setListActive(!listActive);\r\n    }\r\n\r\n    function switchToggle() {\r\n        if (modalTypeTransaction === 'income') {\r\n            return 'toggleIncome';\r\n        }\r\n        return 'toggleIncomeSwitch';\r\n    }\r\n\r\n    function switchActiveDebet() {\r\n        if (modalTypeTransaction === 'income') {\r\n            const notActiv = 'switchTypeBalance__text';\r\n            const active = 'switchTypeBalance__text__active';\r\n            return `${notActiv} ${active}`;\r\n        }\r\n\r\n        return 'switchTypeBalance__text';\r\n    }\r\n    function switchActive() {\r\n        if (modalTypeTransaction === 'spending') {\r\n            const notActiv = 'switchTypeBalance__text';\r\n            const active = 'switchTypeBalance__text__active';\r\n            return `${notActiv} ${active}`;\r\n        }\r\n\r\n        return 'switchTypeBalance__text';\r\n    }\r\n\r\n    async function submitHandler(e) {\r\n        e.preventDefault();\r\n        const nextBalance = currentBalance - summ;\r\n        if (\r\n            nextBalance <= 0 &&\r\n            modalTypeTransaction === 'spending' &&\r\n            category !== 'Выберите категорию'\r\n        ) {\r\n            alert({\r\n                text: 'Недостаточно средств',\r\n                hide: true,\r\n                delay: 2000,\r\n                sticker: false,\r\n                closer: true,\r\n                dir1: 'down',\r\n            });\r\n            return;\r\n        }\r\n        if (category === 'Выберите категорию') {\r\n            alert({\r\n                text: 'Пожалуйста выберите категорию',\r\n                hide: true,\r\n                delay: 2000,\r\n                sticker: false,\r\n                closer: true,\r\n                dir1: 'down',\r\n            });\r\n            return;\r\n        }\r\n    }\r\n\r\n    function switchClickHandler(e) {\r\n        if (!e.target.checked) {\r\n            setModalTypeTransaction('spending');\r\n            setCategory('Выберите категорию');\r\n            return;\r\n        }\r\n        setModalTypeTransaction('income');\r\n        setCategory('Регулярный доход');\r\n    }\r\n    // випадающий список\r\n    function DropMenuActive() {\r\n        if (category !== 'Выберите категорию') {\r\n            const notActiv = 'dropField';\r\n            const active = 'dropFieldActive';\r\n\r\n            return `${notActiv} ${active}`;\r\n        }\r\n\r\n        return 'dropField';\r\n    }\r\n    const dropListSelectJSX = (\r\n        <div className=\"dropContainer\">\r\n            <div className={DropMenuActive()} onClick={listOpen}>\r\n                <span className=\"categoryDrop\">{category}</span>\r\n            </div>\r\n\r\n            {listActive && (\r\n                <ul className=\"dropList\">\r\n                    {/* категории для доходв */}\r\n                    {modalTypeTransaction === 'income' &&\r\n                        getDebit.map((elem, idx) => {\r\n                            return (\r\n                                <li\r\n                                    onClick={categoryClick}\r\n                                    className=\"dropListItem\"\r\n                                    key={idx}\r\n                                    data-id={elem.id}\r\n                                >\r\n                                    {elem.name}\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    {/* {modalTypeTransaction === 'income' && (\r\n                        <li onClick={categoryClick} className=\"dropListItem\">\r\n                            Нерегулярный доход\r\n                        </li>\r\n                    )} */}\r\n\r\n                    {/* категории для расхода */}\r\n                    {modalTypeTransaction === 'spending' && (\r\n                        <li onClick={categoryClick} className=\"dropListItem\">\r\n                            Основной\r\n                        </li>\r\n                    )}\r\n                    {modalTypeTransaction === 'spending' && (\r\n                        <li onClick={categoryClick} className=\"dropListItem\">\r\n                            Еда\r\n                        </li>\r\n                    )}\r\n                    {modalTypeTransaction === 'spending' && (\r\n                        <li onClick={categoryClick} className=\"dropListItem\">\r\n                            Авто\r\n                        </li>\r\n                    )}\r\n                    {modalTypeTransaction === 'spending' && (\r\n                        <li onClick={categoryClick} className=\"dropListItem\">\r\n                            Развитие\r\n                        </li>\r\n                    )}\r\n                    {modalTypeTransaction === 'spending' && (\r\n                        <li onClick={categoryClick} className=\"dropListItem\">\r\n                            Дети\r\n                        </li>\r\n                    )}\r\n                    {modalTypeTransaction === 'spending' && (\r\n                        <li onClick={categoryClick} className=\"dropListItem\">\r\n                            Дом\r\n                        </li>\r\n                    )}\r\n                    {modalTypeTransaction === 'spending' && (\r\n                        <li onClick={categoryClick} className=\"dropListItem\">\r\n                            Образование\r\n                        </li>\r\n                    )}\r\n                    {modalTypeTransaction === 'spending' && (\r\n                        <li onClick={categoryClick} className=\"dropListItem\">\r\n                            Остальное\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n            )}\r\n\r\n            <span className=\"dropIconModal\">\r\n                <svg className=\"dropIcon\">\r\n                    <use href={`${sprite}#dropItemModal`}></use>\r\n                </svg>\r\n            </span>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"modalContainer\">\r\n            <div className=\"containerClose\" onClick={closeModalItem}>\r\n                <span className=\"itemCloseModal\">\r\n                    <svg className=\"iconCloseBtn\">\r\n                        <use href={`${sprite}#closeModal`}></use>\r\n                    </svg>\r\n                </span>\r\n            </div>\r\n            <h2 className=\"titleText\">Добавить Транзакцию</h2>\r\n            <form\r\n                onSubmit={submitHandler}\r\n                id=\"modalTransaction\"\r\n                className=\"modalForm\"\r\n            >\r\n                <div className=\"switchTypeBalance\">\r\n                    <span className={switchActiveDebet()}>Доход</span>\r\n                    <div className=\"toggleContainerType\">\r\n                        <label\r\n                            className=\"toggleTypeBody\"\r\n                            htmlFor=\"switchType\"\r\n                        ></label>\r\n                        <span className={switchToggle()} id=\"toggle\">\r\n                            <svg className=\"modalBtnPlus\">\r\n                                <use\r\n                                    href={\r\n                                        modalTypeTransaction === 'income'\r\n                                            ? `${sprite}#plusSvg`\r\n                                            : `${sprite}#modalMinus`\r\n                                    }\r\n                                ></use>\r\n                            </svg>\r\n                        </span>\r\n                    </div>\r\n                    <input\r\n                        className=\"switchToggleInput\"\r\n                        onChange={switchClickHandler}\r\n                        name=\"modalTypeTransaction\"\r\n                        type=\"checkbox\"\r\n                        id=\"switchType\"\r\n                        defaultChecked\r\n                    />\r\n                    <span className={switchActive()}>Расход</span>\r\n                </div>\r\n                {dropListSelectJSX}\r\n                <div className=\"sumContainer\">\r\n                    <input\r\n                        className=\"sumField\"\r\n                        required\r\n                        min=\"0.00\"\r\n                        step=\"0.01\"\r\n                        type=\"number\"\r\n                        placeholder=\"0.00\"\r\n                        // value={}\r\n                    />\r\n                </div>\r\n                <div className=\"calendarContainer\">\r\n                    <Datetime\r\n                        onChange={dateChange}\r\n                        inputProps={{ className: 'calendarField' }}\r\n                        initialValue={date}\r\n                        closeOnSelect={true}\r\n                        timeFormat={false}\r\n                    />\r\n                    <svg className=\"calendarIcon\">\r\n                        <use href={`${sprite}#calendarSvg`}></use>\r\n                    </svg>\r\n                </div>\r\n                <div className=\"commentContainer\">\r\n                    <textarea\r\n                        className=\"commentField\"\r\n                        placeholder=\"коментарий\"\r\n                    />\r\n                </div>\r\n            </form>\r\n            <div className=\"buttonContainer\">\r\n                <button\r\n                    className=\"submitButton\"\r\n                    type=\"submit\"\r\n                    onClick={() => {\r\n                        dispatch(getFinanceOpertaion.addOperation({}));\r\n                    }}\r\n                >\r\n                    Добавить\r\n                </button>\r\n                <button className=\"cancelButton\" onClick={closeModalItem}>\r\n                    Отмена\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport './Backdrop.scss';\r\n\r\nexport const Backdrop = ({ children }) => {\r\n    const modalRoot = document.querySelector('#modalroot');\r\n    return createPortal(\r\n        <div id=\"backdrop\" className=\"backdrop\">\r\n            {children}\r\n        </div>,\r\n        modalRoot,\r\n    );\r\n};\r\n","import { useDispatch } from 'react-redux';\r\nimport { userOperation } from '../../redux/user/user-operation';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nexport const RegistrationForm = () => {\r\n   const dispatch = useDispatch();\r\n   // const isAuth = useSelector(state => state.user.isAuth);\r\n   return (\r\n      <div>\r\n         <Formik\r\n            initialValues={{\r\n               email: '',\r\n               password: '',\r\n               confirmPassword: '',\r\n               name: '',\r\n            }}\r\n            //відправляємо дані на сервер\r\n\r\n            onSubmit={({ email, password, name }) => {\r\n               const user = { name, email, password };\r\n               console.log(user)\r\n               dispatch(userOperation.register(user));\r\n\r\n            }}\r\n\r\n            //валідація форми\r\n\r\n            validationSchema={Yup.object().shape({\r\n               email: Yup.string().email().required('Required'),\r\n               password: Yup.string()\r\n                  .required('Required')\r\n                  .min(6, 'Password must be at least 6 characters')\r\n                  .max(12, 'Password must be at most 12 characters'),\r\n               confirmPassword: Yup.string()\r\n                  .required('Required')\r\n                  .oneOf(\r\n                     [Yup.ref('password'), null],\r\n                     'Passwords must match',\r\n                  ),\r\n               name: Yup.string().min(\r\n                  2,\r\n                  'Name must be at least 2 characters',\r\n               ),\r\n            })}\r\n         >\r\n            {props => {\r\n               const {\r\n                  values,\r\n                  touched,\r\n                  errors,\r\n                  isSubmitting,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  handleSubmit,\r\n               } = props;\r\n               return (\r\n                  //Форма для реєстрації\r\n\r\n                  <form onSubmit={handleSubmit}>\r\n                     <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"E-mail\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.email}\r\n                     />\r\n                     {errors.email && touched.email && errors.email}\r\n                     <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\"Пароль\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.password}\r\n                     />\r\n                     {errors.password &&\r\n                        touched.password &&\r\n                        errors.password}\r\n                     <input\r\n                        type=\"password\"\r\n                        name=\"confirmPassword\"\r\n                        placeholder=\"Подтвердите пароль\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.confirmPassword}\r\n                     />\r\n                     {errors.confirmPassword &&\r\n                        touched.confirmPassword &&\r\n                        errors.confirmPassword}\r\n                     <input\r\n                        type=\"name\"\r\n                        name=\"name\"\r\n                        placeholder=\"Ваше имя\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.name}\r\n                     />\r\n                     {errors.name && touched.name && errors.name}\r\n\r\n                     <button\r\n                        type=\"submit\"\r\n                        disabled={isSubmitting}\r\n                     >\r\n                        РЕГИСТРАЦИЯ\r\n                     </button>\r\n\r\n                     <button type=\"submit\" disabled={isSubmitting}>\r\n                        ВХОД\r\n                     </button>\r\n                  </form>\r\n               );\r\n            }}\r\n         </Formik>\r\n      </div>\r\n   );\r\n};\r\n","async function fetchCurrency() {\r\n    const response = await fetch(\r\n        'https://api.privatbank.ua/p24api/pubinfo?exchange&json&coursid=11',\r\n    );\r\n    const data = await response.json();\r\n\r\n    return data;\r\n}\r\n\r\nexport default { fetchCurrency };\r\n","export const currencies = ['USD', 'EUR', 'RUR'];\r\n","import React, { useEffect, useState } from 'react';\r\nimport currencyApi from '../../services/currencyApi';\r\n\r\nimport { currencies } from '../../assets/constants.js';\r\n// import styles from \"./Currency.module.css\";\r\nimport './curr.scss';\r\n\r\nexport default function CurrencyTable() {\r\n    const [currency, setCurrency] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchCurrency = async () => {\r\n            const data = await currencyApi.fetchCurrency();\r\n            const filteredCurrencies = [];\r\n            currencies.forEach(currency => {\r\n                data.forEach(element => {\r\n                    parseInt(element.buy).toFixed(2);\r\n                    if (element.ccy === currency) {\r\n                        filteredCurrencies.push({\r\n                            ccy: element.ccy,\r\n                            buy: Number(element.buy).toFixed(2),\r\n                            sale: Number(element.sale).toFixed(2),\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n            setCurrency(filteredCurrencies);\r\n            localStorage.setItem(\r\n                'currency',\r\n                JSON.stringify(filteredCurrencies),\r\n            );\r\n            localStorage.setItem('currencyTime', Date.now());\r\n        };\r\n        let currencyLS = JSON.parse(localStorage.getItem('currency'));\r\n        let currencyTime = JSON.parse(localStorage.getItem('currencyTime'));\r\n        if (!currencyLS) {\r\n            fetchCurrency();\r\n        }\r\n        if (Date.now() - currencyTime > 3600000) {\r\n            fetchCurrency();\r\n        } else {\r\n            setCurrency(currencyLS);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"currency\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <td>Валюта</td>\r\n                        <td>Купівля</td>\r\n                        <td>Продаж</td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {currency.map(item => {\r\n                        return (\r\n                            <tr key={item.ccy}>\r\n                                <td>{item.ccy}</td>\r\n                                <td>{item.buy}</td>\r\n                                <td>{item.sale}</td>\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n","import './homeTabItemMobile.scss';\r\nimport moment from 'moment';\r\n\r\nconst homeTabItemMobile = ({\r\n    operation: { category, income, sum, balance, comment, date },\r\n}) => {\r\n    return (\r\n        <li\r\n            className={\r\n                income\r\n                    ? 'homeTabItem homeTabItem--green'\r\n                    : 'homeTabItem homeTabItem--red'\r\n            }\r\n        >\r\n            <p>\r\n                Дата:\r\n                <span>{moment(date).format('DD.MM.YY')}</span>\r\n            </p>\r\n            <p>\r\n                Тип:<span>{income ? '+' : '-'}</span>\r\n            </p>\r\n            <p>\r\n                Категория:<span>{category}</span>\r\n            </p>\r\n            <p>\r\n                Комментарий:<span>{comment}</span>\r\n            </p>\r\n            <p>\r\n                Сумма:\r\n                <span className=\"homeTabItemResult\">{sum}</span>\r\n            </p>\r\n            <p>\r\n                Баланс:<span>{balance}</span>\r\n            </p>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default homeTabItemMobile;\r\n","import './homeTabItemTabletAndDesktop.scss';\r\nimport moment from 'moment';\r\n\r\nconst homeTabItemTabletAndDesktop = ({\r\n    operation: { category, income, sum, balance, comment, date },\r\n    index,\r\n}) => {\r\n    return (\r\n        <li className=\"homeTabItemTabletAndDesktop\">\r\n            <p>{moment(date).format('DD.MM.YY')}</p>\r\n            <p>{income ? '+' : '-'}</p>\r\n            <p>{category}</p>\r\n            <p>{comment}</p>\r\n            <p\r\n                className={\r\n                    income\r\n                        ? 'homeTabItemAndDesktopResult homeTabItemAndDesktopResult--green'\r\n                        : 'homeTabItemAndDesktopResult homeTabItemAndDesktopResult--red'\r\n                }\r\n            >\r\n                {sum}\r\n            </p>\r\n            <p>{balance}</p>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default homeTabItemTabletAndDesktop;\r\n","import './HomeTabList.scss';\r\nimport Media from 'react-media';\r\nimport HomeTabItemMobile from '@component/homeTabItemMobile';\r\nimport HomeTabItemTabletAndDesktop from '@component/homeTabItemTabletAndDesktop';\r\n\r\nconst HomeTabList = ({ operations }) => {\r\n    return (\r\n        <ul className=\"homeTabList\">\r\n            <Media\r\n                queries={{\r\n                    small: '(min-width: 320px) and (max-width: 767px)',\r\n                    medium: '(min-width: 768px)',\r\n                }}\r\n            >\r\n                {matches => {\r\n                    switch (true) {\r\n                        case matches.small:\r\n                            return operations.map(operation => {\r\n                                return (\r\n                                    <HomeTabItemMobile\r\n                                        operation={operation}\r\n                                        key={operation.id}\r\n                                    />\r\n                                );\r\n                            });\r\n                        case matches.medium:\r\n                            return (\r\n                                <>\r\n                                    <li\r\n                                        className=\"homeTabTabletAndDesktop\"\r\n                                        key={0}\r\n                                    >\r\n                                        <h3>Дата</h3>\r\n                                        <h3>Тип</h3>\r\n                                        <h3>Категорія</h3>\r\n                                        <h3>Коментар</h3>\r\n                                        <h3>Сума</h3>\r\n                                        <h3>Баланс</h3>\r\n                                    </li>\r\n                                    {operations.map((operation, index) => {\r\n                                        return (\r\n                                            <>\r\n                                                <HomeTabItemTabletAndDesktop\r\n                                                    operation={operation}\r\n                                                    index\r\n                                                    key={operation.id}\r\n                                                />\r\n                                            </>\r\n                                        );\r\n                                    })}\r\n                                </>\r\n                            );\r\n                        default:\r\n                            console.log('Error in switch handleTabList');\r\n                            return <h1>Ууупс... Сталась помилка</h1>;\r\n                    }\r\n                }}\r\n            </Media>\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default HomeTabList;\r\n","import './homeTab.scss';\r\nimport { getFinanceOpertaion } from '@redux/finance/finance-operation';\r\nimport { getOperations, isLoading } from '@redux/finance/finance-selector';\r\nimport HomeTabList from '../homeTabList';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\n\r\nconst HomeTab = () => {\r\n    const dispatch = useDispatch();\r\n    const isLoad = useSelector(isLoading);\r\n    const operations = useSelector(getOperations);\r\n\r\n    useEffect(() => {\r\n        if (operations.length === 0) {\r\n            dispatch(getFinanceOpertaion.getOperations());\r\n        }\r\n    }, []);\r\n\r\n    return !isLoad ? (\r\n        <section className=\"homeTab-section\">\r\n            <div className=\"container\">\r\n                <HomeTabList operations={operations} />\r\n            </div>\r\n        </section>\r\n    ) : (\r\n        <h1>Загрузка...</h1>\r\n    );\r\n};\r\n\r\nexport default HomeTab;\r\n","import './buttonClose.scss';\r\n\r\n\r\nconst ButtonClose = ({ onClick }) => {\r\n    return (\r\n        <button className=\"button\" onClick={onClick}>\r\n            <span className=\"button_vectotA\"></span>\r\n            <span className=\"button_vectotB\"></span>\r\n        </button>\r\n    );\r\n};\r\nexport default ButtonClose;\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { getCategoryAPI } from '@api';\r\n\r\nconst getCategories = createAsyncThunk('getCategories', async () => {\r\n    const result = await getCategoryAPI();\r\n    return result;\r\n});\r\n\r\nexport const categoriesOperation = { getCategories };\r\n","export const getStatistic = state => {\r\n    const result = state.statistic.data.map(el => {\r\n        return {\r\n            category: state.categories.data.find(\r\n                element => element.id === el.category,\r\n            ).name,\r\n            sum: el.sum,\r\n        };\r\n    });\r\n    return result;\r\n};\r\n\r\nexport const updateStatistic = state => {\r\n    return state.statistic.data; //*\r\n};\r\nexport const isLoadingStatistic = state => state.statistic.isLoading;\r\n","import React from 'react';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport { Doughnut } from 'react-chartjs-2';\r\n// import Media from 'react-media';\r\n\r\nimport './chartDoughnut.scss';\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend );\r\n\r\nconst options = {\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  cutout: '70%',\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n        },\r\n    }\r\n}\r\n\r\nexport function ChartDoughnut({ category, balance, color, statistic}) {\r\n  const data = {\r\n  // labels: category.category.map(el=>el.name),\r\n  labels: category,  \r\n  datasets: [\r\n    {\r\n      label: '# of Votes',\r\n      // data: category.category.map(el=>el.value),\r\n      // data: statistic.map(el => el.sum),  //  статистика за місяць та рік по curentUser \r\n      data: statistic.map(el=>el.sum),  //  статистика за місяць та рік по curentUser \r\n      backgroundColor: color,\r\n      borderColor: color,\r\n      borderWidth: 1,\r\n    },\r\n  ],\r\n  };\r\n  \r\n  return <div>\r\n    {/* <Media query='(max-width:1279px)'\r\n      render={() => <h2 className='diagramTab-header'>Статистика</h2>} /> */}\r\n    <h2 className='diagramTab-header'>Статистика</h2>\r\n    <div className='wrapper-chart'>\r\n      <div className='balance'>&#8372; {\" \" + balance} </div>\r\n      <Doughnut data={data} options={options}/>\r\n    </div>\r\n    \r\n  </div>\r\n}\r\n","export const customStyles = {\r\n  container: (provided) => ({\r\n    ...provided,\r\n    width: '100%',\r\n  }),\r\n\r\n  control: (provided) => ({ // стилі для контейнеру інпуту-селекту\r\n    ...provided,\r\n    height: 50,\r\n    width: '100%',\r\n    border: '1px solid #000000',\r\n    borderRadius: 30,\r\n    backgroundColor: 'transparent',\r\n    boxShadow: 'none',\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      border: '1px solid #000000',\r\n      boxShadow: 'none',\r\n    },\r\n  }),\r\n\r\n  dropdownIndicator: (provided) => ({\r\n    ...provided,\r\n    paddingRight: '20px',\r\n  }),\r\n\r\n  indicatorSeparator: () => ({ display: 'none' }),\r\n\r\n  // input,\r\n\r\n  // loadingIndicator,\r\n  \r\n  menu: (provided) => ({  // стилі для контейнеру меню, що відкривається\r\n    ...provided,\r\n    background: 'rgba(255, 255, 255, 0.7)',\r\n    boxShadow: 'rgba(0, 0, 0, 0.24) 0px 3px 8px;',\r\n    backdropFilter: 'blur(5px)',\r\n    borderRadius: 20,\r\n    overflow: 'hidden',\r\n  }),\r\n\r\n  // menuList,\r\n\r\n  option: (provided, { isFocused, isSelected }) => ({   // стилі для кожної строки списку\r\n    ...provided,\r\n    borderTop: '1px solid rgba(218, 212, 212, 0.3)',\r\n    borderBottom: '1px solid rgba(218, 212, 212, 0.3)',\r\n    background: isFocused || isSelected ? 'rgba(218, 212, 212, 0.3)' : 'transparent',\r\n    color: isFocused || isSelected ? '#4A56E2' : '#000000',\r\n    cursor: 'pointer',\r\n    padding: '14px 20px',\r\n    fontSize: '16px',\r\n    lineHeight: '24px',\r\n    fontFamily: 'Circe, sans-serif',\r\n    textTransform: 'capitalize',\r\n  }),\r\n\r\n  placeholder: (provided) => ({\r\n    ...provided,\r\n    color: '#000000',\r\n    fontSize: '16px',\r\n    fontWeight: 400,\r\n    lineHeight: '24px',\r\n  }),\r\n\r\n  singleValue: (provided, {placeholder}) => ({\r\n    ...provided,\r\n    fontSize: '16px',\r\n    lineHeight: '24px',\r\n    color: '#4A56E2',\r\n  }),\r\n\r\n  valueContainer: (provided) => ({    // стилі для значення в інпуті-селекті\r\n    ...provided,\r\n    padding: '0 0 0 20px',\r\n    textTransform: 'capitalize',\r\n  }),\r\n}\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { getStatisticAPI } from '@api';\r\n\r\nconst getStatistic = createAsyncThunk('getStatistic', async data => {\r\n    const result = await getStatisticAPI(data);\r\n    return result;\r\n});\r\nexport const statisticOperation = { getStatistic };\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Select, { components } from 'react-select';\r\nimport './datePicker.scss';\r\nimport { customStyles } from './customStyles';\r\nimport sprite from '../../assets/sprite.svg';\r\nimport { statisticOperation } from '../../redux/statistic/statistic-operation';\r\nimport { categoriesOperation } from '../../redux/categories/categories-operation';\r\n\r\nimport moment from 'moment';\r\nimport 'moment/locale/uk';\r\nmoment.locale('uk')\r\n\r\nconst thisMonth = (new Date()).getMonth() + 1;\r\n\r\nconst monthsList = moment(new Date(), \"MMMM\", 'uk')._locale._months.standalone;\r\nconst monthsOptions = monthsList.map((el) => ({ value: el, label: el }));\r\n\r\nconst thisYear = (new Date()).getFullYear();\r\nconst yearsList = Array.from(new Array(12), (val, index) => thisYear - index);\r\n\r\nconst yearsOptions = yearsList.map((el) => ({ value: el, label: el }));\r\n\r\nconst DropdownIndicator = props => {\r\n  // Додає кастомну svg до селекту\r\n  return (\r\n    <components.DropdownIndicator {...props}>\r\n      <svg className=\"icon icon-vector\" width='20' height='11'>\r\n        <use href={`${sprite}#icon-vector`}></use>\r\n      </svg>\r\n    </components.DropdownIndicator>\r\n  )\r\n};\r\n\r\nexport function DatePicker() {\r\n  // const [selectedOption, setSelectedOption] = useState({ month: thisMonth, year: thisYear });\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(categoriesOperation.getCategories())\r\n    // Запит списку статистики по категоріям за обраний період\r\n    if (selectedOption !== null) {\r\n      dispatch(statisticOperation.getStatistic(selectedOption))\r\n    }\r\n    \r\n  }, [dispatch, selectedOption])\r\n\r\n  \r\n  const handleChange = (name, value) => {\r\n\r\n    if (!selectedOption?.month ?? null) {\r\n      setSelectedOption((prev) => ({ ...prev, month: thisMonth }))\r\n    }\r\n    if (!selectedOption?.year ?? null) {\r\n      setSelectedOption((prev) => ({ ...prev, year: thisYear }))\r\n    }\r\n\r\n    if (name === 'month') {\r\n      const num = monthsList.findIndex(e => e === value) + 1;\r\n      console.log(num)\r\n      setSelectedOption((prev) => ({ ...prev, [name]: num }));\r\n    }\r\n\r\n    if (name === 'year') {\r\n      setSelectedOption((prev) => ({ ...prev, [name]: value }))\r\n    }\r\n  }\r\n  \r\n\r\n  return (\r\n    <div className='containerDatePicker'>\r\n      <Select\r\n        components={{DropdownIndicator}}\r\n        defaultValue={selectedOption}\r\n          // defaultValue={monthsOptions.find((month)=>month.value===selectedOption?.month)}\r\n          // onChange={setSelectedOption}\r\n        onChange={(option) => { handleChange(\"month\", option.value) }}\r\n        options={monthsOptions}\r\n        placeholder='Місяць'\r\n          isSearchable={false}\r\n        styles={customStyles}\r\n      />\r\n      \r\n      <Select\r\n        components={{DropdownIndicator}}\r\n        defaultValue={selectedOption}\r\n          // defaultValue={yearsOptions.find((year)=>year.value===selectedOption.year)}\r\n          // onChange={setSelectedOption}\r\n        onChange={(option) => { handleChange(\"year\", option.value) }}\r\n        options={yearsOptions}\r\n        placeholder='Рік'\r\n          isSearchable={false}\r\n        styles={customStyles}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import './table.scss';\r\n\r\nexport function Table({ category, color, name, total}) {\r\n    \r\n    const transformData = (num) => {\r\n            return num.toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")\r\n    }\r\n    \r\n    const getSum = (arr) => {\r\n       return  arr.reduce((acc, el) => acc + el.sum, 0)\r\n    }\r\n    \r\n    return <div className=\"diagramTab-table\">\r\n        <div className=\"tableHeader\">\r\n            <p>Категорія</p>\r\n            <p>Сума</p>\r\n        </div>\r\n\r\n        <div className=\"tableBody\">\r\n            <ul>\r\n                {category.map(({ category, sum }, i) => (\r\n                \r\n                    <li className=\"categoryItem\" key={category}>\r\n                        <div style={{ backgroundColor: color[i], minWidth: 24 + 'px', minHeight: 24 + 'px', }}></div>\r\n                        <div className=\"wrapper\">\r\n                            <p className=\"categoryName\" >{name[i]}</p>\r\n                            <p className=\"sum\">{ transformData(sum)}</p>\r\n                        </div>  \r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <ul className=\"tableFooter\">\r\n                <li className=\"tableFooterItem\">\r\n                    <p className=\"row\">Витрати:<span className=\"expense\">{transformData(getSum(category))}</span></p>\r\n                </li>\r\n                <li className=\"tableFooterItem\">\r\n                    <p className=\"row\">Доходи:<span className=\"income\">{transformData(total.totalIncome)}</span></p>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n\r\n    </div>\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { getCategoryDebet } from '../../redux/categories/categories-selector';\r\nimport { updateStatistic } from '../../redux/statistic/statistic-selector';\r\nimport { getBalance } from '../../redux/user/user-selector';\r\n\r\nimport './diagramTab.scss';\r\nimport { ChartDoughnut } from \"@component/chartDoughnut\";\r\nimport { DatePicker } from \"@component/datePicker\";\r\nimport { Table } from '@component/table';\r\n\r\nconst total = {                 // Для перевірки, повинна приходити по запиту\r\n    \"totalIncome\": 22549.24,\r\n    \"totalExpense\": 27350.00,\r\n}\r\n           \r\n\r\nconst rgb = [\r\n  { id: 1, rgb: \"rgb(255, 207, 87)\"},\r\n  {id: 2, rgb:\"rgb(255, 216, 208)\"},\r\n  {id: 3, rgb:\"rgb(253, 148, 152)\"},\r\n  {id: 4, rgb:\"rgb(197, 186, 255)\"},\r\n  {id: 5, rgb:\"rgb(110, 120, 232)\"},\r\n  {id: 6, rgb:\"rgb(74, 86, 226)\"},\r\n  {id: 7, rgb:\"rgb(129, 225, 255)\"},\r\n  {id: 8, rgb:\"rgb(36, 204, 167)\"},\r\n  {id: 9, rgb:\"rgb(0, 173, 132)\"},\r\n]\r\n  \r\nexport function DiagramTab() {\r\n    // const isCategories = useSelector(isCategoriesFull);\r\n    const statistic = useSelector(updateStatistic);\r\n    const categories = useSelector(getCategoryDebet);\r\n    const balance = useSelector(getBalance);\r\n        \r\n    const transformData = (num) => {\r\n        return num.toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")\r\n    }\r\n    \r\n\r\n    //Фільтрація списку статистика по id категорій\r\n    function filterById(objCategories, objStat) {\r\n        const idDebet = objCategories.map(el => el.id)\r\n        const objById = objStat.filter(el => idDebet.includes(el.category))\r\n        // console.log(objById)  \r\n        return objById\r\n    }\r\n\r\n    const nameCategory = categories.map(el => el.name)\r\n\r\n  // Вибір кольору\r\n    const color = rgb.map(el=>el.rgb)\r\n    \r\n        return <div className='diagramTab-section'>\r\n            {/* <h2 className='diagramTab-header'>Статистика</h2> */}\r\n            <ChartDoughnut\r\n                category={nameCategory}\r\n                statistic={filterById(categories, statistic)}\r\n                balance={transformData(balance)}\r\n                color={color}\r\n            />\r\n            <div className='diagramTab-container'>\r\n                <DatePicker />\r\n                <Table category={filterById(categories, statistic)} color={color} name={nameCategory} total={total} />\r\n            </div>\r\n            \r\n        </div>\r\n}\r\n","import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n// import Media from 'react-media';\r\nimport { DiagramTab } from '@component/diagramTab';\r\nimport { statisticOperation } from '../../redux/statistic/statistic-operation';\r\n\r\n// Поточна дата\r\n\r\nconst thisMonth = (new Date()).getMonth() + 1;\r\nconst thisYear = (new Date()).getFullYear();\r\n\r\nexport const Statistic = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        // Запит статистики за поточний період\r\n        dispatch(\r\n            statisticOperation.getStatistic({\r\n                month: thisMonth,\r\n                year: thisYear,\r\n            }),\r\n        );\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div className=\"statistic-section\">\r\n            {/* <Media query='(min-width:1280px)'\r\n      render={() => <h2 className='diagramTab-header'>Статистика</h2>} /> */}\r\n            <h1 className=\"statistic-header__main\">Статистика</h1>\r\n            <DiagramTab />\r\n        </div>\r\n    );\r\n};\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Navigate, Route, Routes } from 'react-router-dom';\r\nimport Media from 'react-media';\r\n\r\nimport {\r\n    Header,\r\n    Balans,\r\n    Navigation,\r\n    ModalTransaction,\r\n    Backdrop,\r\n} from '@component';\r\nimport Currency from '@component/currency';\r\nimport HomeTab from '@component/homeTab';\r\nimport ButtonClose from '@component/buttonClose/buttonClose';\r\n\r\nimport { categoriesOperation } from '@redux/categories/categories-operation';\r\nimport { getFinanceOpertaion } from '@redux/finance/finance-operation';\r\n// import { statisticOperation } from '@redux/statistic/statistic-operation';\r\nimport {\r\n    openModalTransaction,\r\n    clearSaveModalDateStatic,\r\n} from '@redux/finance/finance-slice';\r\nimport {\r\n    isModalTransaction,\r\n    isSaveModalDateStatic,\r\n} from '@redux/finance/finance-selector';\r\nimport { isModalLogout } from '@redux/user/user-selector';\r\nimport { isCategoriesFull } from '@redux/categories/categories-selector';\r\nimport { globalMedia } from '@data';\r\n\r\nimport { Statistic } from '@pages/statistic';\r\n\r\nexport const Dashboard = () => {\r\n    const dispatch = useDispatch();\r\n    const isCategories = useSelector(isCategoriesFull);\r\n    const isOpenModalTransaction = useSelector(isModalTransaction);\r\n    const isOpenModalLogout = useSelector(isModalLogout);\r\n    const isSaveTransaction = useSelector(isSaveModalDateStatic);\r\n\r\n    const onOpenModalTransaction = () => {\r\n        dispatch(openModalTransaction());\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!isCategories) {\r\n            dispatch(categoriesOperation.getCategories());\r\n        }\r\n        // dispatch(getFinanceOpertaion.getOperations());\r\n        // dispatch(statisticOperation.getStatistic());\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isSaveTransaction && !isModalTransaction) {\r\n            dispatch(getFinanceOpertaion.getOperations());\r\n            dispatch(clearSaveModalDateStatic());\r\n        }\r\n    }, [isSaveTransaction, isOpenModalTransaction]);\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <main>\r\n                <div className=\"container container__main\">\r\n                    <div className=\"main dashboardMain\">\r\n                        <Media queries={globalMedia}>\r\n                            {matches => (\r\n                                <>\r\n                                    {matches.small && (\r\n                                        <>\r\n                                            <Navigation />\r\n                                            <Routes>\r\n                                                <Route\r\n                                                    path=\"home\"\r\n                                                    element={<Balans />}\r\n                                                />\r\n                                                <Route path=\"diagram\" />\r\n                                                <Route\r\n                                                    path=\"currency\"\r\n                                                    element={<Currency />}\r\n                                                />\r\n                                                <Route\r\n                                                    path=\"*\"\r\n                                                    element={<h1>Not Found</h1>}\r\n                                                />\r\n                                            </Routes>\r\n                                        </>\r\n                                    )}\r\n                                    {matches.medium && (\r\n                                        <div className=\"main_block\">\r\n                                            <div>\r\n                                                <Navigation />\r\n                                                <Balans />\r\n                                            </div>\r\n                                            <Currency />\r\n                                        </div>\r\n                                    )}\r\n                                </>\r\n                            )}\r\n                        </Media>\r\n                    </div>\r\n                    <Routes>\r\n                        <Route\r\n                            path=\"/home\"\r\n                            element={\r\n                                <>\r\n                                    <HomeTab />\r\n                                    <ButtonClose\r\n                                        onClick={onOpenModalTransaction}\r\n                                    />\r\n                                </>\r\n                            }\r\n                        />\r\n                        <Route\r\n                            path=\"/currency\"\r\n                            element={\r\n                                <Media queries={globalMedia}>\r\n                                    {matches => (\r\n                                        <>\r\n                                            {matches.medium && (\r\n                                                <>\r\n                                                    <HomeTab />\r\n                                                    <ButtonClose\r\n                                                        onClick={\r\n                                                            onOpenModalTransaction\r\n                                                        }\r\n                                                    />\r\n                                                </>\r\n                                            )}\r\n                                        </>\r\n                                    )}\r\n                                </Media>\r\n                            }\r\n                        />\r\n                        <Route path=\"/diagram\" element={<Statistic />} />\r\n                    </Routes>\r\n                </div>\r\n            </main>\r\n            {isOpenModalTransaction && (\r\n                <>\r\n                    <Backdrop>\r\n                        <ModalTransaction />\r\n                    </Backdrop>\r\n                </>\r\n            )}\r\n            {isOpenModalLogout && (\r\n                <>\r\n                    <Backdrop></Backdrop>\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { RegistrationForm } from '../../component';\r\n\r\nexport function RegistrationPage() {\r\n    return (\r\n        <div>\r\n            <RegistrationForm />\r\n        </div>\r\n    );\r\n}\r\n","import { Navigate } from 'react-router-dom';\r\n\r\nexport const withAuth = (isAuth, Component) => {\r\n    if (isAuth) {\r\n        return Component ? Component : <Navigate to=\"/home\" />;\r\n    } else {\r\n        return <Navigate to=\"/login\" />;\r\n    }\r\n};\r\n","export default __webpack_public_path__ + \"static/media/tabletMan.c98d6b49.svg\";","import { useDispatch } from 'react-redux';\r\nimport { userOperation } from '../../redux/user/user-operation';\r\nimport { Formik } from 'formik';\r\nimport { Logo } from '../shared/logo';\r\nimport sprite from '../../assets/sprite.svg';\r\nimport imgMan from '../../assets/img/tablet/tabletMan.svg';\r\nimport './loginForm.scss';\r\nimport * as Yup from 'yup';\r\n\r\nexport default function LoginForm() {\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"login_img_container\">\r\n                <img className=\"login_img\" src={imgMan} alt=\"\" width=\"435px\" />\r\n                <h1>Finance App</h1>\r\n            </div>\r\n\r\n            <Formik\r\n                initialValues={{ email: '' }}\r\n                onSubmit={({ email, password }) => {\r\n                    dispatch(userOperation.login({ email, password }));\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    email: Yup.string().email().required('Required'),\r\n                    password: Yup.string().required('Required'),\r\n                })}\r\n            >\r\n                {props => {\r\n                    const {\r\n                        values,\r\n                        touched,\r\n                        errors,\r\n                        isSubmitting,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        handleSubmit,\r\n                        handleReset,\r\n                    } = props;\r\n\r\n                    return (\r\n                        <div className=\"form_bg_filter\">\r\n                            <form\r\n                                onSubmit={handleSubmit}\r\n                                className=\"login_form\"\r\n                            >\r\n                                <div className=\"login_form__logo\">\r\n                                    <Logo />\r\n                                </div>\r\n\r\n                                <label className=\"login_form__label\">\r\n                                    <svg className=\"login_form__icon\">\r\n                                        <use href={`${sprite}#email`}></use>\r\n                                    </svg>\r\n                                    <input\r\n                                        className=\"login_form__input\"\r\n                                        id=\"email\"\r\n                                        placeholder=\" E-mail\"\r\n                                        type=\"email\"\r\n                                        value={values.email}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                    />\r\n                                </label>\r\n                                {/* {errors.email && touched.email && (\r\n                                <div className=\"input-feedback\">\r\n                                    {errors.email}\r\n                                </div>\r\n                            )} */}\r\n                                <label className=\"login_form__label\">\r\n                                    <svg className=\"login_form__icon\">\r\n                                        <use href={`${sprite}#password`}></use>\r\n                                    </svg>\r\n                                    <input\r\n                                        className=\"login_form__input\"\r\n                                        id=\"password\"\r\n                                        placeholder=\"Пароль\"\r\n                                        type=\"password\"\r\n                                        value={values.password}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                    />\r\n                                </label>\r\n                                {/* {errors.password && touched.password && (\r\n                                <div className=\"input-feedback\">\r\n                                    {errors.password}\r\n                                </div>\r\n                            )} */}\r\n\r\n                                <button\r\n                                    className=\"login_form__btn login_form__btn--current  \"\r\n                                    type=\"submit\"\r\n                                    disabled={isSubmitting}\r\n                                >\r\n                                    <span>Вхід</span>\r\n                                </button>\r\n                                <button\r\n                                    className=\"login_form__btn login_form__btn_color\"\r\n                                    type=\"button\"\r\n                                    onClick={handleReset}\r\n                                    disabled={isSubmitting}\r\n                                >\r\n                                    <span>Реєстрація</span>\r\n                                </button>\r\n                            </form>\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        </section>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { RegistrationForm } from '../../component';\r\nimport LoginForm from '../../component/loginForm';\r\nimport { isLoading } from '../../redux/user/user-selector';\r\n// import RegisterForm from '../register/RegisterForm';\r\n// import Dashboard from '../dashboard/Dashboard';\r\n\r\nconst LoginPage = () => {\r\n    const isLoggedIn = useSelector(isLoading);\r\n    return (\r\n        <div>\r\n            {/* <RegistrationForm /> */}\r\n            <LoginForm />\r\n            {/* {isLoggedIn ? <Dashboard /> : <RegisterForm />} */}\r\n        </div>\r\n    );\r\n};\r\nexport default LoginPage;\r\n","import './spinnerLoader.scss';\r\n\r\nfunction LoaderRoket() {\r\n    return <div className=\"loader\">Loading...</div>;\r\n}\r\nexport default LoaderRoket;\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Route, Routes } from 'react-router-dom';\r\n\r\nimport { Dashboard } from '@pages';\r\nimport { withAuth } from '@hoc/withAuth';\r\nimport LoginPage from '@pages/login';\r\nimport Loader from '@component/spinnerLoader/spinnerLoader';\r\n\r\nimport {\r\n    isAuth,\r\n    isToken,\r\n    isLoading,\r\n    error,\r\n    getToken,\r\n} from '@redux/user/user-selector';\r\nimport { userOperation } from '@redux/user/user-operation';\r\nimport { RegistrationPage } from './pages';\r\n\r\nfunction App() {\r\n    const isUserToken = useSelector(isToken);\r\n    const isUserAuth = useSelector(isAuth);\r\n    const loading = useSelector(isLoading);\r\n    const isError = useSelector(error);\r\n    const token = useSelector(getToken);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (isUserToken && !isUserAuth) {\r\n            dispatch(userOperation.currentUser(token));\r\n        } else {\r\n            dispatch(\r\n                userOperation.login({\r\n                    email: 'test@gmail.com',\r\n                    password: 'qwerty',\r\n                }),\r\n            );\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {loading && <Loader />}\r\n            {isError && <h1>Error: {isError}</h1>}\r\n            {!loading && !isError && isUserAuth === isUserToken && (\r\n                <Routes>\r\n                    <Route path=\"login\" element={<LoginPage />} />\r\n                    <Route path=\"register\" element={<RegistrationPage />} />\r\n\r\n                    <Route path=\"/\" element={withAuth(isUserAuth)} />\r\n                    <Route\r\n                        path=\"/*\"\r\n                        element={withAuth(isUserAuth, <Dashboard />)}\r\n                    />\r\n                </Routes>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nimport { categoriesOperation } from './categories-operation';\r\n\r\nconst initialState = {\r\n    data: [],\r\n    isLoading: false,\r\n    error: null,\r\n};\r\n\r\nconst categoriesSlice = createSlice({\r\n    name: 'categories',\r\n    initialState,\r\n    extraReducers: {\r\n        [categoriesOperation.getCategories.pending]: state => {\r\n            state.isLoading = true;\r\n            state.error = null;\r\n        },\r\n        [categoriesOperation.getCategories.fulfilled]: (state, { payload }) => {\r\n            state.data = [...payload];\r\n            state.isLoading = false;\r\n        },\r\n        [categoriesOperation.getCategories.rejected]: (state, { error }) => {\r\n            state.isLoading = false;\r\n            state.error = error.message;\r\n        },\r\n    },\r\n});\r\n\r\nexport default categoriesSlice;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nimport { statisticOperation } from './statistic-operation';\r\n\r\nconst initialState = {\r\n    data: [],\r\n    isLoading: false,\r\n    error: null,\r\n};\r\n\r\nconst statisticSlice = createSlice({\r\n    name: 'statistic',\r\n    initialState,\r\n    extraReducers: {\r\n        [statisticOperation.getStatistic.pending]: state => {\r\n            state.isLoading = true;\r\n            state.error = null;\r\n        },\r\n        [statisticOperation.getStatistic.fulfilled]: (state, { payload }) => {\r\n            state.data = [...payload];\r\n            state.isLoading = false;\r\n        },\r\n        [statisticOperation.getStatistic.rejected]: (state, { error }) => {\r\n            state.isLoading = false;\r\n            state.error = error.message;\r\n        },\r\n    },\r\n});\r\n\r\nexport default statisticSlice;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist';\r\nimport logger from 'redux-logger';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport categorySlice from './categories/categories-slice';\r\nimport statisticSlice from './statistic/statistic-slice';\r\nimport userSlice from './user/user-slice';\r\nimport financeSlice from './finance/finance-slice';\r\n\r\nconst persistConfig = {\r\n    key: 'user',\r\n    storage,\r\n    whitelist: ['token'],\r\n};\r\n\r\nconst userReducer = persistReducer(persistConfig, userSlice.reducer);\r\n\r\nconst middleware = getDefaultMiddleware => [\r\n    ...getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n        },\r\n    }),\r\n    logger,\r\n];\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        [userSlice.name]: userReducer,\r\n        [categorySlice.name]: categorySlice.reducer,\r\n        [statisticSlice.name]: statisticSlice.reducer,\r\n        [financeSlice.name]: financeSlice.reducer,\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistedStore = persistStore(store);\r\n\r\nexport const rootStore = { store, persistedStore };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport '@style/style.scss';\r\nimport App from '@root/App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { rootStore } from '@redux/store';\r\nimport 'react-datetime/css/react-datetime.css';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={rootStore.store}>\r\n            <PersistGate loader={null} persistor={rootStore.persistedStore}>\r\n                <BrowserRouter>\r\n                    <App />\r\n                </BrowserRouter>\r\n            </PersistGate>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}