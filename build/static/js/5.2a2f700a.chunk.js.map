{"version":3,"sources":["component/chartDoughnut/ChartDoughnut.js","component/datePicker/customStyles.js","component/datePicker/DatePicker.js","component/table/Table.js","component/diagramTab/DiagramTab.js","pages/statistic/Statistic.js"],"names":["ChartJS","register","ArcElement","Tooltip","Legend","options","responsive","maintainAspectRatio","cutout","plugins","legend","display","ChartDoughnut","category","balance","color","isStat","useSelector","getStatistic","className","data","length","datasets","backgroundColor","borderColor","borderWidth","labels","map","el","name","label","sum","customStyles","container","provided","width","control","height","border","borderRadius","boxShadow","cursor","dropdownIndicator","paddingRight","indicatorSeparator","menu","background","backdropFilter","overflow","option","isFocused","isSelected","borderTop","borderBottom","padding","fontSize","lineHeight","fontFamily","textTransform","placeholder","fontWeight","singleValue","valueContainer","moment","locale","thisMonth","Date","getMonth","monthsList","_locale","_months","standalone","monthsOptions","value","thisYear","getFullYear","yearsOptions","Array","from","val","index","DropdownIndicator","props","href","sprite","DatePicker","useState","selectedOption","setSelectedOption","dispatch","useDispatch","isLoadingStatistic","isLoading","useEffect","categoriesOperation","getCategories","statisticOperation","handleChange","month","prev","year","num","findIndex","e","console","log","components","defaultValue","onChange","isSearchable","styles","Table","total","transformData","toFixed","toString","replace","i","style","minWidth","minHeight","expense","income","rgb","id","DiagramTab","getBalance","getCategoryCredit","statisticCredit","getCategoryDebet","statisticDebet","getSum","arr","reduce","acc","Statistic"],"mappings":"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","file":"static/js/5.2a2f700a.chunk.js","sourcesContent":["import { useSelector } from 'react-redux';\r\nimport React from 'react';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport { getStatistic } from '../../redux/statistic/statistic-selector';\r\n\r\nimport './chartDoughnut.scss';\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend );\r\n\r\nconst options = {\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  cutout: '70%',\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n        },\r\n    }\r\n}\r\n\r\nexport function ChartDoughnut({ category, balance, color, }) {\r\n  \r\n  const isStat = useSelector(getStatistic);\r\n\r\n  const data = () => {\r\n      if (isStat.length === 0) {\r\n    \r\n        return {\r\n          // labels: ['No statistic'],\r\n      datasets: [\r\n        {\r\n          // label: '# of Votes',\r\n          data: [1,1,2,2,3,3,4 ],  \r\n          backgroundColor: [\"#f5f7fa\", \"#ebeff5\",\"#dde3ed\", \"#c8d1e0\", \"#afbacc\", \"#8e99ab\", \"#707a8a\"],\r\n          borderColor: [\"#f5f7fa\", \"#ebeff5\",\"#dde3ed\", \"#c8d1e0\", \"#afbacc\", \"#8e99ab\", \"#707a8a\"],\r\n          borderWidth: 1,\r\n        },\r\n      ],}\r\n    }\r\n\r\n    return {\r\n  labels: category.map(el=>el.name),  \r\n  datasets: [\r\n    {\r\n      label: '# of Votes',\r\n      data: category.map(el=>el.sum),  //  статистика за місяць та рік по curentUser \r\n      backgroundColor: color,\r\n      borderColor: color,\r\n      borderWidth: 1,\r\n    },\r\n  ],\r\n  };\r\n\r\n  }\r\n  \r\n  return <div>\r\n    <h2 className='diagramTab-header'>Статистика</h2>\r\n    <div className='wrapper-chart'>\r\n      <div className='balance'>&#8372; {\" \" + balance} </div>\r\n      <Doughnut data={data()} options={options}/>\r\n    </div>\r\n    \r\n  </div>\r\n}\r\n","export const customStyles = {\r\n  container: (provided) => ({\r\n    ...provided,\r\n    width: '100%',\r\n  }),\r\n\r\n  control: (provided) => ({ // стилі для контейнеру інпуту-селекту\r\n    ...provided,\r\n    height: 50,\r\n    width: '100%',\r\n    border: '1px solid #000000',\r\n    borderRadius: 30,\r\n    backgroundColor: 'transparent',\r\n    boxShadow: 'none',\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      border: '1px solid #000000',\r\n      boxShadow: 'none',\r\n    },\r\n  }),\r\n\r\n  dropdownIndicator: (provided) => ({\r\n    ...provided,\r\n    paddingRight: '20px',\r\n  }),\r\n\r\n  indicatorSeparator: () => ({ display: 'none' }),\r\n\r\n  // input,\r\n\r\n  // loadingIndicator,\r\n  \r\n  menu: (provided) => ({  // стилі для контейнеру меню, що відкривається\r\n    ...provided,\r\n    background: 'rgba(255, 255, 255, 0.7)',\r\n    boxShadow: 'rgba(0, 0, 0, 0.24) 0px 3px 8px;',\r\n    backdropFilter: 'blur(5px)',\r\n    borderRadius: 20,\r\n    overflow: 'hidden',\r\n  }),\r\n\r\n  // menuList,\r\n\r\n  option: (provided, { isFocused, isSelected }) => ({   // стилі для кожної строки списку\r\n    ...provided,\r\n    borderTop: '1px solid rgba(218, 212, 212, 0.3)',\r\n    borderBottom: '1px solid rgba(218, 212, 212, 0.3)',\r\n    background: isFocused || isSelected ? 'rgba(218, 212, 212, 0.3)' : 'transparent',\r\n    color: isFocused || isSelected ? '#4A56E2' : '#000000',\r\n    cursor: 'pointer',\r\n    padding: '14px 20px',\r\n    fontSize: '16px',\r\n    lineHeight: '24px',\r\n    fontFamily: 'Circe, sans-serif',\r\n    textTransform: 'capitalize',\r\n  }),\r\n\r\n  placeholder: (provided) => ({\r\n    ...provided,\r\n    color: '#000000',\r\n    fontSize: '16px',\r\n    fontWeight: 400,\r\n    lineHeight: '24px',\r\n  }),\r\n\r\n  singleValue: (provided, {placeholder}) => ({\r\n    ...provided,\r\n    fontSize: '16px',\r\n    lineHeight: '24px',\r\n    color: '#4A56E2',\r\n  }),\r\n\r\n  valueContainer: (provided) => ({    // стилі для значення в інпуті-селекті\r\n    ...provided,\r\n    padding: '0 0 0 20px',\r\n    textTransform: 'capitalize',\r\n  }),\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Select, { components } from 'react-select';\r\nimport './datePicker.scss';\r\nimport { customStyles } from './customStyles';\r\nimport sprite from '../../assets/sprite.svg';\r\nimport { statisticOperation } from '../../redux/statistic/statistic-operation';\r\nimport { categoriesOperation } from '../../redux/categories/categories-operation';\r\nimport { isLoadingStatistic } from '../../redux/statistic/statistic-selector';\r\n\r\nimport moment from 'moment';\r\nimport 'moment/locale/uk';\r\nmoment.locale('uk');\r\n\r\nconst thisMonth = new Date().getMonth() + 1;\r\n\r\nconst monthsList = moment(new Date(), 'MMMM', 'uk')._locale._months.standalone;\r\nconst monthsOptions = monthsList.map(el => ({ value: el, label: el }));\r\n\r\nconst thisYear = new Date().getFullYear();\r\nconst yearsList = Array.from(new Array(12), (val, index) => thisYear - index);\r\n\r\nconst yearsOptions = yearsList.map(el => ({ value: el, label: el }));\r\n\r\nconst DropdownIndicator = props => {\r\n    // Додає кастомну svg до селекту\r\n    return (\r\n        <components.DropdownIndicator {...props}>\r\n            <svg className=\"icon icon-vector\" width=\"20\" height=\"11\">\r\n                <use href={`${sprite}#icon-vector`}></use>\r\n            </svg>\r\n        </components.DropdownIndicator>\r\n    );\r\n};\r\n\r\nexport function DatePicker() {\r\n    const [selectedOption, setSelectedOption] = useState(null);\r\n    const dispatch = useDispatch();\r\n    const { isLoading } = isLoadingStatistic;\r\n\r\n    useEffect(() => {\r\n        dispatch(categoriesOperation.getCategories());\r\n        // Запит списку статистики по категоріям за обраний період\r\n        if (selectedOption !== null) {\r\n            dispatch(statisticOperation.getStatistic(selectedOption));\r\n        }\r\n    }, [dispatch, selectedOption]);\r\n\r\n    const handleChange = (name, value) => {\r\n        if (!selectedOption?.month ?? null) {\r\n            setSelectedOption(prev => ({ ...prev, month: thisMonth }));\r\n        }\r\n        if (!selectedOption?.year ?? null) {\r\n            setSelectedOption(prev => ({ ...prev, year: thisYear }));\r\n        }\r\n\r\n        if (name === 'month') {\r\n            const num = monthsList.findIndex(e => e === value) + 1;\r\n            console.log(num);\r\n            setSelectedOption(prev => ({ ...prev, [name]: num }));\r\n        }\r\n\r\n        if (name === 'year') {\r\n            setSelectedOption(prev => ({ ...prev, [name]: value }));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"containerDatePicker\">\r\n            <Select\r\n                components={{ DropdownIndicator }}\r\n                defaultValue={selectedOption}\r\n                onChange={option => {\r\n                    handleChange('month', option.value);\r\n                }}\r\n                options={monthsOptions}\r\n                placeholder=\"Місяць\"\r\n                isSearchable={false}\r\n                // isDisabled={!isLoading}\r\n                styles={customStyles}\r\n            />\r\n\r\n            <Select\r\n                components={{ DropdownIndicator }}\r\n                defaultValue={selectedOption}\r\n                onChange={option => {\r\n                    handleChange('year', option.value);\r\n                }}\r\n                options={yearsOptions}\r\n                placeholder=\"Рік\"\r\n                isSearchable={false}\r\n                // isDisabled={!isLoading}\r\n                styles={customStyles}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import './table.scss';\r\n\r\nexport function Table({ category, color, total }) {\r\n    const transformData = num => {\r\n        return num\r\n            .toFixed(2)\r\n            .toString()\r\n            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\r\n    };\r\n\r\n    return (\r\n        <div className=\"diagramTab-table\">\r\n            <div className=\"tableHeader\">\r\n                <p>Категорія</p>\r\n                <p>Сума</p>\r\n            </div>\r\n\r\n            <div className=\"tableBody\">\r\n                <ul>\r\n                    {category.length > 0 &&\r\n                        category.map(({ category, sum }, i) => (\r\n                            <li className=\"categoryItem\" key={category}>\r\n                                <div\r\n                                    style={{\r\n                                        backgroundColor: color[i],\r\n                                        minWidth: 24 + 'px',\r\n                                        minHeight: 24 + 'px',\r\n                                    }}\r\n                                ></div>\r\n                                <div className=\"wrapper\">\r\n                                    <p className=\"categoryName\">{category}</p>\r\n                                    <p className=\"sum\">{transformData(sum)}</p>\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n                </ul>\r\n                <ul className=\"tableFooter\">\r\n                    <li className=\"tableFooterItem\">\r\n                        <p className=\"row\">\r\n                            Витрати:\r\n                            <span className=\"expense\">\r\n                                {transformData(total.expense)}\r\n                            </span>\r\n                        </p>\r\n                    </li>\r\n                    <li className=\"tableFooterItem\">\r\n                        <p className=\"row\">\r\n                            Доходи:\r\n                            <span className=\"income\">\r\n                                {transformData(total.income)}\r\n                            </span>\r\n                        </p>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport {\r\n    getCategoryDebet,\r\n    getCategoryCredit,\r\n} from '../../redux/categories/categories-selector';\r\nimport { getStatistic } from '../../redux/statistic/statistic-selector';\r\nimport { getBalance } from '../../redux/user/user-selector';\r\n\r\nimport './diagramTab.scss';\r\nimport { ChartDoughnut } from '@component/chartDoughnut';\r\nimport { DatePicker } from '@component/datePicker';\r\nimport { Table } from '@component/table';\r\n\r\nconst rgb = [\r\n    { id: 1, rgb: 'rgb(255, 207, 87)' },\r\n    { id: 2, rgb: 'rgb(255, 216, 208)' },\r\n    { id: 3, rgb: 'rgb(253, 148, 152)' },\r\n    { id: 4, rgb: 'rgb(197, 186, 255)' },\r\n    { id: 5, rgb: 'rgb(110, 120, 232)' },\r\n    { id: 6, rgb: 'rgb(74, 86, 226)' },\r\n    { id: 7, rgb: 'rgb(129, 225, 255)' },\r\n    { id: 8, rgb: 'rgb(36, 204, 167)' },\r\n    { id: 9, rgb: 'rgb(0, 173, 132)' },\r\n];\r\n\r\nexport function DiagramTab() {\r\n    // const isCategories = useSelector(isCategoriesFull);\r\n    // const statistic = useSelector(updateStatistic);\r\n    const balance = useSelector(getBalance);\r\n    useSelector(getCategoryCredit);\r\n    const statisticCredit = useSelector(getStatistic);\r\n    useSelector(getCategoryDebet); //income\r\n    const statisticDebet = useSelector(getStatistic);\r\n    console.log(statisticCredit);\r\n    console.log(statisticDebet);\r\n    const transformData = num => {\r\n        return num\r\n                  .toFixed(2)\r\n                  .toString()\r\n                  .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ')\r\n    };\r\n\r\n    const getSum = arr => {\r\n        return arr.reduce((acc, el) => acc + el.sum, 0);\r\n    };\r\n\r\n    const getTotal = () => {\r\n        const expense = getSum(statisticCredit);\r\n        const income = getSum(statisticDebet);\r\n        return { expense, income };\r\n    };\r\n\r\n    // Вибір кольору\r\n    const color = rgb.map(el => el.rgb);\r\n\r\n    return (\r\n        <div className=\"diagramTab-section\">\r\n            <ChartDoughnut\r\n                category={statisticCredit}\r\n                // statistic={statisticCredit}\r\n                balance={transformData(balance)}\r\n                color={color}\r\n            />\r\n            <div className=\"diagramTab-container\">\r\n                <DatePicker />\r\n                <Table\r\n                    category={statisticCredit}\r\n                    color={color}\r\n                    total={getTotal()}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n// import Media from 'react-media';\r\nimport { DiagramTab } from '@component/diagramTab';\r\nimport { statisticOperation } from '../../redux/statistic/statistic-operation';\r\n\r\n// Поточна дата\r\n\r\nconst thisMonth = new Date().getMonth() + 1;\r\nconst thisYear = new Date().getFullYear();\r\n\r\nconst Statistic = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        // Запит статистики за поточний період\r\n        dispatch(\r\n            statisticOperation.getStatistic({\r\n                month: thisMonth,\r\n                year: thisYear,\r\n            }),\r\n        );\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div className=\"statistic-section\">\r\n            {/* <Media query='(min-width:1280px)'\r\n      render={() => <h2 className='diagramTab-header'>Статистика</h2>} /> */}\r\n            <h1 className=\"statistic-header__main\">Статистика</h1>\r\n            <DiagramTab />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Statistic;\r\n"],"sourceRoot":""}