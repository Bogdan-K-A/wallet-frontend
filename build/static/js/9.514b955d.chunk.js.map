{"version":3,"sources":["component/chartDoughnut/ChartDoughnut.js","component/datePicker/customStyles.js","component/datePicker/DatePicker.js","component/table/Table.js","component/diagramTab/DiagramTab.js","pages/statistic/Statistic.js"],"names":["ChartJS","register","ArcElement","Tooltip","Legend","options","responsive","maintainAspectRatio","cutout","plugins","legend","display","ChartDoughnut","category","balance","color","isEmpty","isLoading","useSelector","getStatistic","isLoadingStatistic","className","data","labels","map","el","datasets","label","sum","backgroundColor","borderColor","borderWidth","customStyles","container","provided","width","control","height","border","borderRadius","boxShadow","cursor","dropdownIndicator","paddingRight","indicatorSeparator","menu","background","backdropFilter","overflow","option","isFocused","isSelected","borderTop","borderBottom","padding","fontSize","lineHeight","fontFamily","textTransform","placeholder","fontWeight","singleValue","valueContainer","moment","locale","thisMonth","Date","getMonth","monthsList","_locale","_months","standalone","monthsOptions","value","thisYear","getFullYear","yearsOptions","Array","from","val","index","DropdownIndicator","props","href","sprite","DatePicker","useState","month","year","selectedOption","setSelectedOption","dispatch","useDispatch","useEffect","statisticOperation","handleChange","name","num","findIndex","e","prev","components","onChange","isSearchable","styles","Table","total","transformData","toFixed","toString","replace","i","style","minWidth","minHeight","expense","income","rgb","DiagramTab","getBalance","statistic","getFinanceOpertaion","getOperations","statisticCredit","concat","Math","floor","random","totalExpense","totalIncome","Statistic","error","isErrorStatistic","toast"],"mappings":"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","file":"static/js/9.514b955d.chunk.js","sourcesContent":["import { useSelector } from 'react-redux';\r\nimport React from 'react';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport {\r\n    getStatistic,\r\n    isLoadingStatistic,\r\n} from '@redux/statistic/statistic-selector';\r\nimport Cat from '@component/cat';\r\nimport './chartDoughnut.scss';\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nconst options = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    cutout: '70%',\r\n    plugins: {\r\n        legend: {\r\n            display: false,\r\n        },\r\n    },\r\n};\r\n\r\nexport function ChartDoughnut({ category, balance, color, isEmpty }) {\r\n    const statistic = useSelector(getStatistic);\r\n    const isLoading = useSelector(isLoadingStatistic);\r\n\r\n    const data = () => {\r\n        return {\r\n            labels: category.map(el => el.category),\r\n            datasets: [\r\n                {\r\n                    label: '# of Votes',\r\n                    data: category.map(el => el.sum), //  статистика за місяць та рік по curentUser\r\n                    backgroundColor: color,\r\n                    borderColor: color,\r\n                    borderWidth: 1,\r\n                },\r\n            ],\r\n        };\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2 className=\"diagramTab-header\">Статистика</h2>\r\n            {isEmpty && !isLoading && <Cat />}\r\n            {!isEmpty && (\r\n                <div className=\"wrapper-chart\">\r\n                    <div className=\"balance-chart\">\r\n                        &#8372; {' ' + balance}{' '}\r\n                    </div>\r\n                    <Doughnut data={data()} options={options} />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","export const customStyles = {\r\n  container: (provided) => ({\r\n    ...provided,\r\n    width: '100%',\r\n  }),\r\n\r\n  control: (provided) => ({ // стилі для контейнеру інпуту-селекту\r\n    ...provided,\r\n    height: 50,\r\n    width: '100%',\r\n    border: '1px solid #000000',\r\n    borderRadius: 30,\r\n    backgroundColor: 'transparent',\r\n    boxShadow: 'none',\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      border: '1px solid #000000',\r\n      boxShadow: 'none',\r\n    },\r\n  }),\r\n\r\n  dropdownIndicator: (provided) => ({\r\n    ...provided,\r\n    paddingRight: '20px',\r\n  }),\r\n\r\n  indicatorSeparator: () => ({ display: 'none' }),\r\n\r\n  // input,\r\n\r\n  // loadingIndicator,\r\n  \r\n  menu: (provided) => ({  // стилі для контейнеру меню, що відкривається\r\n    ...provided,\r\n    // background: 'rgba(255, 255, 255, 0.8)',\r\n    background: 'rgba(231, 234, 242, 0.9)',\r\n    boxShadow: 'rgba(0, 0, 0, 0.24) 0px 3px 8px;',\r\n    backdropFilter: 'blur(5px)',\r\n    borderRadius: 20,\r\n    overflow: 'hidden',\r\n  }),\r\n\r\n  // menuList,\r\n\r\n  option: (provided, { isFocused, isSelected }) => ({   // стилі для кожної строки списку\r\n    ...provided,\r\n    borderTop: '1px solid rgba(218, 212, 212, 0.3)',\r\n    borderBottom: '1px solid rgba(218, 212, 212, 0.3)',\r\n    background: isFocused || isSelected ? 'rgba(255, 255, 255, 0.7)' : 'transparent',\r\n    color: isFocused || isSelected ? '#4A56E2' : '#000000',\r\n    cursor: 'pointer',\r\n    padding: '14px 20px',\r\n    fontSize: '16px',\r\n    lineHeight: '24px',\r\n    fontFamily: 'Circe',\r\n    textTransform: 'capitalize',\r\n  }),\r\n\r\n  placeholder: (provided) => ({\r\n    ...provided,\r\n    color: '#000000',\r\n    fontFamily: 'Circe',\r\n    fontSize: '16px',\r\n    fontWeight: 400,\r\n    lineHeight: '24px',\r\n  }),\r\n\r\n  singleValue: (provided, {placeholder}) => ({\r\n    ...provided,\r\n    fontFamily: 'Circe',\r\n    fontSize: '16px',\r\n    lineHeight: '24px',\r\n    color: '#4A56E2',\r\n  }),\r\n\r\n  valueContainer: (provided) => ({    // стилі для значення в інпуті-селекті\r\n    ...provided,\r\n    padding: '0 0 0 20px',\r\n    textTransform: 'capitalize',\r\n  }),\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Select, { components } from 'react-select';\r\nimport moment from 'moment';\r\nimport 'moment/locale/uk';\r\nimport sprite from '@assets/sprite.svg';\r\nimport { statisticOperation } from '@redux/statistic/statistic-operation';\r\nimport { customStyles } from './customStyles';\r\nimport './datePicker.scss';\r\n\r\nmoment.locale('uk');\r\n\r\nconst thisMonth = new Date().getMonth();\r\n\r\nconst monthsList = moment(new Date(), 'MMMM', 'uk')._locale._months.standalone;\r\n\r\nconst monthsOptions = monthsList.map(el => ({ value: el, label: el }));\r\n\r\nconst thisYear = new Date().getFullYear();\r\nconst yearsList = Array.from(new Array(12), (val, index) => thisYear - index);\r\n\r\nconst yearsOptions = yearsList.map(el => ({ value: el, label: el }));\r\n\r\nconst DropdownIndicator = props => {\r\n    // Додає кастомну svg до селекту\r\n    return (\r\n        <components.DropdownIndicator {...props}>\r\n            <svg className=\"icon icon-vector\" width=\"20\" height=\"11\">\r\n                <use href={`${sprite}#icon-vector`}></use>\r\n            </svg>\r\n        </components.DropdownIndicator>\r\n    );\r\n};\r\n\r\nexport function DatePicker() {\r\n    const [selectedOption, setSelectedOption] = useState({\r\n        month: thisMonth,\r\n        year: thisYear,\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        // Запит списку статистики по категоріям за обраний період\r\n        dispatch(statisticOperation.getStatistic(selectedOption));\r\n    }, [dispatch, selectedOption]);\r\n\r\n    const handleChange = (name, value) => {\r\n\r\n        if (name === 'month') {\r\n            const num = monthsList.findIndex(e => e === value);\r\n            setSelectedOption(prev => ({ ...prev, [name]: num }));\r\n        }\r\n\r\n        if (name === 'year') {\r\n            setSelectedOption(prev => ({ ...prev, [name]: value }));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"containerDatePicker\">\r\n            <Select\r\n                components={{ DropdownIndicator }}\r\n                onChange={option => {\r\n                    handleChange('month', option.value);\r\n                }}\r\n                options={monthsOptions}\r\n                placeholder=\"Місяць\"\r\n                isSearchable={false}\r\n                styles={customStyles}\r\n            />\r\n\r\n            <Select\r\n                components={{ DropdownIndicator }}\r\n                onChange={option => {\r\n                    handleChange('year', option.value);\r\n                }}\r\n                options={yearsOptions}\r\n                placeholder=\"Рік\"\r\n                isSearchable={false}\r\n                styles={customStyles}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import './table.scss';\r\n\r\nexport function Table({ category, color, total }) {\r\n    const transformData = num => {\r\n        return num\r\n            .toFixed(2)\r\n            .toString()\r\n            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ') || null;\r\n    };\r\n\r\n    return (\r\n        <div className=\"diagramTab-table\">\r\n            <div className=\"tableHeader\">\r\n                <p>Категорія</p>\r\n                <p>Сума</p>\r\n            </div>\r\n\r\n            <div className=\"tableBody\">\r\n                <ul>\r\n                    {category.map(({ category, sum }, i) => (\r\n                        <li className=\"categoryItem\" key={\"statistic-\"+i}>\r\n                            <div\r\n                                style={{\r\n                                    backgroundColor: color[i],\r\n                                    minWidth: 24 + 'px',\r\n                                    minHeight: 24 + 'px',\r\n                                }}\r\n                            ></div>\r\n                            <div className=\"wrapper\">\r\n                                <p className=\"categoryName\">{category}</p>\r\n                                <p className=\"sum\">{transformData(sum)}</p>\r\n                            </div>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n                <ul className=\"tableFooter\">\r\n                    <li className=\"tableFooterItem\">\r\n                        <p className=\"row\">\r\n                            Витрати:\r\n                            <span className=\"expense\">\r\n                                {transformData(total.expense)}\r\n                            </span>\r\n                        </p>\r\n                    </li>\r\n                    <li className=\"tableFooterItem\">\r\n                        <p className=\"row\">\r\n                            Доходи:\r\n                            <span className=\"income\">\r\n                                {transformData(total.income)}\r\n                            </span>\r\n                        </p>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { getStatistic } from '@redux/statistic/statistic-selector';\r\nimport { getBalance } from '@redux/finance/finance-selector';\r\nimport { getFinanceOpertaion } from '@redux/finance/finance-operation';\r\nimport { ChartDoughnut } from '@component/chartDoughnut';\r\nimport { DatePicker } from '@component/datePicker';\r\nimport { Table } from '@component/table';\r\nimport './diagramTab.scss';\r\n\r\nconst rgb = [\r\n    '#ffcf57',\r\n    '#ffd8d0',\r\n    '#fd9498',\r\n    '#c5baff',\r\n    '#6e78e8',\r\n    '#4a56e2',\r\n    '#81e1ff',\r\n    '#24cca7',\r\n    '#00ad84',\r\n];\r\n\r\nexport function DiagramTab() {\r\n    const dispatch = useDispatch();\r\n    const balance = useSelector(getBalance);\r\n    const statistic = useSelector(getStatistic);\r\n\r\n    useEffect(() => {\r\n        dispatch(getFinanceOpertaion.getOperations());\r\n    }, [dispatch]);\r\n\r\n    const statisticCredit = statistic.expense;\r\n\r\n    const transformData = num => {\r\n        return (\r\n            num\r\n                .toFixed(2)\r\n                .toString()\r\n                .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ') || null\r\n        );\r\n    };\r\n\r\n    // Кольори за макетом\r\n    const colorTempl = rgb.map(el => el);\r\n\r\n    // генерація випадкового кольору\r\n    const generateColor = () => {\r\n        const num = statisticCredit.map(() => {\r\n            return '#' + Math.floor(Math.random() * 16777215).toString(16);\r\n        });\r\n        return num;\r\n    };\r\n    const color = colorTempl.concat(generateColor());\r\n\r\n    return (\r\n        <div className=\"diagramTab-section\">\r\n            <ChartDoughnut\r\n                category={statisticCredit}\r\n                balance={transformData(balance)}\r\n                color={color}\r\n                isEmpty={\r\n                    statistic.totalExpense === 0 && statistic.totalIncome === 0\r\n                        ? true\r\n                        : false\r\n                }\r\n            />\r\n            <div className=\"diagramTab-container\">\r\n                <DatePicker />\r\n                <Table\r\n                    category={statisticCredit}\r\n                    color={color}\r\n                    total={{\r\n                        expense: statistic.totalExpense,\r\n                        income: statistic.totalIncome,\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { DiagramTab } from '@component/diagramTab';\r\nimport {\r\n    isLoadingStatistic,\r\n    isErrorStatistic,\r\n    getStatistic,\r\n} from '@redux/statistic/statistic-selector';\r\n\r\n\r\n//Поточна дата\r\n\r\nconst Statistic = () => {\r\n    const isLoading = useSelector(isLoadingStatistic);\r\n    const error = useSelector(isErrorStatistic);\r\n    const statistic = useSelector(getStatistic);\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            toast.error(error);\r\n        }\r\n    }, [error]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"statistic-section\">\r\n                <h1 className=\"statistic-header__main\">Статистика</h1>\r\n                <DiagramTab/>\r\n            </div>\r\n            \r\n        </>)\r\n};\r\nexport default Statistic;\r\n"],"sourceRoot":""}