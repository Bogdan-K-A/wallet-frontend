{"version":3,"sources":["assets/sprite.svg","component/logo/Logo.js","assets/img/tablet/tabletMan.svg","component/loginForm/LoginForm.js","pages/login/LoginPage.js"],"names":["Logo","className","href","sprite","LoginForm","dispatch","useDispatch","src","imgMan","alt","width","initialValues","email","password","onSubmit","values","userOperation","login","validationSchema","Yup","shape","required","props","touched","errors","handleChange","isSubmitting","handleBlur","handleSubmit","id","placeholder","type","value","onChange","onBlur","to","LoginPage","isLoggedIn","useSelector","isAuth","errorUser","isErrorUser","push","useNavigate","useEffect","toast","error"],"mappings":"0HAAe,QAA0B,oC,gGCc1BA,EAXF,WACT,OACI,sBAAKC,UAAU,OAAf,UACI,qBAAKA,UAAU,YAAf,SACI,qBAAKC,KAAI,UAAKC,IAAL,eAEb,mBAAGF,UAAU,YAAb,yB,mICTG,MAA0B,sC,gBCW5BG,EAAY,WACrB,IAAMC,EAAWC,cAEjB,OACI,oCACI,sBAAKL,UAAU,sBAAf,UACI,qBAAKA,UAAU,YAAYM,IAAKC,EAAQC,IAAI,GAAGC,MAAM,UACrD,gDAGJ,cAAC,IAAD,CACIC,cAAe,CAAEC,MAAO,GAAIC,SAAU,IACtCC,SAAU,SAAAC,GACNV,EAASW,IAAcC,MAAMF,KAIjCG,iBAAkBC,MAAaC,MAAM,CACjCR,MAAOO,MAAaP,QAAQS,SAArB,0FACPR,SAAUM,MAAaE,SAAb,4FATlB,SAYK,SAAAC,GACG,IACIP,EAOAO,EAPAP,OACAQ,EAMAD,EANAC,QACAC,EAKAF,EALAE,OAEAC,GAGAH,EAJAI,aAIAJ,EAHAG,cACAE,EAEAL,EAFAK,WACAC,EACAN,EADAM,aAGJ,OACI,qBAAK3B,UAAU,iBAAf,SACI,uBACIa,SAAUc,EACV3B,UAAU,aAFd,UAII,qBAAKA,UAAU,mBAAf,SACI,cAAC,IAAD,MAEJ,wBAAOA,UAAU,oBAAjB,UACKuB,EAAOZ,OAASW,EAAQX,OACrB,qBAAKX,UAAU,iBAAf,SACKuB,EAAOZ,QAGhB,qBAAKX,UAAU,mBAAf,SACI,qBAAKC,KAAI,UAAKC,IAAL,cAEb,uBACIF,UAAU,oBACV4B,GAAG,QACHC,YAAY,UACZC,KAAK,QACLC,MAAOjB,EAAOH,MACdqB,SAAUR,EACVS,OAAQP,OAIhB,wBAAO1B,UAAU,oBAAjB,UACKuB,EAAOX,UAAYU,EAAQV,UACxB,qBAAKZ,UAAU,iBAAf,SACKuB,EAAOX,WAGhB,qBAAKZ,UAAU,mBAAf,SACI,qBAAKC,KAAI,UAAKC,IAAL,iBAEb,uBACIF,UAAU,oBACV4B,GAAG,WACHC,YAAY,uCACZC,KAAK,WACLC,MAAOjB,EAAOF,SACdoB,SAAUR,EACVS,OAAQP,OAIhB,wBACI1B,UAAU,6CACV8B,KAAK,SAFT,SAKI,8DAGJ,cAAC,IAAD,CACII,GAAG,YACHlC,UAAU,wCAFd,SAII,+G,sLC1ErBmC,EAvBG,WACd,IAAMC,EAAaC,YAAYC,KACzBC,EAAYF,YAAYG,KACxBC,EAAOC,cAcb,OAZAC,qBAAU,WACFJ,GACAK,IAAMC,MAAMN,KAEjB,CAACA,IAEJI,qBAAU,WACFP,GACAK,EAAK,OAEV,CAACL,EAAYK,IAGZ,8BACI,cAAC,IAAD","file":"static/js/9.0397406d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sprite.dddd7ad3.svg\";","import sprite from '@assets/sprite.svg';\r\nimport './logo.scss';\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <div className=\"logo\">\r\n            <svg className=\"logo_icon\">\r\n                <use href={`${sprite}#wallet`}></use>\r\n            </svg>\r\n            <p className=\"logo_text\">Wallet</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Logo;\r\n","export default __webpack_public_path__ + \"static/media/tabletMan.c98d6b49.svg\";","import * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { userOperation } from '../../redux/user/user-operation';\r\nimport Logo from '../logo';\r\nimport sprite from '../../assets/sprite.svg';\r\nimport imgMan from '../../assets/img/tablet/tabletMan.svg';\r\n\r\nimport './loginForm.scss';\r\nexport const LoginForm = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"login_img_container\">\r\n                <img className=\"login_img\" src={imgMan} alt=\"\" width=\"435px\" />\r\n                <h1>Finance App</h1>\r\n            </div>\r\n\r\n            <Formik\r\n                initialValues={{ email: '', password: '' }}\r\n                onSubmit={values => {\r\n                    dispatch(userOperation.login(values));\r\n\r\n                    // resetForm({ values: '' });\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    email: Yup.string().email().required(`Обов'язкове поле`),\r\n                    password: Yup.string().required(`Обов'язкове поле`),\r\n                })}\r\n            >\r\n                {props => {\r\n                    const {\r\n                        values,\r\n                        touched,\r\n                        errors,\r\n                        isSubmitting,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        handleSubmit,\r\n                    } = props;\r\n\r\n                    return (\r\n                        <div className=\"form_bg_filter\">\r\n                            <form\r\n                                onSubmit={handleSubmit}\r\n                                className=\"login_form\"\r\n                            >\r\n                                <div className=\"login_form__logo\">\r\n                                    <Logo />\r\n                                </div>\r\n                                <label className=\"login_form__label\">\r\n                                    {errors.email && touched.email && (\r\n                                        <div className=\"input-feedback\">\r\n                                            {errors.email}\r\n                                        </div>\r\n                                    )}\r\n                                    <svg className=\"login_form__icon\">\r\n                                        <use href={`${sprite}#email`}></use>\r\n                                    </svg>\r\n                                    <input\r\n                                        className=\"login_form__input\"\r\n                                        id=\"email\"\r\n                                        placeholder=\" E-mail\"\r\n                                        type=\"email\"\r\n                                        value={values.email}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                    />\r\n                                </label>\r\n\r\n                                <label className=\"login_form__label\">\r\n                                    {errors.password && touched.password && (\r\n                                        <div className=\"input-feedback\">\r\n                                            {errors.password}\r\n                                        </div>\r\n                                    )}\r\n                                    <svg className=\"login_form__icon\">\r\n                                        <use href={`${sprite}#password`}></use>\r\n                                    </svg>\r\n                                    <input\r\n                                        className=\"login_form__input\"\r\n                                        id=\"password\"\r\n                                        placeholder=\"Пароль\"\r\n                                        type=\"password\"\r\n                                        value={values.password}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                    />\r\n                                </label>\r\n\r\n                                <button\r\n                                    className=\"login_form__btn login_form__btn--current  \"\r\n                                    type=\"submit\"\r\n                                    // disabled={isSubmitting}\r\n                                >\r\n                                    <span>Вхід</span>\r\n                                </button>\r\n\r\n                                <Link\r\n                                    to=\"/register\"\r\n                                    className=\"login_form__btn login_form__btn_color\"\r\n                                >\r\n                                    <span>Реєстрація</span>\r\n                                </Link>\r\n                            </form>\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        </section>\r\n    );\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { LoginForm } from '@component/loginForm';\r\nimport { isAuth, isErrorUser } from '@redux/user/user-selector';\r\n\r\nconst LoginPage = () => {\r\n    const isLoggedIn = useSelector(isAuth);\r\n    const errorUser = useSelector(isErrorUser);\r\n    const push = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (errorUser) {\r\n            toast.error(errorUser);\r\n        }\r\n    }, [errorUser]);\r\n\r\n    useEffect(() => {\r\n        if (isLoggedIn) {\r\n            push('/');\r\n        }\r\n    }, [isLoggedIn, push]);\r\n\r\n    return (\r\n        <div>\r\n            <LoginForm />\r\n        </div>\r\n    );\r\n};\r\nexport default LoginPage;\r\n"],"sourceRoot":""}