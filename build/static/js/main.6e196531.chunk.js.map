{"version":3,"sources":["redux/statistic/statistic-selector.js","component/shared/buttonExit/ButtonExit.js","component/shared/itemNav/ItemNav.js","component/shared/error/Error.js","component/headerNav/HeaderNav.js","component/navigation/Navigation.js","component/balans/Balans.js","component/header/Header.js","component/modalTransaction/ModalTransaction.js","component/backdrop/Backdrop.js","assets/img/tablet/Frame.png","component/registrationForm/PasswordIndicator.js","component/registrationForm/registrationForm.js","component/modalLogaut/ModalLogout.js","assets/img/tablet/tabletMan.svg","component/loginForm/LoginForm.js","redux/user/user-operation.js","assets/sprite.svg","services/error/index.js","services/api/index.js","redux/global/global-action.js","redux/finance/finance-operation.js","redux/user/user-selector.js","data/media.js","data/navigation.js","redux/user/user-slice.js","redux/finance/finance-selector.js","component/shared/logo/Logo.js","component/spinnerLoader/spinnerLoader.js","services/hoc/withAuth.js","App.js","redux/categories/categories-slice.js","redux/statistic/statistic-slice.js","redux/store.js","index.js","redux/categories/categories-selector.js","redux/finance/finance-slice.js","redux/statistic/statistic-operation.js","redux/categories/categories-operation.js"],"names":["getStatistic","state","result","expense","statistic","dataExpense","length","map","el","sum","totalSum","category","_id","name","income","dataIncome","totalExpense","totalIncome","console","log","isErrorStatistic","error","ButtonExit","dispatch","useDispatch","className","onClick","openModalLogout","href","sprite","queries","globalMedia","matches","medium","ItemNav","icon","text","linkTo","isActive","to","Error","errorCategory","useSelector","isErrorCategory","errorFinance","isErrorFinance","errorStatistic","useEffect","toast","HeaderNav","userName","getName","Navigation","navList","idx","Balans","n","balans","getBalance","parseFloat","toFixed","replace","Header","ModalTransaction","getCredit","getCategoryCredit","getDebet","getCategoryDebet","pushDate","isSaveModalDateStatic","useState","modalTypeTransaction","setModalTypeTransaction","Date","date","setDate","setCategory","idCategory","setIdCategory","listActive","setListActive","summ","setSumm","comment","setComment","closeModalItem","closeModalTransaction","categoryClick","e","target","dataset","id","textContent","backdrop","document","querySelector","clickBackdrop","pressEsc","code","addEventListener","removeEventListener","validateSchema","type","day","month","year","submitHandler","a","preventDefault","modalTransaction","getDate","getMonth","getFullYear","validate","message","getFinanceOpertaion","addOperation","datetime","undefined","dropListSelectJSX","DropMenuActive","elem","onSubmit","switchActiveDebet","htmlFor","onChange","checked","defaultChecked","switchActive","number","Number","value","isInteger","String","split","int","float","slice","required","min","step","placeholder","_d","inputProps","initialValue","closeOnSelect","timeFormat","maxLength","Backdrop","children","modalRoot","createPortal","PasswordIndicator","show","password","progress","zxcvbn","key","score","getPasswordStrength","style","width","backgroundColor","RegistrationForm","setType","showLine","setShowLine","errorUser","isErrorUser","showHiden","stopPropagation","src","Frame","alt","initialValues","email","confirmPassword","user","userOperation","register","validationSchema","Yup","shape","max","oneOf","props","values","touched","errors","handleChange","handleBlur","handleSubmit","color","onBlur","onFocus","ModalLogout","closeLogoutModal","closeModalLogout","logout","LoginForm","imgMan","login","isSubmitting","createAsyncThunk","data","loginAPI","registerAPI","logoutAPI","currentUser","token","getUserAPI","dir","HttpError","status","axios","defaults","baseURL","setAxiosToken","headers","common","Authorization","getError","response","request","statusText","post","get","getCategoryAPI","resultD","resultC","categories","getStatisticAPI","query","transactions","getOperationsAPI","page","limit","addTransactionAPI","transaction","clear","createAction","getOperations","isAuth","isToken","getToken","isModalLogout","small","mediumOnly","large","userSlice","createSlice","initialState","isLoading","reducers","extraReducers","pending","fulfilled","payload","rejected","balance","actions","finance","userBalance","isModalTransaction","isModalAddTransaction","Logo","LoaderRoket","withAuth","Component","Dashboard","lazy","RegistrationPage","LoginPage","App","isUserToken","isUserAuth","fallback","path","element","categoriesSlice","categoriesOperation","getCategories","statisticSlice","statisticOperation","allExpense","allIncome","transactionsExpense","transactionsIncome","persistConfig","storage","whitelist","userReducer","persistReducer","reducer","store","configureStore","categorySlice","financeSlice","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","devTools","process","rootStore","persistedStore","persistStore","ReactDOM","render","StrictMode","loader","persistor","getElementById","isCategoriesFull","filter","total","currentPage","totalPage","openModalTransaction","setSaveModalDateStatic","clearSaveModalDateStatic","setLimit","user_balance"],"mappings":"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","file":"static/js/main.6e196531.chunk.js","sourcesContent":["// export const getStatistic = state => {\r\n//     const result = state.statistic.data.length === 0\r\n//             ? []\r\n//         : state.statistic.data.map(el => {\r\n//             return {\r\n//                 balance: el.balance,\r\n//                 sum: el.sum,\r\n//                 income: el.income,\r\n//                 id: el._id,\r\n//                 category: el.category.name,\r\n//                 }\r\n//             })\r\n//     return result\r\n// };\r\n\r\nexport const getStatistic = state => {\r\n    const result = {};\r\n\r\n    result.expense =\r\n        state.statistic.dataExpense.length === 0\r\n            ? []\r\n            : state.statistic.dataExpense.map(el => ({\r\n                  sum: el.totalSum,\r\n                  category: el._id[0].name,\r\n              }));\r\n\r\n    result.income =\r\n        state.statistic.dataIncome.length === 0\r\n            ? []\r\n            : state.statistic.dataIncome.map(el => ({\r\n                  sum: el.totalSum,\r\n                  category: el._id[0].name,\r\n              }));\r\n    result.totalExpense = state.statistic.totalExpense;\r\n    result.totalIncome = state.statistic.totalIncome;\r\n    console.log('Selector statistic = ', result);\r\n    return result;\r\n};\r\n\r\nexport const isLoadingStatistic = state => state.statistic.isLoading;\r\n\r\nexport const isErrorStatistic = state => state.statistic.error;\r\n","import { useDispatch } from 'react-redux';\r\nimport Media from 'react-media';\r\n\r\nimport sprite from '@assets/sprite.svg';\r\nimport './buttonExit.scss';\r\n\r\nimport { openModalLogout } from '@redux/user/user-slice';\r\nimport { globalMedia } from '@data';\r\n\r\nexport const ButtonExit = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const onClick = () => {\r\n        dispatch(openModalLogout());\r\n        // dispatch(userOperation.logout());\r\n    };\r\n\r\n    return (\r\n        <button className=\"button_exit\" onClick={onClick}>\r\n            <div className=\"button_exit__block\">\r\n                <svg className=\"button_exit__icon\">\r\n                    <use href={`${sprite}#exit`}></use>\r\n                </svg>\r\n            </div>\r\n            <Media queries={globalMedia}>\r\n                {matches => (\r\n                    <>\r\n                        {matches.medium && (\r\n                            <p className=\"button_exit__text\">Вийти</p>\r\n                        )}\r\n                    </>\r\n                )}\r\n            </Media>\r\n        </button>\r\n    );\r\n};\r\n","import { NavLink } from 'react-router-dom';\r\nimport Media from 'react-media';\r\n\r\nimport sprite from '@assets/sprite.svg';\r\nimport './itemNav.scss';\r\nimport { globalMedia } from '@data';\r\n\r\nexport const ItemNav = ({ icon, text, linkTo }) => {\r\n    return (\r\n        <NavLink\r\n            className={({ isActive }) =>\r\n                isActive ? 'nav_item active' : 'nav_item'\r\n            }\r\n            to={linkTo}\r\n        >\r\n            <svg className=\"nav_item__icon\">\r\n                <use href={`${sprite}#${icon}`}></use>\r\n            </svg>\r\n            <Media queries={globalMedia}>\r\n                {matches => (\r\n                    <>\r\n                        {matches.medium && (\r\n                            <p className=\"nav_item__text\">{text}</p>\r\n                        )}\r\n                    </>\r\n                )}\r\n            </Media>\r\n        </NavLink>\r\n    );\r\n};\r\n","import { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { isErrorCategory } from '@redux/categories/categories-selector';\r\nimport { isErrorFinance } from '@redux/finance/finance-selector';\r\nimport { isErrorStatistic } from '@redux/statistic/statistic-selector';\r\n\r\nexport const Error = () => {\r\n    const errorCategory = useSelector(isErrorCategory);\r\n    const errorFinance = useSelector(isErrorFinance);\r\n    const errorStatistic = useSelector(isErrorStatistic);\r\n\r\n    useEffect(() => {\r\n        if (errorCategory) {\r\n            toast.error(errorCategory);\r\n        }\r\n        if (errorFinance) {\r\n            toast.error(errorFinance);\r\n        }\r\n        if (errorStatistic) {\r\n            toast.error(errorStatistic);\r\n        }\r\n    }, [errorCategory, errorFinance, errorStatistic]);\r\n    // errorUser\r\n    return <></>;\r\n};\r\n","import { useSelector } from 'react-redux';\r\n\r\nimport { getName } from '@redux/user/user-selector';\r\nimport { ButtonExit } from '@shared';\r\nimport './headerNav.scss';\r\n\r\nexport const HeaderNav = () => {\r\n    const userName = useSelector(getName);\r\n    return (\r\n        <ul className=\"header_nav__list\">\r\n            <li className=\"header_nav__item\">\r\n                <span className=\"header_nav__text\">{userName}</span>\r\n            </li>\r\n            <li className=\"header_nav__item\">\r\n                <ButtonExit />\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n","import Media from 'react-media';\r\nimport { navList, globalMedia } from '@data';\r\nimport { ItemNav } from '@shared';\r\nimport './navigation.scss';\r\n\r\nexport const Navigation = () => {\r\n    return (\r\n        <ul className=\"nav_list\">\r\n            {navList.map((el, idx) => {\r\n                return (\r\n                    <Media queries={globalMedia} key={idx}>\r\n                        {matches => (\r\n                            <>\r\n                                {matches.medium && el.text === '' ? null : (\r\n                                    <li className=\"nav_list__item\" key={idx}>\r\n                                        <ItemNav\r\n                                            icon={el.icon}\r\n                                            text={el.text}\r\n                                            linkTo={el.linkTo}\r\n                                        />\r\n                                    </li>\r\n                                )}\r\n                            </>\r\n                        )}\r\n                    </Media>\r\n                );\r\n            })}\r\n        </ul>\r\n    );\r\n};\r\n","import { useSelector } from 'react-redux';\r\nimport './balans.scss';\r\nimport { getBalance } from '@redux/finance/finance-selector';\r\n\r\nexport const Balans = () => {\r\n    const balans = useSelector(getBalance);\r\n\r\n    const makeMoney = n => {\r\n        return parseFloat(n)\r\n            .toFixed(2)\r\n            .replace(/(\\d)(?=(\\d{3})+\\.)/g, '$1 ');\r\n    };\r\n\r\n    return (\r\n        <div className=\"balans\">\r\n            <p className=\"balans__title\">Ваш баланс</p>\r\n            <p className=\"balans__order\">&#8372; {makeMoney(balans)}</p>\r\n        </div>\r\n    );\r\n};\r\n","import { HeaderNav } from '@component';\r\nimport { Logo } from '@shared';\r\nimport { Link } from 'react-router-dom';\r\nimport './header.scss';\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <>\r\n            <div className=\"header\">\r\n                <div className=\"container container__header\">\r\n                    <Link to=\"/\" className=\"logo_link\">\r\n                        <Logo />\r\n                    </Link>\r\n                    <HeaderNav />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Datetime from 'react-datetime';\r\nimport {\r\n    getCategoryDebet,\r\n    getCategoryCredit,\r\n} from '@redux/categories/categories-selector';\r\nimport { isSaveModalDateStatic } from '@redux/finance/finance-selector';\r\nimport { getFinanceOpertaion } from '@redux/finance/finance-operation';\r\nimport { closeModalTransaction } from '@redux/finance/finance-slice';\r\nimport 'moment/locale/ru';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport sprite from '@assets/sprite.svg';\r\nimport './modalTransaction.scss';\r\n\r\nimport { validate } from 'indicative/validator';\r\nexport const ModalTransaction = () => {\r\n    const getCredit = useSelector(getCategoryCredit);\r\n    const getDebet = useSelector(getCategoryDebet);\r\n    const pushDate = useSelector(isSaveModalDateStatic);\r\n    const [modalTypeTransaction, setModalTypeTransaction] = useState('income');\r\n    const [date, setDate] = useState(new Date());\r\n    const [category, setCategory] = useState(getDebet[0].name);\r\n    const [idCategory, setIdCategory] = useState(getDebet[0]._id);\r\n    const [listActive, setListActive] = useState(false);\r\n    const [summ, setSumm] = useState('');\r\n    const [comment, setComment] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    function closeModalItem() {\r\n        dispatch(closeModalTransaction());\r\n    }\r\n\r\n    useEffect(() => {\r\n        const backdrop = document.querySelector('#backdrop');\r\n\r\n        function clickBackdrop(e) {\r\n            if (e.target === backdrop) {\r\n                closeModalItem();\r\n            }\r\n        }\r\n\r\n        function pressEsc(e) {\r\n            if (e.code === 'Escape') {\r\n                closeModalItem();\r\n            }\r\n        }\r\n\r\n        document.addEventListener('click', clickBackdrop);\r\n        document.addEventListener('keydown', pressEsc);\r\n\r\n        return function cleanup() {\r\n            document.removeEventListener('click', clickBackdrop);\r\n            document.removeEventListener('keydown', pressEsc);\r\n        };\r\n    }, [closeModalItem]);\r\n    useEffect(() => {\r\n        if (pushDate) {\r\n            closeModalItem();\r\n        }\r\n    }, [pushDate]);\r\n\r\n    function dateChange(e) {\r\n        setDate(e._d);\r\n    }\r\n    function listOpen() {\r\n        setListActive(!listActive);\r\n    }\r\n    function categoryClick(e) {\r\n        setIdCategory(e.target.dataset.id);\r\n        setCategory(e.target.textContent);\r\n        setListActive(!listActive);\r\n    }\r\n\r\n    function switchToggle() {\r\n        if (modalTypeTransaction === 'income') {\r\n            return 'toggleIncome';\r\n        }\r\n        return 'toggleIncomeSwitch';\r\n    }\r\n\r\n    function switchActiveDebet() {\r\n        if (modalTypeTransaction === 'income') {\r\n            const notActiv = 'switchTypeBalance__text';\r\n            const active = 'switchTypeBalance__text__active';\r\n            return `${notActiv} ${active}`;\r\n        }\r\n\r\n        return 'switchTypeBalance__text';\r\n    }\r\n    function switchActive() {\r\n        if (modalTypeTransaction === 'spending') {\r\n            const notActiv = 'switchTypeBalance__text';\r\n            const active = 'switchTypeBalance__text__active';\r\n            return `${notActiv} ${active}`;\r\n        }\r\n\r\n        return 'switchTypeBalance__text';\r\n    }\r\n\r\n    function summInput(e) {\r\n        const number = Number(e.target.value);\r\n        const integer = Number.isInteger(number);\r\n\r\n        if (!integer) {\r\n            const [int, float] = String(number).split('.');\r\n            setSumm(`${int}.${float.slice(0, 2)}`);\r\n            return;\r\n        }\r\n\r\n        setSumm(e.target.value);\r\n    }\r\n\r\n    function commentInput(e) {\r\n        setComment(e.target.value);\r\n    }\r\n\r\n    function switchClickHandler(e) {\r\n        if (!e.target.checked) {\r\n            setModalTypeTransaction('spending');\r\n            setCategory('Виберіть категорію');\r\n            setIdCategory(null);\r\n            return;\r\n        }\r\n        setModalTypeTransaction('income');\r\n        setCategory(getDebet[0].name);\r\n        setIdCategory(getDebet[0]._id);\r\n    }\r\n    const validateSchema = {\r\n        type: 'required|boolean',\r\n        category: 'required|string',\r\n        sum: 'required|number',\r\n        comment: 'string',\r\n        day: 'required|number',\r\n        month: 'required|number',\r\n        year: 'required|number',\r\n    };\r\n    const submitHandler = async e => {\r\n        // async function submitHandler(e) {\r\n        e.preventDefault();\r\n        const modalTransaction = {\r\n            day: date.getDate(),\r\n            month: date.getMonth() + 1,\r\n            year: date.getFullYear(),\r\n            type: modalTypeTransaction === 'income' ? true : false,\r\n            category: idCategory,\r\n            sum: parseFloat(summ),\r\n            comment: comment,\r\n        };\r\n\r\n        try {\r\n            await validate(modalTransaction, validateSchema);\r\n            // closeModalItem();\r\n        } catch (error) {\r\n            console.log(error[0].message);\r\n            toast.error(error[0].message);\r\n            return;\r\n        }\r\n\r\n        dispatch(\r\n            getFinanceOpertaion.addOperation({\r\n                datetime: date,\r\n                income: modalTypeTransaction === 'income' ? true : false,\r\n                category: idCategory,\r\n                comment: comment === '' ? undefined : comment,\r\n                sum: summ,\r\n            }),\r\n        );\r\n    };\r\n    // випадающий список\r\n    function DropMenuActive() {\r\n        if (category !== 'Виберіть категорію') {\r\n            const notActiv = 'dropField';\r\n            const active = 'dropFieldActive';\r\n\r\n            return `${notActiv} ${active}`;\r\n        }\r\n\r\n        return 'dropField';\r\n    }\r\n    const dropListSelectJSX = (\r\n        <div className=\"dropContainer\">\r\n            <div className={DropMenuActive()} onClick={listOpen}>\r\n                <span className=\"categoryDrop\">{category}</span>\r\n            </div>\r\n\r\n            {listActive && (\r\n                <ul className=\"dropList\">\r\n                    {/* категории для доходв */}\r\n                    {modalTypeTransaction === 'income' &&\r\n                        getDebet.map((elem, idx) => {\r\n                            return (\r\n                                <li\r\n                                    onClick={categoryClick}\r\n                                    className=\"dropListItem\"\r\n                                    key={idx}\r\n                                    data-id={elem._id}\r\n                                >\r\n                                    {elem.name}\r\n                                </li>\r\n                            );\r\n                        })}\r\n\r\n                    {/* категории для расхода */}\r\n                    {modalTypeTransaction === 'spending' &&\r\n                        getCredit.map((elem, idx) => {\r\n                            return (\r\n                                <li\r\n                                    onClick={categoryClick}\r\n                                    className=\"dropListItem\"\r\n                                    key={idx}\r\n                                    data-id={elem._id}\r\n                                >\r\n                                    {elem.name}\r\n                                </li>\r\n                            );\r\n                        })}\r\n                </ul>\r\n            )}\r\n\r\n            <span className=\"dropIconModal\">\r\n                <svg className=\"dropIcon\">\r\n                    <use href={`${sprite}#dropItemModal`}></use>\r\n                </svg>\r\n            </span>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"modalContainer\">\r\n            <div className=\"containerClose\" onClick={closeModalItem}>\r\n                <span className=\"itemCloseModal\">\r\n                    <svg className=\"iconCloseBtn\">\r\n                        <use href={`${sprite}#closeModal`}></use>\r\n                    </svg>\r\n                </span>\r\n            </div>\r\n            <h2 className=\"titleText\">Додати Транзакцію</h2>\r\n            <form\r\n                onSubmit={submitHandler}\r\n                id=\"modalTransaction\"\r\n                className=\"modalForm\"\r\n            >\r\n                <div className=\"switchTypeBalance\">\r\n                    <span className={switchActiveDebet()}>Дохід</span>\r\n                    <div className=\"toggleContainerType\">\r\n                        <label\r\n                            className=\"toggleTypeBody\"\r\n                            htmlFor=\"switchType\"\r\n                        ></label>\r\n                        <span className={switchToggle()} id=\"toggle\">\r\n                            <svg className=\"modalBtnPlus\">\r\n                                <use\r\n                                    href={\r\n                                        modalTypeTransaction === 'income'\r\n                                            ? `${sprite}#plusSvg`\r\n                                            : `${sprite}#modalMinus`\r\n                                    }\r\n                                ></use>\r\n                            </svg>\r\n                        </span>\r\n                    </div>\r\n                    <input\r\n                        className=\"switchToggleInput\"\r\n                        onChange={switchClickHandler}\r\n                        name=\"modalTypeTransaction\"\r\n                        type=\"checkbox\"\r\n                        id=\"switchType\"\r\n                        defaultChecked\r\n                    />\r\n                    <span className={switchActive()}>Витрати</span>\r\n                </div>\r\n                {dropListSelectJSX}\r\n                <div className=\"sumContainer\">\r\n                    <input\r\n                        className=\"sumField\"\r\n                        onChange={summInput}\r\n                        value={summ}\r\n                        required\r\n                        min=\"0.00\"\r\n                        step=\"0.01\"\r\n                        type=\"number\"\r\n                        placeholder=\"0.00\"\r\n                    />\r\n                </div>\r\n                <div className=\"calendarContainer\">\r\n                    <Datetime\r\n                        onChange={dateChange}\r\n                        inputProps={{ className: 'calendarField' }}\r\n                        initialValue={date}\r\n                        closeOnSelect={true}\r\n                        timeFormat={false}\r\n                    />\r\n                    <svg className=\"calendarIcon\">\r\n                        <use href={`${sprite}#calendarSvg`}></use>\r\n                    </svg>\r\n                </div>\r\n                <div className=\"commentContainer\">\r\n                    <textarea\r\n                        maxLength=\"200\"\r\n                        className=\"commentField\"\r\n                        placeholder=\"коментар\"\r\n                        onChange={commentInput}\r\n                        value={comment}\r\n                    />\r\n                </div>\r\n                <div className=\"buttonContainer\">\r\n                    <button className=\"submitButton\" type=\"submit\">\r\n                        Додати\r\n                    </button>\r\n                    <button className=\"cancelButton\" onClick={closeModalItem}>\r\n                        Скасувати\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport './Backdrop.scss';\r\n\r\nexport const Backdrop = ({ children }) => {\r\n    const modalRoot = document.querySelector('#modalroot');\r\n    return createPortal(\r\n        <div id=\"backdrop\" className=\"backdrop\">\r\n            {children}\r\n        </div>,\r\n        modalRoot,\r\n    );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/Frame.5d52b14d.png\";","import React from 'react'\r\nimport './registrationsForm.scss'\r\nimport zxcvbn from 'zxcvbn';\r\n\r\n\r\nexport function PasswordIndicator({ show, password }) {\r\n   const progress = zxcvbn(password);\r\n   const key = progress.score * 100 / 4\r\n\r\n   const getPasswordStrength = () => {\r\n\r\n      switch (progress.score) {\r\n         case 0:\r\n            return 'red'\r\n         case 1:\r\n            return '#f44336'\r\n         case 2:\r\n            return '#ffed3b'\r\n         case 3:\r\n            return '#9bc158'\r\n         case 4:\r\n            return '#4caf50'\r\n\r\n         default:\r\n            return 'none'\r\n      }\r\n   }\r\n\r\n\r\n\r\n   const changePasswordColor = () => ({\r\n      width: `${key}%`,\r\n      backgroundColor: getPasswordStrength()\r\n   })\r\n\r\n   return (\r\n      <>\r\n         {show && (<span className='form__strength' style={changePasswordColor()}\r\n         />)}\r\n      </>\r\n   )\r\n}\r\n","import { useDispatch } from 'react-redux';\r\nimport { userOperation } from '../../redux/user/user-operation';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport './registrationsForm.scss';\r\nimport { Logo } from '../shared/logo';\r\nimport Frame from '../../assets/img/tablet/Frame.png';\r\nimport sprite from '../../assets/sprite.svg';\r\nimport { Link } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport { PasswordIndicator } from './PasswordIndicator';\r\nimport { isErrorUser } from '@redux/user/user-selector';\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const RegistrationForm = () => {\r\n    const dispatch = useDispatch();\r\n    const [type, setType] = useState('password');\r\n    const [showLine, setShowLine] = useState(false);\r\n    const errorUser = useSelector(isErrorUser);\r\n\r\n    useEffect(() => {\r\n        if (errorUser) {\r\n            toast.error(errorUser);\r\n        }\r\n    }, [errorUser]);\r\n    const showHiden = e => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        let currentType = type === 'password' ? 'input' : 'password';\r\n        setType(currentType);\r\n    };\r\n\r\n    return (\r\n        <section className=\"register\">\r\n            <div className=\"container__img\">\r\n                <div className=\"position\">\r\n                    <img className=\"img\" src={Frame} alt=\"\" />\r\n                    <h1 className=\"title\">Finance App</h1>\r\n                </div>\r\n            </div>\r\n\r\n            <Formik\r\n                initialValues={{\r\n                    email: '',\r\n                    password: '',\r\n                    confirmPassword: '',\r\n                    name: '',\r\n                }}\r\n                //відправляємо дані на сервер\r\n                onSubmit={({ name, email, password }) => {\r\n                    const user = { name, email, password };\r\n\r\n                    dispatch(userOperation.register(user));\r\n                    // resetForm({ values: '' });\r\n                }}\r\n                //валідація форми\r\n                validationSchema={Yup.object().shape({\r\n                    email: Yup.string()\r\n                        .email()\r\n                        .min(10)\r\n                        .max(63)\r\n                        .required(\"Обов'язкове поле\"),\r\n                    password: Yup.string()\r\n                        .required(\"Обов'язкове поле\")\r\n                        .min(6, 'Пароль занадто короткий (мінімум 6 символів)')\r\n                        .max(\r\n                            16,\r\n                            'Пароль занадто довгий (максимум 16 символів)',\r\n                        ),\r\n                    confirmPassword: Yup.string()\r\n                        .required(\"Обов'язкове поле\")\r\n                        .oneOf(\r\n                            [Yup.ref('password'), null],\r\n                            'Паролі не співпадають',\r\n                        ),\r\n                    name: Yup.string()\r\n                        .min(1, \"Ім'я не може бути порожнім\")\r\n                        .max(12, \"Ім'я не може бути більше 12 символів\")\r\n                        .required(\"Обов'язкове поле\"),\r\n                })}\r\n            >\r\n                {props => {\r\n                    const {\r\n                        values,\r\n                        touched,\r\n                        errors,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        handleSubmit,\r\n                    } = props;\r\n                    return (\r\n                        <div className=\"form__filter\">\r\n                            {/* //Форма для реєстрації */}\r\n                            <form className=\"form\" onSubmit={handleSubmit}>\r\n                                {/* //Логотип */}\r\n                                <div className=\"form__logo\">\r\n                                    <Logo />\r\n                                </div>\r\n\r\n                                {/* //Поле для вводу емейла */}\r\n                                <label className=\"form__label\">\r\n                                    <div style={{ color: 'red' }}>\r\n                                        {errors.email &&\r\n                                            touched.email &&\r\n                                            errors.email}</div>\r\n                                    <svg className=\"form__icon\">\r\n                                        <use href={`${sprite}#email`}></use>\r\n                                    </svg>\r\n                                    <input\r\n                                        className=\"form__input\"\r\n                                        type=\"email\"\r\n                                        name=\"email\"\r\n                                        placeholder=\"E-mail\"\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        value={values.email}\r\n                                    />\r\n                                </label>\r\n\r\n                                {/* //Поле для вводу пароля */}\r\n                                <label className=\"form__label\">\r\n                                    <div style={{ color: 'red' }}>\r\n                                        {errors.password &&\r\n                                            touched.password &&\r\n                                            errors.password}</div>\r\n                                    <svg className=\"form__icon\">\r\n                                        <use href={`${sprite}#password`}></use>\r\n                                    </svg>\r\n                                    <input\r\n                                        className=\"form__input\"\r\n                                        type={type}\r\n                                        name=\"password\"\r\n                                        placeholder=\"Пароль\"\r\n                                        onChange={handleChange}\r\n                                        // onKeyUp={strength}\r\n                                        onFocus={() => setShowLine(true)}\r\n                                        onBlur={handleBlur}\r\n                                        value={values.password}\r\n                                    />\r\n                                    <span\r\n                                        className=\"form__show\"\r\n                                        onClick={showHiden}\r\n                                    >\r\n                                        {type === 'input' ? 'HIDE' : 'SHOW'}\r\n                                    </span>\r\n                                </label>\r\n\r\n                                {/* //Поле для вводу пароля підтвердження */}\r\n                                <label className=\"form__label\">\r\n                                    <div style={{ color: 'red' }}>\r\n                                        {errors.confirmPassword &&\r\n                                            touched.confirmPassword &&\r\n                                            errors.confirmPassword}</div>\r\n                                    <svg className=\"form__icon\">\r\n                                        <use href={`${sprite}#password`}></use>\r\n                                    </svg>\r\n                                    <input\r\n                                        className=\"form__input\"\r\n                                        type=\"password\"\r\n                                        name=\"confirmPassword\"\r\n                                        placeholder=\"Підтвердити пароль\"\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        value={values.confirmPassword}\r\n                                    />\r\n                                    <PasswordIndicator\r\n                                        show={showLine}\r\n                                        password={values.password}\r\n                                    />\r\n                                </label>\r\n\r\n                                {/* //Поле для вводу імені */}\r\n                                <label className=\"form__label\">\r\n                                    <div style={{ color: 'red' }}>\r\n                                        {errors.name && touched.name && errors.name}</div>\r\n                                    <svg className=\"form__icon\">\r\n                                        <use href={`${sprite}#name`}></use>\r\n                                    </svg>\r\n                                    <input\r\n                                        className=\"form__input\"\r\n                                        type=\"name\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Ваше імя\"\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        value={values.name}\r\n                                    />\r\n                                </label>\r\n\r\n                                {/* //Кнопка для відправки даних */}\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    // disabled={isSubmitting}\r\n                                    className=\"form__button form__button--active\"\r\n                                >\r\n                                    РЕЄСТРАЦІЯ\r\n                                </button>\r\n\r\n                                {/* //Перехід на сторінку входу */}\r\n                                <Link to=\"/login\" className=\"form__button\">\r\n                                    ВХІД\r\n                                </Link>\r\n                            </form>\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        </section>\r\n    );\r\n};\r\n","import { useDispatch } from 'react-redux';\r\nimport React, { useEffect } from 'react';\r\nimport './ModalLogout.scss';\r\nimport { userOperation } from '@redux/user/user-operation';\r\nimport { closeModalLogout } from '@redux/user/user-slice';\r\n\r\nexport const ModalLogout = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    function closeLogoutModal() {\r\n        dispatch(closeModalLogout());\r\n    }\r\n\r\n    useEffect(() => {\r\n        const backdrop = document.querySelector('#backdrop');\r\n\r\n        function clickBackdrop(e) {\r\n            if (e.target === backdrop) {\r\n                closeLogoutModal();\r\n            }\r\n        }\r\n\r\n        function pressEsc(e) {\r\n            if (e.code === 'Escape') {\r\n                closeLogoutModal();\r\n            }\r\n        }\r\n\r\n        document.addEventListener('click', clickBackdrop);\r\n        document.addEventListener('keydown', pressEsc);\r\n\r\n        return function cleanup() {\r\n            document.removeEventListener('click', clickBackdrop);\r\n            document.removeEventListener('keydown', pressEsc);\r\n        };\r\n    }, [closeLogoutModal]);\r\n\r\n    return (\r\n        <div className=\"containerLogout\">\r\n            <p className=\"textLogout\">Ви впевненні?</p>\r\n            <div>\r\n                <button\r\n                    className=\"btnLogout\"\r\n                    type=\"button\"\r\n                    onClick={() => dispatch(userOperation.logout())}\r\n                >\r\n                    <span>Вийти</span>\r\n                </button>\r\n                <button className=\"btnLogout\" onClick={closeLogoutModal}>\r\n                    Скасувати\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/tabletMan.c98d6b49.svg\";","import * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { userOperation } from '../../redux/user/user-operation';\r\nimport { Logo } from '../shared/logo';\r\nimport sprite from '../../assets/sprite.svg';\r\nimport imgMan from '../../assets/img/tablet/tabletMan.svg';\r\n\r\nimport './loginForm.scss';\r\nexport const LoginForm = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"login_img_container\">\r\n                <img className=\"login_img\" src={imgMan} alt=\"\" width=\"435px\" />\r\n                <h1>Finance App</h1>\r\n            </div>\r\n\r\n            <Formik\r\n                initialValues={{ email: '', password: '' }}\r\n                onSubmit={values => {\r\n                    dispatch(userOperation.login(values));\r\n\r\n                    // resetForm({ values: '' });\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    email: Yup.string().email().required(`Обов'язкове поле`),\r\n                    password: Yup.string().required(`Обов'язкове поле`),\r\n                })}\r\n            >\r\n                {props => {\r\n                    const {\r\n                        values,\r\n                        touched,\r\n                        errors,\r\n                        isSubmitting,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        handleSubmit,\r\n                    } = props;\r\n\r\n                    return (\r\n                        <div className=\"form_bg_filter\">\r\n                            <form\r\n                                onSubmit={handleSubmit}\r\n                                className=\"login_form\"\r\n                            >\r\n                                <div className=\"login_form__logo\">\r\n                                    <Logo />\r\n                                </div>\r\n                                <label className=\"login_form__label\">\r\n                                    {errors.email && touched.email && (\r\n                                        <div className=\"input-feedback\">\r\n                                            {errors.email}\r\n                                        </div>\r\n                                    )}\r\n                                    <svg className=\"login_form__icon\">\r\n                                        <use href={`${sprite}#email`}></use>\r\n                                    </svg>\r\n                                    <input\r\n                                        className=\"login_form__input\"\r\n                                        id=\"email\"\r\n                                        placeholder=\" E-mail\"\r\n                                        type=\"email\"\r\n                                        value={values.email}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                    />\r\n                                </label>\r\n\r\n                                <label className=\"login_form__label\">\r\n                                    {errors.password && touched.password && (\r\n                                        <div className=\"input-feedback\">\r\n                                            {errors.password}\r\n                                        </div>\r\n                                    )}\r\n                                    <svg className=\"login_form__icon\">\r\n                                        <use href={`${sprite}#password`}></use>\r\n                                    </svg>\r\n                                    <input\r\n                                        className=\"login_form__input\"\r\n                                        id=\"password\"\r\n                                        placeholder=\"Пароль\"\r\n                                        type=\"password\"\r\n                                        value={values.password}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                    />\r\n                                </label>\r\n\r\n                                <button\r\n                                    className=\"login_form__btn login_form__btn--current  \"\r\n                                    type=\"submit\"\r\n                                    // disabled={isSubmitting}\r\n                                >\r\n                                    <span>Вхід</span>\r\n                                </button>\r\n\r\n                                <Link\r\n                                    to=\"/register\"\r\n                                    className=\"login_form__btn login_form__btn_color\"\r\n                                >\r\n                                    <span>Реєстрація</span>\r\n                                </Link>\r\n                            </form>\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        </section>\r\n    );\r\n};\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { registerAPI, loginAPI, logoutAPI, getUserAPI } from '@api';\r\n\r\nconst login = createAsyncThunk('login', async data => {\r\n    const result = await loginAPI(data);\r\n    return result;\r\n});\r\n\r\nconst register = createAsyncThunk('register', async data => {\r\n    const result = await registerAPI(data);\r\n    return result;\r\n});\r\n\r\nconst logout = createAsyncThunk('logout', async () => {\r\n    const result = await logoutAPI();\r\n    return result;\r\n});\r\n\r\nconst currentUser = createAsyncThunk('current', async token => {\r\n    const result = await getUserAPI(token);\r\n    console.dir(result);\r\n    console.log(result);\r\n    return result;\r\n});\r\n\r\nexport const userOperation = { login, register, logout, currentUser };\r\n","export default __webpack_public_path__ + \"static/media/sprite.da5a518e.svg\";","export class HttpError extends Error {\r\n    constructor(message, status) {\r\n        super(message);\r\n        this.status = status;\r\n    }\r\n}\r\n","import axios from 'axios';\r\nimport { HttpError } from '../error';\r\naxios.defaults.baseURL = 'https://wallet-serv.herokuapp.com/api';\r\n\r\nconst setAxiosToken = token => {\r\n    if (token) {\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    } else {\r\n        axios.defaults.headers.common.Authorization = '';\r\n    }\r\n};\r\n\r\nconst getError = error => {\r\n    if (error.response) {\r\n        throw new HttpError(error.response.data.message, error.response.status);\r\n    } else if (error.request) {\r\n        throw new HttpError(error.request.statusText, error.request.status);\r\n    } else {\r\n        throw new HttpError(error.message, 500);\r\n    }\r\n};\r\n\r\n//  ----------------   USER   -----------------------\r\n\r\nexport const registerAPI = async user => {\r\n    try {\r\n        const result = await axios.post('auth/register', {\r\n            userName: user.name,\r\n            email: user.email,\r\n            password: user.password,\r\n        });\r\n        setAxiosToken(result.data.data.token);\r\n        return result.data.data;\r\n    } catch (error) {\r\n        getError(error);\r\n    }\r\n};\r\n\r\nexport const loginAPI = async user => {\r\n    try {\r\n        const result = await axios.post('auth/login', user);\r\n        setAxiosToken(result.data.data.token);\r\n        return result.data.data;\r\n    } catch (error) {\r\n        console.dir(error);\r\n        getError(error);\r\n    }\r\n};\r\n\r\nexport const logoutAPI = async () => {\r\n    try {\r\n        await axios.get('auth/logout');\r\n        setAxiosToken();\r\n        return { status: 'ok', code: 204 };\r\n    } catch (error) {\r\n        getError(error);\r\n    }\r\n};\r\n\r\nexport const getUserAPI = async token => {\r\n    try {\r\n        setAxiosToken(token);\r\n        const result = await axios.get('users/current');\r\n        return result.data.data.user;\r\n    } catch (error) {\r\n        getError(error);\r\n    }\r\n};\r\n\r\n// -------------  Category  --------------------------\r\n\r\nexport const getCategoryAPI = async () => {\r\n    try {\r\n        const resultD = await axios.get('categories/income');\r\n        const resultC = await axios.get('categories/expense');\r\n        return [...resultC.data.categories, ...resultD.data.categories];\r\n    } catch (error) {\r\n        getError(error);\r\n    }\r\n};\r\n\r\n// ------------ Statistic ----------------------------\r\n\r\nexport const getStatisticAPI = async ({ month, year }) => {\r\n    try {\r\n        const query = `${month || year ? '?' : null}${\r\n            month ? `month=${month}` : null\r\n        }${month && year ? '&' : null}${year ? `year=${year}` : null}`;\r\n\r\n        const result = await axios.get(`transactions/statistics${query}`);\r\n        console.log(\r\n            '------------------------------statistic api------------------------',\r\n        );\r\n        console.log(result);\r\n        return result.data.transactions;\r\n    } catch (error) {\r\n        getError(error);\r\n    }\r\n};\r\n\r\n// ------------  Finance (operations) ----------------------------\r\n\r\nexport const getOperationsAPI = async data => {\r\n    try {\r\n        let query = '';\r\n        if (data) {\r\n            query = `transactions?page=${data.page}&limit=${data.limit}`;\r\n        } else {\r\n            query = `transactions`;\r\n        }\r\n        const result = await axios.get(query);\r\n        return result.data.data;\r\n    } catch (error) {\r\n        getError(error);\r\n    }\r\n};\r\n\r\nexport const addTransactionAPI = async data => {\r\n    try {\r\n        const result = await axios.post('transactions', data);\r\n        return result.data.data.transaction;\r\n    } catch (error) {\r\n        getError(error);\r\n    }\r\n};\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const clear = createAction('clear');\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { getOperationsAPI, addTransactionAPI } from '@api';\r\n\r\nconst getOperations = createAsyncThunk('getOperations', async data => {\r\n    const result = await getOperationsAPI(data);\r\n    return result;\r\n});\r\n\r\nconst addOperation = createAsyncThunk('addOperation', async data => {\r\n    const result = await addTransactionAPI(data);\r\n    return result;\r\n});\r\n\r\nexport const getFinanceOpertaion = { getOperations, addOperation };\r\n","export const isAuth = state => state.user.isAuth;\r\n\r\nexport const isToken = state => (state.user.token ? true : false);\r\n\r\nexport const getToken = state => state.user.token;\r\n\r\nexport const isLoading = state => state.user.isLoading;\r\n\r\nexport const isErrorUser = state => state.user.error;\r\n\r\nexport const isModalLogout = state => state.user.isModalLogout;\r\n\r\nexport const getName = state => state.user.user.name;\r\n\r\nexport const getUser = state => state.user.user;\r\n\r\nexport const getBalance = state => state.user.user.balance;\r\n","export const globalMedia = {\r\n    small: '(max-width: 767px)',\r\n    medium: '(min-width: 768px)',\r\n    mediumOnly: '(min-width: 768px) and (max-width: 1199px)',\r\n    large: '(min-width: 1200px)',\r\n};\r\n","export const navList = [\r\n    { icon: 'home', text: 'Головна', linkTo: '/home' },\r\n    { icon: 'statistic', text: 'Статистика', linkTo: '/diagram' },\r\n    { icon: 'currency', text: '', linkTo: '/currency' },\r\n];\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nimport { userOperation } from './user-operation';\r\nimport { clear } from '../global/global-action';\r\n\r\nconst initialState = {\r\n    user: {},\r\n    token: null,\r\n    isAuth: false,\r\n    isModalLogout: false,\r\n    isLoading: false,\r\n    error: null,\r\n};\r\n\r\nconst userSlice = createSlice({\r\n    name: 'user',\r\n    initialState,\r\n    reducers: {\r\n        openModalLogout: state => {\r\n            state.isModalLogout = true;\r\n        },\r\n        closeModalLogout: state => {\r\n            state.isModalLogout = false;\r\n        },\r\n    },\r\n    extraReducers: {\r\n        [userOperation.register.pending]: state => {\r\n            state.isLoading = true;\r\n            state.error = null;\r\n            state.isAuth = false;\r\n        },\r\n        [userOperation.register.fulfilled]: (state, { payload }) => {\r\n            state.user.name = payload.user.userName;\r\n            state.user.email = payload.user.email;\r\n            state.token = payload.token;\r\n            state.isAuth = true;\r\n            state.isLoading = false;\r\n        },\r\n        [userOperation.register.rejected]: (state, { error }) => {\r\n            state.isLoading = false;\r\n            state.error = error.message;\r\n        },\r\n\r\n        [userOperation.login.pending]: state => {\r\n            state.isLoading = true;\r\n            state.error = null;\r\n            state.isAuth = false;\r\n        },\r\n\r\n        [userOperation.login.fulfilled]: (state, { payload }) => {\r\n            console.log(payload);\r\n            state.user.name = payload.user.userName;\r\n            state.user.email = payload.user.email;\r\n            state.token = payload.token;\r\n            state.isAuth = true;\r\n            state.isLoading = false;\r\n        },\r\n\r\n        [userOperation.login.rejected]: (state, { error }) => {\r\n            state.isLoading = false;\r\n            state.error = error.message;\r\n        },\r\n\r\n        [userOperation.logout.pending]: state => {\r\n            state.isLoading = true;\r\n            state.error = null;\r\n        },\r\n        [userOperation.logout.fulfilled]: (state, { payload }) => {\r\n            state.user = {};\r\n            state.token = null;\r\n            state.isAuth = false;\r\n            state.isLoading = false;\r\n            state.isModalLogout = false;\r\n        },\r\n        [userOperation.logout.rejected]: (state, { error }) => {\r\n            state.isLoading = false;\r\n            state.error = error.message;\r\n        },\r\n        [userOperation.currentUser.pending]: state => {\r\n            state.isLoading = true;\r\n            state.error = null;\r\n        },\r\n        [userOperation.currentUser.fulfilled]: (state, { payload }) => {\r\n            state.user.name = payload.userName;\r\n            state.user.email = payload.email;\r\n            state.user.balance = payload.balance;\r\n            state.isAuth = true;\r\n            state.isLoading = false;\r\n        },\r\n        [userOperation.currentUser.rejected]: (state, { error }) => {\r\n            // if (error.code === 'ERR_BAD_REQUEST') {\r\n            state.token = null;\r\n            state.isAuth = false;\r\n            // }\r\n            state.isLoading = false;\r\n            state.error = error.message;\r\n        },\r\n        [clear]: state => {\r\n            state.user = {};\r\n            state.token = null;\r\n            state.isAuth = false;\r\n            state.isModalLogout = false;\r\n            state.isLoading = false;\r\n            state.error = null;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { openModalLogout, closeModalLogout } = userSlice.actions;\r\nexport default userSlice;\r\n","export const getOperations = state => {\r\n    return state.finance.data;\r\n};\r\n\r\nexport const getBalance = state => state.finance.userBalance;\r\n\r\nexport const isLoading = state => state.finance.isLoading;\r\n\r\nexport const isModalTransaction = state => state.finance.isModalAddTransaction;\r\n\r\nexport const isSaveModalDateStatic = state =>\r\n    state.finance.isSaveModalDateStatic;\r\n\r\nexport const isErrorFinance = state => state.finance.error;\r\n\r\nexport const getParamPage = state => ({\r\n    total: state.finance.total,\r\n    currentPage: state.finance.currentPage,\r\n    totalPage: state.finance.totalPage,\r\n    limit: state.finance.limit,\r\n});\r\n","import sprite from '@assets/sprite.svg';\r\nimport './logo.scss';\r\n\r\nexport const Logo = () => {\r\n    return (\r\n        <div className=\"logo\">\r\n            <svg className=\"logo_icon\">\r\n                <use href={`${sprite}#wallet`}></use>\r\n            </svg>\r\n            <p className=\"logo_text\">Wallet</p>\r\n        </div>\r\n    );\r\n};\r\n","import './spinnerLoader.scss';\r\n\r\nfunction LoaderRoket() {\r\n    return <div className=\"loader\">Loading...</div>;\r\n}\r\nexport default LoaderRoket;\r\n","import { Navigate } from 'react-router-dom';\r\n\r\nexport const withAuth = (isAuth, Component) => {\r\n    if (isAuth) {\r\n        return Component ? Component : <Navigate to=\"/home\" />;\r\n    } else {\r\n        return <Navigate to=\"/login\" />;\r\n    }\r\n};\r\n","import { lazy, Suspense, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Route, Routes } from 'react-router-dom';\r\n\r\n// import { Dashboard, RegistrationPage, LoginPage } from '@pages';\r\nimport { Error } from '@component';\r\nimport Loader from '@component/spinnerLoader/spinnerLoader';\r\nimport { withAuth } from '@hoc/withAuth';\r\n\r\nimport { isAuth, isToken, getToken } from '@redux/user/user-selector';\r\nimport { userOperation } from '@redux/user/user-operation';\r\nimport { clear } from '@redux/global/global-action';\r\n\r\nconst Dashboard = lazy(() => import('./pages/dashboard'));\r\nconst RegistrationPage = lazy(() => import('./pages/registration'));\r\nconst LoginPage = lazy(() => import('./pages/login'));\r\n\r\nfunction App() {\r\n    const dispatch = useDispatch();\r\n    const isUserToken = useSelector(isToken);\r\n    const isUserAuth = useSelector(isAuth);\r\n    const token = useSelector(getToken);\r\n\r\n    useEffect(() => {\r\n        if (isUserToken && !isUserAuth) {\r\n            dispatch(userOperation.currentUser(token));\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        console.log('Use effect in app', isUserAuth);\r\n        if (!isUserAuth && !isUserToken) {\r\n            dispatch(clear());\r\n        }\r\n    }, [isUserAuth, isUserToken]);\r\n\r\n    return (\r\n        <>\r\n            <Suspense fallback={<Loader />}>\r\n                {isUserAuth === isUserToken && (\r\n                    <Routes>\r\n                        <Route path=\"login\" element={<LoginPage />} />\r\n                        <Route path=\"register\" element={<RegistrationPage />} />\r\n\r\n                        <Route path=\"/\" element={withAuth(isUserAuth)} />\r\n                        <Route\r\n                            path=\"/*\"\r\n                            element={withAuth(isUserAuth, <Dashboard />)}\r\n                        />\r\n                    </Routes>\r\n                )}\r\n                <Error />\r\n            </Suspense>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nimport { categoriesOperation } from './categories-operation';\r\nimport { clear } from '../global/global-action';\r\n\r\nconst initialState = {\r\n    data: [],\r\n    isLoading: false,\r\n    error: null,\r\n};\r\n\r\nconst categoriesSlice = createSlice({\r\n    name: 'categories',\r\n    initialState,\r\n    extraReducers: {\r\n        [categoriesOperation.getCategories.pending]: state => {\r\n            state.isLoading = true;\r\n            state.error = null;\r\n        },\r\n        [categoriesOperation.getCategories.fulfilled]: (state, { payload }) => {\r\n            state.data = [...payload];\r\n            state.isLoading = false;\r\n        },\r\n        [categoriesOperation.getCategories.rejected]: (state, { error }) => {\r\n            state.isLoading = false;\r\n            state.error = error.message;\r\n        },\r\n        [clear]: state => {\r\n            state.data = [];\r\n            state.isLoading = false;\r\n            state.error = null;\r\n        },\r\n    },\r\n});\r\n\r\nexport default categoriesSlice;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nimport { statisticOperation } from './statistic-operation';\r\nimport { clear } from '../global/global-action';\r\n\r\nconst initialState = {\r\n    dataExpense: [],\r\n    dataIncome: [],\r\n    totalExpense: 0,\r\n    totalIncome: 0,\r\n    isLoading: false,\r\n    error: null,\r\n};\r\n\r\nconst statisticSlice = createSlice({\r\n    name: 'statistic',\r\n    initialState,\r\n    extraReducers: {\r\n        [statisticOperation.getStatistic.pending]: state => {\r\n            state.isLoading = true;\r\n            state.error = null;\r\n        },\r\n        [statisticOperation.getStatistic.fulfilled]: (state, { payload }) => {\r\n            state.totalExpense = payload.allExpense;\r\n            state.totalIncome = payload.allIncome;\r\n            state.dataExpense = payload.transactionsExpense;\r\n            state.dataIncome = payload.transactionsIncome;\r\n            state.isLoading = false;\r\n        },\r\n        [statisticOperation.getStatistic.rejected]: (state, { error }) => {\r\n            state.isLoading = false;\r\n            state.error = error.message;\r\n        },\r\n        [clear]: state => {\r\n            state.dataExpense = [];\r\n            state.dataIncome = [];\r\n            state.totalExpense = 0;\r\n            state.totalIncome = 0;\r\n            state.isLoading = false;\r\n            state.error = null;\r\n        },\r\n    },\r\n});\r\n\r\nexport default statisticSlice;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist';\r\nimport logger from 'redux-logger';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport categorySlice from './categories/categories-slice';\r\nimport statisticSlice from './statistic/statistic-slice';\r\nimport userSlice from './user/user-slice';\r\nimport financeSlice from './finance/finance-slice';\r\n\r\nconst persistConfig = {\r\n    key: 'user',\r\n    storage,\r\n    whitelist: ['token'],\r\n};\r\n\r\nconst userReducer = persistReducer(persistConfig, userSlice.reducer);\r\n\r\nconst middleware = getDefaultMiddleware => [\r\n    ...getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n        },\r\n    }),\r\n    logger,\r\n];\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        [userSlice.name]: userReducer,\r\n        [categorySlice.name]: categorySlice.reducer,\r\n        [statisticSlice.name]: statisticSlice.reducer,\r\n        [financeSlice.name]: financeSlice.reducer,\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistedStore = persistStore(store);\r\n\r\nexport const rootStore = { store, persistedStore };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport '@style/style.scss';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport App from '@root/App';\r\nimport { rootStore } from '@redux/store';\r\nimport 'react-datetime/css/react-datetime.css';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={rootStore.store}>\r\n            <PersistGate loader={null} persistor={rootStore.persistedStore}>\r\n                <BrowserRouter>\r\n                    <App />\r\n                    <ToastContainer />\r\n                </BrowserRouter>\r\n            </PersistGate>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n","export const isLoadingCategories = state => state.categories.isLoading;\r\n\r\nexport const isCategoriesFull = state =>\r\n    state.categories.data.length > 0 ? true : false;\r\n\r\nexport const getCategoryDebet = state =>\r\n    state.categories.data.filter(el => el.income);\r\n\r\nexport const getCategoryCredit = state =>\r\n    state.categories.data.filter(el => !el.income);\r\n\r\nexport const isErrorCategory = state => state.categories.error;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nimport { getFinanceOpertaion } from './finance-operation';\r\nimport { clear } from '../global/global-action';\r\n\r\nconst initialState = {\r\n    data: [],\r\n    userBalance: 0,\r\n    isLoading: false,\r\n    error: null,\r\n    isModalAddTransaction: false,\r\n    isSaveModalDateStatic: false,\r\n    total: 0,\r\n    currentPage: 1,\r\n    totalPage: 1,\r\n    limit: 5,\r\n};\r\n\r\nconst financeSlice = createSlice({\r\n    name: 'finance',\r\n    initialState,\r\n    reducers: {\r\n        openModalTransaction: state => {\r\n            state.isModalAddTransaction = true;\r\n        },\r\n        closeModalTransaction: state => {\r\n            state.isModalAddTransaction = false;\r\n        },\r\n        setSaveModalDateStatic: state => {\r\n            state.isSaveModalDateStatic = true;\r\n        },\r\n        clearSaveModalDateStatic: state => {\r\n            state.isSaveModalDateStatic = false;\r\n        },\r\n        setLimit: (state, { payload }) => {\r\n            state.limit = payload;\r\n        },\r\n    },\r\n    extraReducers: {\r\n        [getFinanceOpertaion.getOperations.pending]: state => {\r\n            state.isLoading = true;\r\n            state.error = null;\r\n        },\r\n        [getFinanceOpertaion.getOperations.fulfilled]: (state, { payload }) => {\r\n            state.data = [...payload.transactions];\r\n            state.userBalance = payload.user_balance;\r\n            if (payload.page) {\r\n                state.currentPage = payload.page;\r\n            }\r\n            if (payload.totalPage) {\r\n                state.totalPage = payload.totalPage;\r\n            }\r\n            if (payload.total) {\r\n                state.total = payload.total;\r\n            }\r\n            state.isLoading = false;\r\n        },\r\n        [getFinanceOpertaion.getOperations.rejected]: (state, { error }) => {\r\n            state.isLoading = false;\r\n            state.error = error.message;\r\n        },\r\n\r\n        [getFinanceOpertaion.addOperation.pending]: state => {\r\n            state.isLoading = true;\r\n            state.error = null;\r\n        },\r\n        [getFinanceOpertaion.addOperation.fulfilled]: (state, { payload }) => {\r\n            state.data = [payload, ...state.data];\r\n            state.isLoading = false;\r\n            state.isSaveModalDateStatic = true;\r\n        },\r\n        [getFinanceOpertaion.addOperation.rejected]: (state, { error }) => {\r\n            state.isLoading = false;\r\n            state.error = error.message;\r\n        },\r\n        [clear]: state => {\r\n            state.data = [];\r\n            state.userBalance = 0;\r\n            state.currentPage = 1;\r\n            state.total = 0;\r\n            state.totalPage = 1;\r\n            state.limit = 5;\r\n            state.isModalAddTransaction = false;\r\n            state.isSaveModalDateStatic = false;\r\n            state.isLoading = false;\r\n            state.error = null;\r\n        },\r\n    },\r\n});\r\n\r\nexport const {\r\n    openModalTransaction,\r\n    closeModalTransaction,\r\n    setSaveModalDateStatic,\r\n    clearSaveModalDateStatic,\r\n    setLimit,\r\n} = financeSlice.actions;\r\nexport default financeSlice;\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { getStatisticAPI } from '@api';\r\n\r\nconst getStatistic = createAsyncThunk('getStatistic', async data => {\r\n    const result = await getStatisticAPI(data);\r\n    return result;\r\n});\r\nexport const statisticOperation = { getStatistic };\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { getCategoryAPI } from '@api';\r\n\r\nconst getCategories = createAsyncThunk('getCategories', async () => {\r\n    const result = await getCategoryAPI();\r\n    return result;\r\n});\r\n\r\nexport const categoriesOperation = { getCategories };\r\n"],"sourceRoot":""}