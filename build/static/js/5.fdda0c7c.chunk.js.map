{"version":3,"sources":["component/chartDoughnut/ChartDoughnut.js","component/datePicker/customStyles.js","component/datePicker/DatePicker.js","component/table/Table.js","component/diagramTab/DiagramTab.js","pages/statistic/Statistic.js"],"names":["ChartJS","register","ArcElement","Tooltip","Legend","options","responsive","maintainAspectRatio","cutout","plugins","legend","display","ChartDoughnut","category","balance","color","isStat","useSelector","getStatistic","className","data","length","labels","datasets","label","backgroundColor","borderColor","borderWidth","map","el","sum","customStyles","container","provided","width","control","height","border","borderRadius","boxShadow","cursor","dropdownIndicator","paddingRight","indicatorSeparator","menu","background","backdropFilter","overflow","option","isFocused","isSelected","borderTop","borderBottom","padding","fontSize","lineHeight","fontFamily","textTransform","placeholder","fontWeight","singleValue","valueContainer","moment","locale","thisMonth","Date","getMonth","monthsList","_locale","_months","standalone","monthsOptions","value","thisYear","getFullYear","yearsOptions","Array","from","val","index","DropdownIndicator","props","href","sprite","DatePicker","useState","month","year","selectedOption","setSelectedOption","dispatch","useDispatch","useEffect","statisticOperation","handleChange","name","prev","num","findIndex","e","components","onChange","isSearchable","styles","Table","total","transformData","toFixed","toString","replace","i","id","style","minWidth","minHeight","expense","income","rgb","DiagramTab","getBalance","statistic","getFinanceOpertaion","getOperations","statisticCredit","concat","Math","floor","random","console","log","totalExpense","totalIncome","Statistic"],"mappings":"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","file":"static/js/5.fdda0c7c.chunk.js","sourcesContent":["import { useSelector } from 'react-redux';\r\nimport React from 'react';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport { getStatistic, isLoadingStatistic } from '../../redux/statistic/statistic-selector';\r\n\r\nimport './chartDoughnut.scss';\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nconst options = {\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  cutout: '70%',\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n        },\r\n    }\r\n}\r\n\r\nexport function ChartDoughnut({ category, balance, color, }) {\r\n  const isStat = useSelector(getStatistic);\r\n  // const isLoading = useSelector(isLoadingStatistic);\r\n\r\n  const data = () => {\r\n    if (isStat.length === 0) {\r\n    \r\n        return {\r\n          labels: ['No statistic'],\r\n      datasets: [\r\n        {\r\n          label: '# of Votes',\r\n          data: [1,1,2,2,3,3,4 ],\r\n          backgroundColor: [\"#f5f7fa\", \"#ebeff5\",\"#dde3ed\", \"#c8d1e0\", \"#afbacc\", \"#8e99ab\", \"#707a8a\"],\r\n          borderColor: [\"#f5f7fa\", \"#ebeff5\",\"#dde3ed\", \"#c8d1e0\", \"#afbacc\", \"#8e99ab\", \"#707a8a\"],\r\n          borderWidth: 1,\r\n        },\r\n      ],}\r\n    }\r\n\r\n    return {\r\n  labels: category.map(el=>el.category),\r\n  datasets: [\r\n    {\r\n      label: '# of Votes',\r\n      data: category.map(el=>el.sum),  //  статистика за місяць та рік по curentUser\r\n      backgroundColor: color,\r\n      borderColor: color,\r\n      borderWidth: 1,\r\n    },\r\n  ],\r\n  };\r\n\r\n  }\r\n  \r\n  return <div>\r\n    <h2 className='diagramTab-header'>Статистика</h2>\r\n    <div className='wrapper-chart'>\r\n      <div className='balance'>&#8372; {\" \" + balance} </div>\r\n      <Doughnut data={data()} options={options}/>\r\n    </div>\r\n    \r\n  </div>\r\n}\r\n","export const customStyles = {\r\n  container: (provided) => ({\r\n    ...provided,\r\n    width: '100%',\r\n  }),\r\n\r\n  control: (provided) => ({ // стилі для контейнеру інпуту-селекту\r\n    ...provided,\r\n    height: 50,\r\n    width: '100%',\r\n    border: '1px solid #000000',\r\n    borderRadius: 30,\r\n    backgroundColor: 'transparent',\r\n    boxShadow: 'none',\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      border: '1px solid #000000',\r\n      boxShadow: 'none',\r\n    },\r\n  }),\r\n\r\n  dropdownIndicator: (provided) => ({\r\n    ...provided,\r\n    paddingRight: '20px',\r\n  }),\r\n\r\n  indicatorSeparator: () => ({ display: 'none' }),\r\n\r\n  // input,\r\n\r\n  // loadingIndicator,\r\n  \r\n  menu: (provided) => ({  // стилі для контейнеру меню, що відкривається\r\n    ...provided,\r\n    // background: 'rgba(255, 255, 255, 0.8)',\r\n    background: 'rgba(231, 234, 242, 0.9)',\r\n    boxShadow: 'rgba(0, 0, 0, 0.24) 0px 3px 8px;',\r\n    backdropFilter: 'blur(5px)',\r\n    borderRadius: 20,\r\n    overflow: 'hidden',\r\n  }),\r\n\r\n  // menuList,\r\n\r\n  option: (provided, { isFocused, isSelected }) => ({   // стилі для кожної строки списку\r\n    ...provided,\r\n    borderTop: '1px solid rgba(218, 212, 212, 0.3)',\r\n    borderBottom: '1px solid rgba(218, 212, 212, 0.3)',\r\n    background: isFocused || isSelected ? 'rgba(255, 255, 255, 0.7)' : 'transparent',\r\n    color: isFocused || isSelected ? '#4A56E2' : '#000000',\r\n    cursor: 'pointer',\r\n    padding: '14px 20px',\r\n    fontSize: '16px',\r\n    lineHeight: '24px',\r\n    fontFamily: 'Circe, sans-serif',\r\n    textTransform: 'capitalize',\r\n  }),\r\n\r\n  placeholder: (provided) => ({\r\n    ...provided,\r\n    color: '#000000',\r\n    fontSize: '16px',\r\n    fontWeight: 400,\r\n    lineHeight: '24px',\r\n  }),\r\n\r\n  singleValue: (provided, {placeholder}) => ({\r\n    ...provided,\r\n    fontSize: '16px',\r\n    lineHeight: '24px',\r\n    color: '#4A56E2',\r\n  }),\r\n\r\n  valueContainer: (provided) => ({    // стилі для значення в інпуті-селекті\r\n    ...provided,\r\n    padding: '0 0 0 20px',\r\n    textTransform: 'capitalize',\r\n  }),\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Select, { components } from 'react-select';\r\nimport './datePicker.scss';\r\nimport { customStyles } from './customStyles';\r\nimport sprite from '../../assets/sprite.svg';\r\nimport { statisticOperation } from '../../redux/statistic/statistic-operation';\r\n// import { categoriesOperation } from '../../redux/categories/categories-operation';\r\n// import { isLoadingStatistic } from '../../redux/statistic/statistic-selector';\r\n\r\nimport moment from 'moment';\r\nimport 'moment/locale/uk';\r\nmoment.locale('uk');\r\n\r\nconst thisMonth = new Date().getMonth();\r\n\r\nconst monthsList = moment(new Date(), 'MMMM', 'uk')._locale._months.standalone;\r\n\r\nconst monthsOptions = monthsList.map(el => ({ value: el, label: el }));\r\n\r\nconst thisYear = new Date().getFullYear();\r\nconst yearsList = Array.from(new Array(12), (val, index) => thisYear - index);\r\n\r\nconst yearsOptions = yearsList.map(el => ({ value: el, label: el }));\r\n\r\nconst DropdownIndicator = props => {\r\n    // Додає кастомну svg до селекту\r\n    return (\r\n        <components.DropdownIndicator {...props}>\r\n            <svg className=\"icon icon-vector\" width=\"20\" height=\"11\">\r\n                <use href={`${sprite}#icon-vector`}></use>\r\n            </svg>\r\n        </components.DropdownIndicator>\r\n    );\r\n};\r\n\r\nexport function DatePicker() {\r\n    const [selectedOption, setSelectedOption] = useState({\r\n        month: thisMonth,\r\n        year: thisYear,\r\n    });\r\n    // const [selectedOption, setSelectedOption] = useState();\r\n    const dispatch = useDispatch();\r\n    // const { isLoading } = isLoadingStatistic;\r\n\r\n    useEffect(() => {\r\n        // dispatch(categoriesOperation.getCategories());\r\n        // Запит списку статистики по категоріям за обраний період\r\n        if (selectedOption !== null) {\r\n            dispatch(statisticOperation.getStatistic(selectedOption));\r\n        }\r\n    }, [dispatch, selectedOption]);\r\n\r\n    const handleChange = (name, value) => {\r\n        if (!selectedOption?.month ?? null) {\r\n            setSelectedOption(prev => ({ ...prev, month: thisMonth }));\r\n        }\r\n        if (!selectedOption?.year ?? null) {\r\n            setSelectedOption(prev => ({ ...prev, year: thisYear }));\r\n        }\r\n\r\n        if (name === 'month') {\r\n            const num = monthsList.findIndex(e => e === value);\r\n            // console.log(num)\r\n            setSelectedOption(prev => ({ ...prev, [name]: num }));\r\n        }\r\n\r\n        if (name === 'year') {\r\n            setSelectedOption(prev => ({ ...prev, [name]: value }));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"containerDatePicker\">\r\n            <Select\r\n                components={{ DropdownIndicator }}\r\n                // defaultValue={selectedOption}\r\n                // defaultValue={monthsOptions.find((month)=>month.value===selectedOption.month)}\r\n                onChange={option => {\r\n                    handleChange('month', option.value);\r\n                }}\r\n                options={monthsOptions}\r\n                placeholder=\"Місяць\"\r\n                isSearchable={false}\r\n                styles={customStyles}\r\n                // menuPlacement='top'\r\n            />\r\n\r\n            <Select\r\n                components={{ DropdownIndicator }}\r\n                // defaultValue={selectedOption}\r\n                // defaultValue={yearsOptions.find((year)=>year.value===selectedOption.year)}\r\n                onChange={option => {\r\n                    handleChange('year', option.value);\r\n                }}\r\n                options={yearsOptions}\r\n                placeholder=\"Рік\"\r\n                isSearchable={false}\r\n                styles={customStyles}\r\n                // menuPlacement='top'\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import './table.scss';\r\n\r\nexport function Table({ category, color, total }) {\r\n    const transformData = num => {\r\n        return num\r\n            .toFixed(2)\r\n            .toString()\r\n            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ') || null;  //-------\r\n    };\r\n\r\n    return (\r\n        <div className=\"diagramTab-table\">\r\n            <div className=\"tableHeader\">\r\n                <p>Категорія</p>\r\n                <p>Сума</p>\r\n            </div>\r\n\r\n            <div className=\"tableBody\">\r\n                <ul>\r\n                    {category.map(({ category, sum, id }, i) => (\r\n                        <li className=\"categoryItem\" key={id}>\r\n                            <div\r\n                                style={{\r\n                                    backgroundColor: color[i],\r\n                                    minWidth: 24 + 'px',\r\n                                    minHeight: 24 + 'px',\r\n                                }}\r\n                            ></div>\r\n                            <div className=\"wrapper\">\r\n                                <p className=\"categoryName\">{category}</p>\r\n                                <p className=\"sum\">{transformData(sum)}</p>\r\n                            </div>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n                <ul className=\"tableFooter\">\r\n                    <li className=\"tableFooterItem\">\r\n                        <p className=\"row\">\r\n                            Витрати:\r\n                            <span className=\"expense\">\r\n                                {transformData(total.expense)}\r\n                            </span>\r\n                        </p>\r\n                    </li>\r\n                    <li className=\"tableFooterItem\">\r\n                        <p className=\"row\">\r\n                            Доходи:\r\n                            <span className=\"income\">\r\n                                {transformData(total.income)}\r\n                            </span>\r\n                        </p>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { useEffect } from 'react';\r\n// import { getCategoryDebet, getCategoryCredit } from '../../redux/categories/categories-selector';\r\nimport { getStatistic } from '../../redux/statistic/statistic-selector';\r\nimport { statisticOperation } from '../../redux/statistic/statistic-operation';\r\nimport { getBalance } from '@redux/finance/finance-selector';\r\nimport { getFinanceOpertaion } from '@redux/finance/finance-operation';\r\n\r\nimport './diagramTab.scss';\r\nimport { ChartDoughnut } from '@component/chartDoughnut';\r\nimport { DatePicker } from '@component/datePicker';\r\nimport { Table } from '@component/table';\r\n\r\nconst rgb = [\r\n    '#ffcf57',\r\n    '#ffd8d0',\r\n    '#fd9498',\r\n    '#c5baff',\r\n    '#6e78e8',\r\n    '#4a56e2',\r\n    '#81e1ff',\r\n    '#24cca7',\r\n    '#00ad84',\r\n];\r\n\r\nexport function DiagramTab() {\r\n    const dispatch = useDispatch();\r\n    // const isCategories = useSelector(isCategoriesFull);\r\n    // const statistic = useSelector(updateStatistic);\r\n    const balance = useSelector(getBalance);\r\n    // useSelector(getCategoryCredit);\r\n    // const statisticCredit = useSelector(getStatistic);\r\n    // useSelector(getCategoryDebet);                     // -------income\r\n    // const statisticDebet = useSelector(getStatistic);\r\n    const statistic = useSelector(getStatistic);\r\n\r\n    useEffect(() => {\r\n        dispatch(getFinanceOpertaion.getOperations());\r\n    }, [dispatch]);\r\n\r\n    const getSum = arr => {\r\n        return arr.reduce((acc, el) => acc + el.sum, 0);\r\n    };\r\n\r\n    const statisticDebet = statistic.income;\r\n    // console.log(statisticDebet)\r\n\r\n    const statisticCredit = statistic.expense;\r\n    // console.log(statisticCredit)\r\n\r\n    const getTotal = () => {\r\n        const expense = getSum(statisticCredit);\r\n        const income = getSum(statisticDebet);\r\n        return { expense, income };\r\n    };\r\n    // console.log(getTotal())\r\n\r\n    // const allCategoryName = (statisticCredit.map((el) => el.category));\r\n    // console.log(allCategoryName)\r\n\r\n    // const filtrCategory= (statisticCredit.reduce((acc, currV) => {\r\n    //     if (acc.indexOf(currV.category)) {\r\n    //         acc.push(currV.category)\r\n    //     }\r\n    //     return acc\r\n    // }, []))\r\n    // console.log(filtrCategory)\r\n\r\n    const transformData = num => {\r\n        return (\r\n            num\r\n                .toFixed(2)\r\n                .toString()\r\n                .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ') || null\r\n        ); //---------\r\n    };\r\n\r\n    // Кольори за макетом\r\n    const colorTempl = rgb.map(el => el);\r\n\r\n    // генерація випадкового кольору\r\n    const generateColor = () => {\r\n        const num = statisticCredit.map(() => {\r\n            return '#' + Math.floor(Math.random() * 16777215).toString(16);\r\n        });\r\n        return num;\r\n    };\r\n    const color = colorTempl.concat(generateColor());\r\n    console.log(statisticCredit);\r\n    return (\r\n        <div className=\"diagramTab-section\">\r\n            <ChartDoughnut\r\n                category={statisticCredit}\r\n                balance={transformData(balance)}\r\n                color={color}\r\n            />\r\n            <div className=\"diagramTab-container\">\r\n                <DatePicker />\r\n                <Table\r\n                    category={statisticCredit}\r\n                    color={color}\r\n                    total={{\r\n                        expense: statistic.totalExpense,\r\n                        income: statistic.totalIncome,\r\n                    }}\r\n                    // total={getTotal()}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n// import Media from 'react-media';\r\nimport { DiagramTab } from '@component/diagramTab';\r\nimport { statisticOperation } from '../../redux/statistic/statistic-operation';\r\n\r\n// Поточна дата\r\n\r\nconst thisMonth = new Date().getMonth();\r\nconst thisYear = new Date().getFullYear();\r\n\r\nconst Statistic = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        // Запит статистики за поточний період\r\n        dispatch(\r\n            statisticOperation.getStatistic({\r\n                month: thisMonth,\r\n                year: thisYear,\r\n            }),\r\n        );\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div className=\"statistic-section\">\r\n            {/* <Media query='(min-width:1280px)'\r\n      render={() => <h2 className='diagramTab-header'>Статистика</h2>} /> */}\r\n            <h1 className=\"statistic-header__main\">Статистика</h1>\r\n            <DiagramTab />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Statistic;\r\n"],"sourceRoot":""}