{"version":3,"sources":["redux/statistic/statistic-selector.js","component/shared/buttonExit/ButtonExit.js","component/shared/itemNav/ItemNav.js","component/shared/error/Error.js","component/headerNav/HeaderNav.js","component/navigation/Navigation.js","component/balans/Balans.js","component/header/Header.js","component/modalTransaction/ModalTransaction.js","component/backdrop/Backdrop.js","assets/img/tablet/Frame.png","component/registrationForm/PasswordIndicator.js","component/registrationForm/registrationForm.js","component/modalLogaut/ModalLogout.js","assets/img/tablet/tabletMan.svg","component/loginForm/LoginForm.js","redux/user/user-operation.js","assets/sprite.svg","services/error/index.js","services/api/index.js","redux/user/user-selector.js","redux/global/global-action.js","redux/finance/finance-operation.js","data/media.js","data/navigation.js","redux/user/user-slice.js","redux/finance/finance-selector.js","component/shared/logo/Logo.js","component/spinnerLoader/spinnerLoader.js","services/hoc/withAuth.js","App.js","redux/categories/categories-slice.js","redux/statistic/statistic-slice.js","redux/store.js","index.js","redux/categories/categories-selector.js","redux/finance/finance-slice.js","redux/categories/categories-operation.js","redux/statistic/statistic-operation.js"],"names":["getStatistic","state","console","log","statistic","data","categories","length","map","el","category","name","sum","isLoadingStatistic","isLoading","isErrorStatistic","error","ButtonExit","dispatch","useDispatch","className","onClick","openModalLogout","href","sprite","queries","globalMedia","matches","medium","ItemNav","icon","text","linkTo","isActive","to","Error","errorUser","useSelector","isErrorUser","errorCategory","isErrorCategory","errorFinance","isErrorFinance","errorStatistic","useEffect","toast","HeaderNav","userName","getName","Navigation","navList","idx","Balans","n","balans","getBalance","parseFloat","toFixed","replace","Header","ModalTransaction","getCredit","getCategoryCredit","getDebet","getCategoryDebet","pushDate","isSaveModalDateStatic","useState","modalTypeTransaction","setModalTypeTransaction","Date","date","setDate","setCategory","_id","idCategory","setIdCategory","listActive","setListActive","summ","setSumm","comment","setComment","closeModalItem","closeModalTransaction","categoryClick","e","target","dataset","id","textContent","backdrop","document","querySelector","clickBackdrop","pressEsc","code","addEventListener","removeEventListener","validateSchema","type","day","month","year","submitHandler","a","preventDefault","modalTransaction","getDate","getMonth","getFullYear","validate","message","getFinanceOpertaion","addOperation","datetime","income","undefined","dropListSelectJSX","DropMenuActive","elem","onSubmit","switchActiveDebet","htmlFor","onChange","checked","defaultChecked","switchActive","number","Number","value","isInteger","String","split","int","float","slice","required","min","step","placeholder","_d","inputProps","initialValue","closeOnSelect","timeFormat","maxLength","Backdrop","children","modalRoot","createPortal","PasswordIndicator","show","password","progress","zxcvbn","key","score","getPasswordStrength","style","width","backgroundColor","RegistrationForm","setType","showLine","setShowLine","showHiden","stopPropagation","src","Frame","alt","initialValues","email","confirmPassword","resetForm","user","userOperation","register","values","validationSchema","Yup","shape","max","oneOf","props","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","onBlur","onFocus","disabled","ModalLogout","closeLogoutModal","closeModalLogout","logout","LoginForm","imgMan","login","createAsyncThunk","loginAPI","result","registerAPI","logoutAPI","currentUser","token","getUserAPI","dir","HttpError","status","axios","defaults","baseURL","setAxiosToken","headers","common","Authorization","getError","response","request","statusText","post","get","getCategoryAPI","resultD","resultC","getStatisticAPI","query","transactions","getOperationsAPI","page","limit","addTransactionAPI","transaction","isAuth","isToken","getToken","isModalLogout","balance","clear","createAction","getOperations","small","mediumOnly","large","userSlice","createSlice","initialState","reducers","extraReducers","pending","fulfilled","payload","rejected","actions","finance","userBalance","isModalTransaction","isModalAddTransaction","Logo","LoaderRoket","withAuth","Component","Dashboard","lazy","RegistrationPage","LoginPage","App","isUserToken","isUserAuth","fallback","path","element","categoriesSlice","categoriesOperation","getCategories","statisticSlice","statisticOperation","persistConfig","storage","whitelist","userReducer","persistReducer","reducer","store","configureStore","categorySlice","financeSlice","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","devTools","process","rootStore","persistedStore","persistStore","ReactDOM","render","StrictMode","loader","persistor","getElementById","isCategoriesFull","filter","total","currentPage","totalPage","openModalTransaction","setSaveModalDateStatic","clearSaveModalDateStatic","setLimit","user_balance"],"mappings":"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","file":"static/js/main.4aa7f8e7.chunk.js","sourcesContent":["export const getStatistic = state => {\r\n    console.log('--------redux-------------');\r\n    console.log(state.statistic.data);\r\n    console.log(state.categories.data);\r\n    const result =\r\n        state.statistic.data.length === 0\r\n            ? []\r\n            : state.statistic.data.map(el => {\r\n                  return {\r\n                      category: el.category.name,\r\n                      sum: el.sum,\r\n                  };\r\n              });\r\n    return result;\r\n};\r\n\r\nexport const isLoadingStatistic = state => state.statistic.isLoading;\r\n\r\nexport const isErrorStatistic = state => state.statistic.error;\r\n","import { useDispatch } from 'react-redux';\r\nimport Media from 'react-media';\r\n\r\nimport sprite from '@assets/sprite.svg';\r\nimport './buttonExit.scss';\r\n\r\nimport { openModalLogout } from '@redux/user/user-slice';\r\nimport { globalMedia } from '@data';\r\n\r\nexport const ButtonExit = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const onClick = () => {\r\n        dispatch(openModalLogout());\r\n        // dispatch(userOperation.logout());\r\n    };\r\n\r\n    return (\r\n        <button className=\"button_exit\" onClick={onClick}>\r\n            <div className=\"button_exit__block\">\r\n                <svg className=\"button_exit__icon\">\r\n                    <use href={`${sprite}#exit`}></use>\r\n                </svg>\r\n            </div>\r\n            <Media queries={globalMedia}>\r\n                {matches => (\r\n                    <>\r\n                        {matches.medium && (\r\n                            <p className=\"button_exit__text\">Вийти</p>\r\n                        )}\r\n                    </>\r\n                )}\r\n            </Media>\r\n        </button>\r\n    );\r\n};\r\n","import { NavLink } from 'react-router-dom';\r\nimport Media from 'react-media';\r\n\r\nimport sprite from '@assets/sprite.svg';\r\nimport './itemNav.scss';\r\nimport { globalMedia } from '@data';\r\n\r\nexport const ItemNav = ({ icon, text, linkTo }) => {\r\n    return (\r\n        <NavLink\r\n            className={({ isActive }) =>\r\n                isActive ? 'nav_item active' : 'nav_item'\r\n            }\r\n            to={linkTo}\r\n        >\r\n            <svg className=\"nav_item__icon\">\r\n                <use href={`${sprite}#${icon}`}></use>\r\n            </svg>\r\n            <Media queries={globalMedia}>\r\n                {matches => (\r\n                    <>\r\n                        {matches.medium && (\r\n                            <p className=\"nav_item__text\">{text}</p>\r\n                        )}\r\n                    </>\r\n                )}\r\n            </Media>\r\n        </NavLink>\r\n    );\r\n};\r\n","import { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { isErrorCategory } from '@redux/categories/categories-selector';\r\nimport { isErrorFinance } from '@redux/finance/finance-selector';\r\nimport { isErrorStatistic } from '@redux/statistic/statistic-selector';\r\nimport { isErrorUser } from '@redux/user/user-selector';\r\n\r\nexport const Error = () => {\r\n    const errorUser = useSelector(isErrorUser);\r\n    const errorCategory = useSelector(isErrorCategory);\r\n    const errorFinance = useSelector(isErrorFinance);\r\n    const errorStatistic = useSelector(isErrorStatistic);\r\n\r\n    useEffect(() => {\r\n        if (errorUser) {\r\n            toast.error(errorUser);\r\n        }\r\n        if (errorCategory) {\r\n            toast.error(errorCategory);\r\n        }\r\n        if (errorFinance) {\r\n            toast.error(errorFinance);\r\n        }\r\n        if (errorStatistic) {\r\n            toast.error(errorStatistic);\r\n        }\r\n    }, [errorUser, errorCategory, errorFinance, errorStatistic]);\r\n\r\n    return <></>;\r\n};\r\n","import { useSelector } from 'react-redux';\r\n\r\nimport { getName } from '@redux/user/user-selector';\r\nimport { ButtonExit } from '@shared';\r\nimport './headerNav.scss';\r\n\r\nexport const HeaderNav = () => {\r\n    const userName = useSelector(getName);\r\n    return (\r\n        <ul className=\"header_nav__list\">\r\n            <li className=\"header_nav__item\">\r\n                <span className=\"header_nav__text\">{userName}</span>\r\n            </li>\r\n            <li className=\"header_nav__item\">\r\n                <ButtonExit />\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n","import Media from 'react-media';\r\nimport { navList, globalMedia } from '@data';\r\nimport { ItemNav } from '@shared';\r\nimport './navigation.scss';\r\n\r\nexport const Navigation = () => {\r\n    return (\r\n        <ul className=\"nav_list\">\r\n            {navList.map((el, idx) => {\r\n                return (\r\n                    <Media queries={globalMedia} key={idx}>\r\n                        {matches => (\r\n                            <>\r\n                                {matches.medium && el.text === '' ? null : (\r\n                                    <li className=\"nav_list__item\" key={idx}>\r\n                                        <ItemNav\r\n                                            icon={el.icon}\r\n                                            text={el.text}\r\n                                            linkTo={el.linkTo}\r\n                                        />\r\n                                    </li>\r\n                                )}\r\n                            </>\r\n                        )}\r\n                    </Media>\r\n                );\r\n            })}\r\n        </ul>\r\n    );\r\n};\r\n","import { useSelector } from 'react-redux';\r\nimport './balans.scss';\r\nimport { getBalance } from '@redux/finance/finance-selector';\r\n\r\nexport const Balans = () => {\r\n    const balans = useSelector(getBalance);\r\n\r\n    const makeMoney = n => {\r\n        return parseFloat(n)\r\n            .toFixed(2)\r\n            .replace(/(\\d)(?=(\\d{3})+\\.)/g, '$1 ');\r\n    };\r\n\r\n    return (\r\n        <div className=\"balans\">\r\n            <p className=\"balans__title\">Ваш баланс</p>\r\n            <p className=\"balans__order\">&#8372; {makeMoney(balans)}</p>\r\n        </div>\r\n    );\r\n};\r\n","import { HeaderNav } from '@component';\r\nimport { Logo } from '@shared';\r\nimport { Link } from 'react-router-dom';\r\nimport './header.scss';\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <>\r\n            <div className=\"header\">\r\n                <div className=\"container container__header\">\r\n                    <Link to=\"/\" className=\"logo_link\">\r\n                        <Logo />\r\n                    </Link>\r\n                    <HeaderNav />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Datetime from 'react-datetime';\r\nimport {\r\n    getCategoryDebet,\r\n    getCategoryCredit,\r\n} from '@redux/categories/categories-selector';\r\nimport { isSaveModalDateStatic } from '@redux/finance/finance-selector';\r\nimport { getFinanceOpertaion } from '@redux/finance/finance-operation';\r\nimport { closeModalTransaction } from '@redux/finance/finance-slice';\r\nimport 'moment/locale/ru';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport sprite from '@assets/sprite.svg';\r\nimport './modalTransaction.scss';\r\n\r\nimport { validate } from 'indicative/validator';\r\nexport const ModalTransaction = () => {\r\n    const getCredit = useSelector(getCategoryCredit);\r\n    const getDebet = useSelector(getCategoryDebet);\r\n    const pushDate = useSelector(isSaveModalDateStatic);\r\n    const [modalTypeTransaction, setModalTypeTransaction] = useState('income');\r\n    const [date, setDate] = useState(new Date());\r\n    const [category, setCategory] = useState(getDebet[0].name);\r\n    const [idCategory, setIdCategory] = useState(getDebet[0]._id);\r\n    const [listActive, setListActive] = useState(false);\r\n    const [summ, setSumm] = useState('');\r\n    const [comment, setComment] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    function closeModalItem() {\r\n        dispatch(closeModalTransaction());\r\n    }\r\n\r\n    useEffect(() => {\r\n        const backdrop = document.querySelector('#backdrop');\r\n\r\n        function clickBackdrop(e) {\r\n            if (e.target === backdrop) {\r\n                closeModalItem();\r\n            }\r\n        }\r\n\r\n        function pressEsc(e) {\r\n            if (e.code === 'Escape') {\r\n                closeModalItem();\r\n            }\r\n        }\r\n\r\n        document.addEventListener('click', clickBackdrop);\r\n        document.addEventListener('keydown', pressEsc);\r\n\r\n        return function cleanup() {\r\n            document.removeEventListener('click', clickBackdrop);\r\n            document.removeEventListener('keydown', pressEsc);\r\n        };\r\n    }, [closeModalItem]);\r\n    useEffect(() => {\r\n        if (pushDate) {\r\n            closeModalItem();\r\n        }\r\n    }, [pushDate]);\r\n\r\n    function dateChange(e) {\r\n        setDate(e._d);\r\n    }\r\n    function listOpen() {\r\n        setListActive(!listActive);\r\n    }\r\n    function categoryClick(e) {\r\n        setIdCategory(e.target.dataset.id);\r\n        setCategory(e.target.textContent);\r\n        setListActive(!listActive);\r\n    }\r\n\r\n    function switchToggle() {\r\n        if (modalTypeTransaction === 'income') {\r\n            return 'toggleIncome';\r\n        }\r\n        return 'toggleIncomeSwitch';\r\n    }\r\n\r\n    function switchActiveDebet() {\r\n        if (modalTypeTransaction === 'income') {\r\n            const notActiv = 'switchTypeBalance__text';\r\n            const active = 'switchTypeBalance__text__active';\r\n            return `${notActiv} ${active}`;\r\n        }\r\n\r\n        return 'switchTypeBalance__text';\r\n    }\r\n    function switchActive() {\r\n        if (modalTypeTransaction === 'spending') {\r\n            const notActiv = 'switchTypeBalance__text';\r\n            const active = 'switchTypeBalance__text__active';\r\n            return `${notActiv} ${active}`;\r\n        }\r\n\r\n        return 'switchTypeBalance__text';\r\n    }\r\n\r\n    function summInput(e) {\r\n        const number = Number(e.target.value);\r\n        const integer = Number.isInteger(number);\r\n\r\n        if (!integer) {\r\n            const [int, float] = String(number).split('.');\r\n            setSumm(`${int}.${float.slice(0, 2)}`);\r\n            return;\r\n        }\r\n\r\n        setSumm(e.target.value);\r\n    }\r\n\r\n    function commentInput(e) {\r\n        setComment(e.target.value);\r\n    }\r\n\r\n    function switchClickHandler(e) {\r\n        if (!e.target.checked) {\r\n            setModalTypeTransaction('spending');\r\n            setCategory('Виберіть категорію');\r\n            setIdCategory(null);\r\n            return;\r\n        }\r\n        setModalTypeTransaction('income');\r\n        setCategory(getDebet[0].name);\r\n        setIdCategory(getDebet[0]._id);\r\n    }\r\n    const validateSchema = {\r\n        type: 'required|boolean',\r\n        category: 'required|string',\r\n        sum: 'required|number',\r\n        comment: 'string',\r\n        day: 'required|number',\r\n        month: 'required|number',\r\n        year: 'required|number',\r\n    };\r\n    const submitHandler = async e => {\r\n        // async function submitHandler(e) {\r\n        e.preventDefault();\r\n        const modalTransaction = {\r\n            day: date.getDate(),\r\n            month: date.getMonth() + 1,\r\n            year: date.getFullYear(),\r\n            type: modalTypeTransaction === 'income' ? true : false,\r\n            category: idCategory,\r\n            sum: parseFloat(summ),\r\n            comment: comment,\r\n        };\r\n\r\n        try {\r\n            await validate(modalTransaction, validateSchema);\r\n            // closeModalItem();\r\n        } catch (error) {\r\n            console.log(error[0].message);\r\n            toast.error(error[0].message);\r\n            return;\r\n        }\r\n\r\n        dispatch(\r\n            getFinanceOpertaion.addOperation({\r\n                datetime: date,\r\n                income: modalTypeTransaction === 'income' ? true : false,\r\n                category: idCategory,\r\n                comment: comment === '' ? undefined : comment,\r\n                sum: summ,\r\n            }),\r\n        );\r\n    };\r\n    // випадающий список\r\n    function DropMenuActive() {\r\n        if (category !== 'Виберіть категорію') {\r\n            const notActiv = 'dropField';\r\n            const active = 'dropFieldActive';\r\n\r\n            return `${notActiv} ${active}`;\r\n        }\r\n\r\n        return 'dropField';\r\n    }\r\n    const dropListSelectJSX = (\r\n        <div className=\"dropContainer\">\r\n            <div className={DropMenuActive()} onClick={listOpen}>\r\n                <span className=\"categoryDrop\">{category}</span>\r\n            </div>\r\n\r\n            {listActive && (\r\n                <ul className=\"dropList\">\r\n                    {/* категории для доходв */}\r\n                    {modalTypeTransaction === 'income' &&\r\n                        getDebet.map((elem, idx) => {\r\n                            return (\r\n                                <li\r\n                                    onClick={categoryClick}\r\n                                    className=\"dropListItem\"\r\n                                    key={idx}\r\n                                    data-id={elem._id}\r\n                                >\r\n                                    {elem.name}\r\n                                </li>\r\n                            );\r\n                        })}\r\n\r\n                    {/* категории для расхода */}\r\n                    {modalTypeTransaction === 'spending' &&\r\n                        getCredit.map((elem, idx) => {\r\n                            return (\r\n                                <li\r\n                                    onClick={categoryClick}\r\n                                    className=\"dropListItem\"\r\n                                    key={idx}\r\n                                    data-id={elem._id}\r\n                                >\r\n                                    {elem.name}\r\n                                </li>\r\n                            );\r\n                        })}\r\n                </ul>\r\n            )}\r\n\r\n            <span className=\"dropIconModal\">\r\n                <svg className=\"dropIcon\">\r\n                    <use href={`${sprite}#dropItemModal`}></use>\r\n                </svg>\r\n            </span>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"modalContainer\">\r\n            <div className=\"containerClose\" onClick={closeModalItem}>\r\n                <span className=\"itemCloseModal\">\r\n                    <svg className=\"iconCloseBtn\">\r\n                        <use href={`${sprite}#closeModal`}></use>\r\n                    </svg>\r\n                </span>\r\n            </div>\r\n            <h2 className=\"titleText\">Додати Транзакцію</h2>\r\n            <form\r\n                onSubmit={submitHandler}\r\n                id=\"modalTransaction\"\r\n                className=\"modalForm\"\r\n            >\r\n                <div className=\"switchTypeBalance\">\r\n                    <span className={switchActiveDebet()}>Дохід</span>\r\n                    <div className=\"toggleContainerType\">\r\n                        <label\r\n                            className=\"toggleTypeBody\"\r\n                            htmlFor=\"switchType\"\r\n                        ></label>\r\n                        <span className={switchToggle()} id=\"toggle\">\r\n                            <svg className=\"modalBtnPlus\">\r\n                                <use\r\n                                    href={\r\n                                        modalTypeTransaction === 'income'\r\n                                            ? `${sprite}#plusSvg`\r\n                                            : `${sprite}#modalMinus`\r\n                                    }\r\n                                ></use>\r\n                            </svg>\r\n                        </span>\r\n                    </div>\r\n                    <input\r\n                        className=\"switchToggleInput\"\r\n                        onChange={switchClickHandler}\r\n                        name=\"modalTypeTransaction\"\r\n                        type=\"checkbox\"\r\n                        id=\"switchType\"\r\n                        defaultChecked\r\n                    />\r\n                    <span className={switchActive()}>Витрати</span>\r\n                </div>\r\n                {dropListSelectJSX}\r\n                <div className=\"sumContainer\">\r\n                    <input\r\n                        className=\"sumField\"\r\n                        onChange={summInput}\r\n                        value={summ}\r\n                        required\r\n                        min=\"0.00\"\r\n                        step=\"0.01\"\r\n                        type=\"number\"\r\n                        placeholder=\"0.00\"\r\n                    />\r\n                </div>\r\n                <div className=\"calendarContainer\">\r\n                    <Datetime\r\n                        onChange={dateChange}\r\n                        inputProps={{ className: 'calendarField' }}\r\n                        initialValue={date}\r\n                        closeOnSelect={true}\r\n                        timeFormat={false}\r\n                    />\r\n                    <svg className=\"calendarIcon\">\r\n                        <use href={`${sprite}#calendarSvg`}></use>\r\n                    </svg>\r\n                </div>\r\n                <div className=\"commentContainer\">\r\n                    <textarea\r\n                        maxLength=\"200\"\r\n                        className=\"commentField\"\r\n                        placeholder=\"коментар\"\r\n                        onChange={commentInput}\r\n                        value={comment}\r\n                    />\r\n                </div>\r\n                <div className=\"buttonContainer\">\r\n                    <button className=\"submitButton\" type=\"submit\">\r\n                        Додати\r\n                    </button>\r\n                    <button className=\"cancelButton\" onClick={closeModalItem}>\r\n                        Скасувати\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport './Backdrop.scss';\r\n\r\nexport const Backdrop = ({ children }) => {\r\n    const modalRoot = document.querySelector('#modalroot');\r\n    return createPortal(\r\n        <div id=\"backdrop\" className=\"backdrop\">\r\n            {children}\r\n        </div>,\r\n        modalRoot,\r\n    );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/Frame.5d52b14d.png\";","import React from 'react'\r\nimport './registrationsForm.scss'\r\nimport zxcvbn from 'zxcvbn';\r\n\r\n\r\nexport function PasswordIndicator({ show, password }) {\r\n   const progress = zxcvbn(password);\r\n   const key = progress.score * 100 / 4\r\n\r\n   const getPasswordStrength = () => {\r\n\r\n      switch (progress.score) {\r\n         case 0:\r\n            return 'red'\r\n         case 1:\r\n            return '#f44336'\r\n         case 2:\r\n            return '#ffed3b'\r\n         case 3:\r\n            return '#9bc158'\r\n         case 4:\r\n            return '#4caf50'\r\n\r\n\r\n         default:\r\n            return 'none'\r\n      }\r\n   }\r\n\r\n\r\n\r\n   const changePasswordColor = () => ({\r\n      width: `${key}%`,\r\n      backgroundColor: getPasswordStrength()\r\n   })\r\n\r\n   return (\r\n      <>\r\n         {show && (<span className='form__strength' style={changePasswordColor()}\r\n         />)}\r\n      </>\r\n   )\r\n}\r\n","import { useDispatch } from 'react-redux';\r\nimport { userOperation } from '../../redux/user/user-operation';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport './registrationsForm.scss'\r\nimport { Logo } from '../shared/logo';\r\nimport Frame from '../../assets/img/tablet/Frame.png';\r\nimport sprite from '../../assets/sprite.svg';\r\nimport { Link } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport { PasswordIndicator } from './PasswordIndicator';\r\nimport { isErrorUser } from '@redux/user/user-selector';\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nexport const RegistrationForm = () => {\r\n   const dispatch = useDispatch();\r\n   const [type, setType] = useState('password');\r\n   const [showLine, setShowLine] = useState(false);\r\n   const errorUser = useSelector(isErrorUser);\r\n\r\n   useEffect(() => {\r\n      if (errorUser) {\r\n         toast.error(errorUser);\r\n      }\r\n   }, [errorUser]);\r\n   const showHiden = (e) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      let currentType = type === 'password' ? 'input' : 'password'\r\n      setType(currentType);\r\n   }\r\n\r\n\r\n\r\n   return (\r\n      <section className='register'>\r\n         <div className='container__img'>\r\n            <div className='position'>\r\n               <img className=\"img\" src={Frame} alt=\"\" />\r\n               <h1 className='title'>Finance App</h1>\r\n            </div>\r\n         </div>\r\n\r\n         <Formik\r\n            initialValues={{\r\n               email: '',\r\n               password: '',\r\n               confirmPassword: '',\r\n               name: '',\r\n            }}\r\n\r\n\r\n            //відправляємо дані на сервер\r\n            onSubmit={({ name, email, password }, { resetForm }) => {\r\n               const user = { name, email, password }\r\n\r\n               dispatch(userOperation.register(user));\r\n               resetForm({ values: '' });\r\n            }}\r\n\r\n\r\n            //валідація форми\r\n            validationSchema={Yup.object().shape({\r\n               email: Yup.string().email().min(10).max(63).required('Обов\\'язкове поле'),\r\n               password: Yup.string()\r\n                  .required('Обов\\'язкове поле')\r\n                  .min(6, 'Пароль занадто короткий (мінімум 6 символів)')\r\n                  .max(16, 'Пароль занадто довгий (максимум 16 символів)'),\r\n               confirmPassword: Yup.string()\r\n                  .required('Обов\\'язкове поле')\r\n                  .oneOf(\r\n                     [Yup.ref('password'), null],\r\n                     'Паролі не співпадають',\r\n                  ),\r\n               name: Yup.string().min(\r\n                  1,\r\n                  'Ім\\'я не може бути порожнім',\r\n               )\r\n                  .max(12, 'Ім\\'я не може бути більше 12 символів')\r\n                  .required('Обов\\'язкове поле'),\r\n            })}\r\n         >\r\n            {props => {\r\n               const {\r\n                  values,\r\n                  touched,\r\n                  errors,\r\n                  isSubmitting,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  handleSubmit,\r\n               } = props;\r\n               return (\r\n\r\n                  <div className=\"form__filter\">\r\n\r\n\r\n                     {/* //Форма для реєстрації */}\r\n                     <form className='form' onSubmit={handleSubmit}>\r\n\r\n                        {/* //Логотип */}\r\n                        <div className='form__logo'>\r\n                           <Logo />\r\n                        </div>\r\n\r\n\r\n                        {/* //Поле для вводу емейла */}\r\n                        <label className=\"form__label\">\r\n                           {errors.email && touched.email && errors.email}\r\n                           <svg className=\"form__icon\">\r\n                              <use href={`${sprite}#email`}></use>\r\n                           </svg>\r\n                           <input\r\n                              className=\"form__input\"\r\n                              type=\"email\"\r\n                              name=\"email\"\r\n                              placeholder=\"E-mail\"\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                              value={values.email}\r\n                           />\r\n                        </label>\r\n\r\n\r\n\r\n                        {/* //Поле для вводу пароля */}\r\n                        <label className=\"form__label\">\r\n                           {errors.password &&\r\n                              touched.password &&\r\n                              errors.password}\r\n                           <svg className=\"form__icon\">\r\n                              <use href={`${sprite}#password`}></use>\r\n                           </svg>\r\n                           <input\r\n                              className=\"form__input\"\r\n                              type={type}\r\n                              name=\"password\"\r\n                              placeholder=\"Пароль\"\r\n                              onChange={handleChange}\r\n                              // onKeyUp={strength}\r\n                              onFocus={() => setShowLine(true)}\r\n                              onBlur={handleBlur}\r\n                              value={values.password}\r\n                           />\r\n                           <span className='form__show' onClick={showHiden}>\r\n                              {type === 'input' ? \"HIDE\" : 'SHOW'}\r\n                           </span>\r\n\r\n                        </label>\r\n\r\n\r\n\r\n\r\n                        {/* //Поле для вводу пароля підтвердження */}\r\n                        <label className=\"form__label\">\r\n                           {errors.confirmPassword &&\r\n                              touched.confirmPassword &&\r\n                              errors.confirmPassword}\r\n                           <svg className=\"form__icon\">\r\n                              <use href={`${sprite}#password`}></use>\r\n                           </svg>\r\n                           <input\r\n                              className=\"form__input\"\r\n                              type=\"password\"\r\n                              name=\"confirmPassword\"\r\n                              placeholder=\"Підтвердити пароль\"\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                              value={values.confirmPassword}\r\n                           />\r\n                           <PasswordIndicator show={showLine} password={values.password} />\r\n                        </label>\r\n\r\n\r\n\r\n                        {/* //Поле для вводу імені */}\r\n                        <label className=\"form__label\">\r\n                           {errors.name && touched.name && errors.name}\r\n                           <svg className=\"form__icon\">\r\n                              <use href={`${sprite}#name`}></use>\r\n                           </svg>\r\n                           <input\r\n                              className=\"form__input\"\r\n                              type=\"name\"\r\n                              name=\"name\"\r\n                              placeholder=\"Ваше імя\"\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                              value={values.name}\r\n                           />\r\n                        </label>\r\n\r\n\r\n\r\n                        {/* //Кнопка для відправки даних */}\r\n                        <button\r\n                           type=\"submit\"\r\n                           disabled={isSubmitting}\r\n                           className=\"form__button form__button--active\"\r\n                        >\r\n                           РЕЄСТРАЦІЯ\r\n                        </button>\r\n\r\n                        {/* //Перехід на сторінку входу */}\r\n                        <Link to='/login' className='form__button'>\r\n                           ВХІД\r\n                        </Link>\r\n                     </form>\r\n                  </div>\r\n               );\r\n            }}\r\n         </Formik>\r\n\r\n      </section >\r\n   );\r\n};\r\n","import { useDispatch } from 'react-redux';\r\nimport React, { useEffect } from 'react';\r\nimport './ModalLogout.scss';\r\nimport { userOperation } from '@redux/user/user-operation';\r\nimport { closeModalLogout } from '@redux/user/user-slice';\r\n\r\nexport const ModalLogout = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    function closeLogoutModal() {\r\n        dispatch(closeModalLogout());\r\n    }\r\n\r\n    useEffect(() => {\r\n        const backdrop = document.querySelector('#backdrop');\r\n\r\n        function clickBackdrop(e) {\r\n            if (e.target === backdrop) {\r\n                closeLogoutModal();\r\n            }\r\n        }\r\n\r\n        function pressEsc(e) {\r\n            if (e.code === 'Escape') {\r\n                closeLogoutModal();\r\n            }\r\n        }\r\n\r\n        document.addEventListener('click', clickBackdrop);\r\n        document.addEventListener('keydown', pressEsc);\r\n\r\n        return function cleanup() {\r\n            document.removeEventListener('click', clickBackdrop);\r\n            document.removeEventListener('keydown', pressEsc);\r\n        };\r\n    }, [closeLogoutModal]);\r\n\r\n    return (\r\n        <div className=\"containerLogout\">\r\n            <p className=\"textLogout\">Ви впевненні?</p>\r\n            <div>\r\n                <button\r\n                    className=\"btnLogout\"\r\n                    type=\"button\"\r\n                    onClick={() => dispatch(userOperation.logout())}\r\n                >\r\n                    <span>Вийти</span>\r\n                </button>\r\n                <button className=\"btnLogout\" onClick={closeLogoutModal}>\r\n                    Скасувати\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/tabletMan.c98d6b49.svg\";","import * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { userOperation } from '../../redux/user/user-operation';\r\nimport { Logo } from '../shared/logo';\r\n\r\nimport sprite from '../../assets/sprite.svg';\r\nimport imgMan from '../../assets/img/tablet/tabletMan.svg';\r\n\r\nimport './loginForm.scss';\r\n\r\nexport const LoginForm = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"login_img_container\">\r\n                <img className=\"login_img\" src={imgMan} alt=\"\" width=\"435px\" />\r\n                <h1>Finance App</h1>\r\n            </div>\r\n\r\n            <Formik\r\n                initialValues={{ email: '', password: '' }}\r\n                onSubmit={({ email, password }) => {\r\n                    dispatch(userOperation.login({ email, password }));\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    email: Yup.string()\r\n                        .email()\r\n                        .required('Обов' + \"'\" + 'язкове поле'),\r\n                    password: Yup.string().required(\r\n                        'Обов' + \"'\" + 'язкове поле',\r\n                    ),\r\n                })}\r\n            >\r\n                {props => {\r\n                    const {\r\n                        values,\r\n                        touched,\r\n                        errors,\r\n                        isSubmitting,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        handleSubmit,\r\n                    } = props;\r\n\r\n                    return (\r\n                        <div className=\"form_bg_filter\">\r\n                            <form\r\n                                onSubmit={handleSubmit}\r\n                                className=\"login_form\"\r\n                            >\r\n                                <div className=\"login_form__logo\">\r\n                                    <Logo />\r\n                                </div>\r\n                                <label className=\"login_form__label\">\r\n                                    {errors.email && touched.email && (\r\n                                        <div className=\"input-feedback\">\r\n                                            {errors.email}\r\n                                        </div>\r\n                                    )}\r\n                                    <svg className=\"login_form__icon\">\r\n                                        <use href={`${sprite}#email`}></use>\r\n                                    </svg>\r\n                                    <input\r\n                                        className=\"login_form__input\"\r\n                                        id=\"email\"\r\n                                        placeholder=\" E-mail\"\r\n                                        type=\"email\"\r\n                                        value={values.email}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                    />\r\n                                </label>\r\n\r\n                                <label className=\"login_form__label\">\r\n                                    {errors.password && touched.password && (\r\n                                        <div className=\"input-feedback\">\r\n                                            {errors.password}\r\n                                        </div>\r\n                                    )}\r\n                                    <svg className=\"login_form__icon\">\r\n                                        <use href={`${sprite}#password`}></use>\r\n                                    </svg>\r\n                                    <input\r\n                                        className=\"login_form__input\"\r\n                                        id=\"password\"\r\n                                        placeholder=\"Пароль\"\r\n                                        type=\"password\"\r\n                                        value={values.password}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                    />\r\n                                </label>\r\n\r\n                                <button\r\n                                    className=\"login_form__btn login_form__btn--current  \"\r\n                                    type=\"submit\"\r\n                                    disabled={isSubmitting}\r\n                                >\r\n                                    <span>Вхід</span>\r\n                                </button>\r\n\r\n                                <Link\r\n                                    to=\"/register\"\r\n                                    className=\"login_form__btn login_form__btn_color\"\r\n                                >\r\n                                    <span>Реєстрація</span>\r\n                                </Link>\r\n                            </form>\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        </section>\r\n    );\r\n};\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { registerAPI, loginAPI, logoutAPI, getUserAPI } from '@api';\r\n\r\nconst login = createAsyncThunk('login', async data => {\r\n    const result = await loginAPI(data);\r\n    return result;\r\n});\r\n\r\nconst register = createAsyncThunk('register', async data => {\r\n    const result = await registerAPI(data);\r\n    return result;\r\n});\r\n\r\nconst logout = createAsyncThunk('logout', async () => {\r\n    const result = await logoutAPI();\r\n    return result;\r\n});\r\n\r\nconst currentUser = createAsyncThunk('current', async token => {\r\n    const result = await getUserAPI(token);\r\n    console.dir(result);\r\n    console.log(result);\r\n    return result;\r\n});\r\n\r\nexport const userOperation = { login, register, logout, currentUser };\r\n","export default __webpack_public_path__ + \"static/media/sprite.da5a518e.svg\";","export class HttpError extends Error {\r\n    constructor(message, status) {\r\n        super(message);\r\n        this.status = status;\r\n    }\r\n}\r\n","import axios from 'axios';\r\nimport { HttpError } from '../error';\r\naxios.defaults.baseURL = 'https://wallet-serv.herokuapp.com/api';\r\n\r\nconst setAxiosToken = token => {\r\n    if (token) {\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    } else {\r\n        axios.defaults.headers.common.Authorization = '';\r\n    }\r\n};\r\n\r\nconst getError = error => {\r\n    if (error.response) {\r\n        throw new HttpError(error.response.data.message, error.response.status);\r\n    } else if (error.request) {\r\n        throw new HttpError(error.request.statusText, error.request.status);\r\n    } else {\r\n        throw new HttpError(error.message, 500);\r\n    }\r\n};\r\n\r\n//  ----------------   USER   -----------------------\r\n\r\nexport const registerAPI = async user => {\r\n    try {\r\n        const result = await axios.post('auth/register', {\r\n            userName: user.name,\r\n            email: user.email,\r\n            password: user.password,\r\n        });\r\n        setAxiosToken(result.data.data.token);\r\n        return result.data.data;\r\n    } catch (error) {\r\n        getError(error);\r\n    }\r\n};\r\n\r\nexport const loginAPI = async user => {\r\n    try {\r\n        const result = await axios.post('auth/login', user);\r\n        setAxiosToken(result.data.data.token);\r\n        return result.data.data;\r\n    } catch (error) {\r\n        console.dir(error);\r\n        getError(error);\r\n    }\r\n};\r\n\r\nexport const logoutAPI = async () => {\r\n    try {\r\n        await axios.get('auth/logout');\r\n        setAxiosToken();\r\n        return { status: 'ok', code: 204 };\r\n    } catch (error) {\r\n        getError(error);\r\n    }\r\n};\r\n\r\nexport const getUserAPI = async token => {\r\n    try {\r\n        setAxiosToken(token);\r\n        const result = await axios.get('users/current');\r\n        return result.data.data.user;\r\n    } catch (error) {\r\n        getError(error);\r\n    }\r\n};\r\n\r\n// -------------  Category  --------------------------\r\n\r\nexport const getCategoryAPI = async () => {\r\n    try {\r\n        const resultD = await axios.get('categories/income');\r\n        const resultC = await axios.get('categories/expense');\r\n        return [...resultC.data.categories, ...resultD.data.categories];\r\n    } catch (error) {\r\n        getError(error);\r\n    }\r\n};\r\n\r\n// ------------ Statistic ----------------------------\r\n\r\nexport const getStatisticAPI = async ({ month, year }) => {\r\n    try {\r\n        const query = `${month || year ? '?' : null}${\r\n            month ? `month=${month}` : null\r\n        }${month && year ? '&' : null}${year ? `year=${year}` : null}`;\r\n\r\n        const result = await axios.get(`transactions/statistics${query}`);\r\n        return result.data.transactions;\r\n    } catch (error) {\r\n        getError(error);\r\n    }\r\n};\r\n\r\n// ------------  Finance (operations) ----------------------------\r\n\r\nexport const getOperationsAPI = async data => {\r\n    try {\r\n        let query = '';\r\n        if (data) {\r\n            query = `transactions?page=${data.page}&limit=${data.limit}`;\r\n        } else {\r\n            query = `transactions`;\r\n        }\r\n        const result = await axios.get(query);\r\n        return result.data.data;\r\n    } catch (error) {\r\n        getError(error);\r\n    }\r\n};\r\n\r\nexport const addTransactionAPI = async data => {\r\n    try {\r\n        const result = await axios.post('transactions', data);\r\n        return result.data.data.transaction;\r\n    } catch (error) {\r\n        getError(error);\r\n    }\r\n};\r\n","export const isAuth = state => state.user.isAuth;\r\n\r\nexport const isToken = state => (state.user.token ? true : false);\r\n\r\nexport const getToken = state => state.user.token;\r\n\r\nexport const isLoading = state => state.user.isLoading;\r\n\r\nexport const isErrorUser = state => state.user.error;\r\n\r\nexport const isModalLogout = state => state.user.isModalLogout;\r\n\r\nexport const getName = state => state.user.user.name;\r\n\r\nexport const getUser = state => state.user.user;\r\n\r\nexport const getBalance = state => state.user.user.balance;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const clear = createAction('clear');\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { getOperationsAPI, addTransactionAPI } from '@api';\r\n\r\nconst getOperations = createAsyncThunk('getOperations', async data => {\r\n    const result = await getOperationsAPI(data);\r\n    return result;\r\n});\r\n\r\nconst addOperation = createAsyncThunk('addOperation', async data => {\r\n    const result = await addTransactionAPI(data);\r\n    return result;\r\n});\r\n\r\nexport const getFinanceOpertaion = { getOperations, addOperation };\r\n","export const globalMedia = {\r\n    small: '(max-width: 767px)',\r\n    medium: '(min-width: 768px)',\r\n    mediumOnly: '(min-width: 768px) and (max-width: 1199px)',\r\n    large: '(min-width: 1200px)',\r\n};\r\n","export const navList = [\r\n    { icon: 'home', text: 'Головна', linkTo: '/home' },\r\n    { icon: 'statistic', text: 'Статистика', linkTo: '/diagram' },\r\n    { icon: 'currency', text: '', linkTo: '/currency' },\r\n];\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nimport { userOperation } from './user-operation';\r\nimport { clear } from '../global/global-action';\r\n\r\nconst initialState = {\r\n    user: {},\r\n    token: null,\r\n    isAuth: false,\r\n    isModalLogout: false,\r\n    isLoading: false,\r\n    error: null,\r\n};\r\n\r\nconst userSlice = createSlice({\r\n    name: 'user',\r\n    initialState,\r\n    reducers: {\r\n        openModalLogout: state => {\r\n            state.isModalLogout = true;\r\n        },\r\n        closeModalLogout: state => {\r\n            state.isModalLogout = false;\r\n        },\r\n    },\r\n    extraReducers: {\r\n        [userOperation.register.pending]: state => {\r\n            state.isLoading = true;\r\n            state.error = null;\r\n            state.isAuth = false;\r\n        },\r\n        [userOperation.register.fulfilled]: (state, { payload }) => {\r\n            state.user.name = payload.user.userName;\r\n            state.user.email = payload.user.email;\r\n            state.token = payload.token;\r\n            state.isAuth = true;\r\n            state.isLoading = false;\r\n        },\r\n        [userOperation.register.rejected]: (state, { error }) => {\r\n            state.isLoading = false;\r\n            state.error = error.message;\r\n        },\r\n\r\n        [userOperation.login.pending]: state => {\r\n            state.isLoading = true;\r\n            state.error = null;\r\n            state.isAuth = false;\r\n        },\r\n\r\n        [userOperation.login.fulfilled]: (state, { payload }) => {\r\n            console.log(payload);\r\n            state.user.name = payload.user.userName;\r\n            state.user.email = payload.user.email;\r\n            state.token = payload.token;\r\n            state.isAuth = true;\r\n            state.isLoading = false;\r\n        },\r\n\r\n        [userOperation.login.rejected]: (state, { error }) => {\r\n            state.isLoading = false;\r\n            state.error = error.message;\r\n        },\r\n\r\n        [userOperation.logout.pending]: state => {\r\n            state.isLoading = true;\r\n            state.error = null;\r\n        },\r\n        [userOperation.logout.fulfilled]: (state, { payload }) => {\r\n            state.user = {};\r\n            state.token = null;\r\n            state.isAuth = false;\r\n            state.isLoading = false;\r\n            state.isModalLogout = false;\r\n        },\r\n        [userOperation.logout.rejected]: (state, { error }) => {\r\n            state.isLoading = false;\r\n            state.error = error.message;\r\n        },\r\n        [userOperation.currentUser.pending]: state => {\r\n            state.isLoading = true;\r\n            state.error = null;\r\n        },\r\n        [userOperation.currentUser.fulfilled]: (state, { payload }) => {\r\n            state.user.name = payload.userName;\r\n            state.user.email = payload.email;\r\n            state.user.balance = payload.balance;\r\n            state.isAuth = true;\r\n            state.isLoading = false;\r\n        },\r\n        [userOperation.currentUser.rejected]: (state, { error }) => {\r\n            // if (error.code === 'ERR_BAD_REQUEST') {\r\n            state.token = null;\r\n            state.isAuth = false;\r\n            // }\r\n            state.isLoading = false;\r\n            state.error = error.message;\r\n        },\r\n        [clear]: state => {\r\n            state.user = {};\r\n            state.token = null;\r\n            state.isAuth = false;\r\n            state.isModalLogout = false;\r\n            state.isLoading = false;\r\n            state.error = null;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { openModalLogout, closeModalLogout } = userSlice.actions;\r\nexport default userSlice;\r\n","export const getOperations = state => {\r\n    return state.finance.data;\r\n};\r\n\r\nexport const getBalance = state => state.finance.userBalance;\r\n\r\nexport const isLoading = state => state.finance.isLoading;\r\n\r\nexport const isModalTransaction = state => state.finance.isModalAddTransaction;\r\n\r\nexport const isSaveModalDateStatic = state =>\r\n    state.finance.isSaveModalDateStatic;\r\n\r\nexport const isErrorFinance = state => state.finance.error;\r\n\r\nexport const getParamPage = state => ({\r\n    total: state.finance.total,\r\n    currentPage: state.finance.currentPage,\r\n    totalPage: state.finance.totalPage,\r\n    limit: state.finance.limit,\r\n});\r\n","import sprite from '@assets/sprite.svg';\r\nimport './logo.scss';\r\n\r\nexport const Logo = () => {\r\n    return (\r\n        <div className=\"logo\">\r\n            <svg className=\"logo_icon\">\r\n                <use href={`${sprite}#wallet`}></use>\r\n            </svg>\r\n            <p className=\"logo_text\">Wallet</p>\r\n        </div>\r\n    );\r\n};\r\n","import './spinnerLoader.scss';\r\n\r\nfunction LoaderRoket() {\r\n    return <div className=\"loader\">Loading...</div>;\r\n}\r\nexport default LoaderRoket;\r\n","import { Navigate } from 'react-router-dom';\r\n\r\nexport const withAuth = (isAuth, Component) => {\r\n    if (isAuth) {\r\n        return Component ? Component : <Navigate to=\"/home\" />;\r\n    } else {\r\n        return <Navigate to=\"/login\" />;\r\n    }\r\n};\r\n","import { lazy, Suspense, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Route, Routes } from 'react-router-dom';\r\n\r\n// import { Dashboard, RegistrationPage, LoginPage } from '@pages';\r\nimport { Error } from '@component';\r\nimport Loader from '@component/spinnerLoader/spinnerLoader';\r\nimport { withAuth } from '@hoc/withAuth';\r\n\r\nimport { isAuth, isToken, getToken } from '@redux/user/user-selector';\r\nimport { userOperation } from '@redux/user/user-operation';\r\nimport { clear } from '@redux/global/global-action';\r\n\r\nconst Dashboard = lazy(() => import('./pages/dashboard'));\r\nconst RegistrationPage = lazy(() => import('./pages/registration'));\r\nconst LoginPage = lazy(() => import('./pages/login'));\r\n\r\nfunction App() {\r\n    const dispatch = useDispatch();\r\n    const isUserToken = useSelector(isToken);\r\n    const isUserAuth = useSelector(isAuth);\r\n    const token = useSelector(getToken);\r\n\r\n    useEffect(() => {\r\n        if (isUserToken && !isUserAuth) {\r\n            dispatch(userOperation.currentUser(token));\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        console.log('Use effect in app', isUserAuth);\r\n        if (!isUserAuth && !isUserToken) {\r\n            dispatch(clear());\r\n        }\r\n    }, [isUserAuth, isUserToken]);\r\n\r\n    return (\r\n        <>\r\n            <Suspense fallback={<Loader />}>\r\n                {isUserAuth === isUserToken && (\r\n                    <Routes>\r\n                        <Route path=\"login\" element={<LoginPage />} />\r\n                        <Route path=\"register\" element={<RegistrationPage />} />\r\n\r\n                        <Route path=\"/\" element={withAuth(isUserAuth)} />\r\n                        <Route\r\n                            path=\"/*\"\r\n                            element={withAuth(isUserAuth, <Dashboard />)}\r\n                        />\r\n                    </Routes>\r\n                )}\r\n                <Error />\r\n            </Suspense>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nimport { categoriesOperation } from './categories-operation';\r\nimport { clear } from '../global/global-action';\r\n\r\nconst initialState = {\r\n    data: [],\r\n    isLoading: false,\r\n    error: null,\r\n};\r\n\r\nconst categoriesSlice = createSlice({\r\n    name: 'categories',\r\n    initialState,\r\n    extraReducers: {\r\n        [categoriesOperation.getCategories.pending]: state => {\r\n            state.isLoading = true;\r\n            state.error = null;\r\n        },\r\n        [categoriesOperation.getCategories.fulfilled]: (state, { payload }) => {\r\n            state.data = [...payload];\r\n            state.isLoading = false;\r\n        },\r\n        [categoriesOperation.getCategories.rejected]: (state, { error }) => {\r\n            state.isLoading = false;\r\n            state.error = error.message;\r\n        },\r\n        [clear]: state => {\r\n            state.data = [];\r\n            state.isLoading = false;\r\n            state.error = null;\r\n        },\r\n    },\r\n});\r\n\r\nexport default categoriesSlice;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nimport { statisticOperation } from './statistic-operation';\r\nimport { clear } from '../global/global-action';\r\n\r\nconst initialState = {\r\n    data: [],\r\n    isLoading: false,\r\n    error: null,\r\n};\r\n\r\nconst statisticSlice = createSlice({\r\n    name: 'statistic',\r\n    initialState,\r\n    extraReducers: {\r\n        [statisticOperation.getStatistic.pending]: state => {\r\n            state.isLoading = true;\r\n            state.error = null;\r\n        },\r\n        [statisticOperation.getStatistic.fulfilled]: (state, { payload }) => {\r\n            state.data = [...payload];\r\n            state.isLoading = false;\r\n        },\r\n        [statisticOperation.getStatistic.rejected]: (state, { error }) => {\r\n            state.isLoading = false;\r\n            state.error = error.message;\r\n        },\r\n        [clear]: state => {\r\n            state.data = [];\r\n            state.isLoading = false;\r\n            state.error = null;\r\n        },\r\n    },\r\n});\r\n\r\nexport default statisticSlice;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist';\r\nimport logger from 'redux-logger';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport categorySlice from './categories/categories-slice';\r\nimport statisticSlice from './statistic/statistic-slice';\r\nimport userSlice from './user/user-slice';\r\nimport financeSlice from './finance/finance-slice';\r\n\r\nconst persistConfig = {\r\n    key: 'user',\r\n    storage,\r\n    whitelist: ['token'],\r\n};\r\n\r\nconst userReducer = persistReducer(persistConfig, userSlice.reducer);\r\n\r\nconst middleware = getDefaultMiddleware => [\r\n    ...getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n        },\r\n    }),\r\n    logger,\r\n];\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        [userSlice.name]: userReducer,\r\n        [categorySlice.name]: categorySlice.reducer,\r\n        [statisticSlice.name]: statisticSlice.reducer,\r\n        [financeSlice.name]: financeSlice.reducer,\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistedStore = persistStore(store);\r\n\r\nexport const rootStore = { store, persistedStore };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport '@style/style.scss';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport App from '@root/App';\r\nimport { rootStore } from '@redux/store';\r\nimport 'react-datetime/css/react-datetime.css';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={rootStore.store}>\r\n            <PersistGate loader={null} persistor={rootStore.persistedStore}>\r\n                <BrowserRouter>\r\n                    <App />\r\n                    <ToastContainer />\r\n                </BrowserRouter>\r\n            </PersistGate>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n","export const isLoadingCategories = state => state.categories.isLoading;\r\n\r\nexport const isCategoriesFull = state =>\r\n    state.categories.data.length > 0 ? true : false;\r\n\r\nexport const getCategoryDebet = state =>\r\n    state.categories.data.filter(el => el.income);\r\n\r\nexport const getCategoryCredit = state =>\r\n    state.categories.data.filter(el => !el.income);\r\n\r\nexport const isErrorCategory = state => state.categories.error;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nimport { getFinanceOpertaion } from './finance-operation';\r\nimport { clear } from '../global/global-action';\r\n\r\nconst initialState = {\r\n    data: [],\r\n    userBalance: 0,\r\n    isLoading: false,\r\n    error: null,\r\n    isModalAddTransaction: false,\r\n    isSaveModalDateStatic: false,\r\n    total: 0,\r\n    currentPage: 1,\r\n    totalPage: 1,\r\n    limit: 5,\r\n};\r\n\r\nconst financeSlice = createSlice({\r\n    name: 'finance',\r\n    initialState,\r\n    reducers: {\r\n        openModalTransaction: state => {\r\n            state.isModalAddTransaction = true;\r\n        },\r\n        closeModalTransaction: state => {\r\n            state.isModalAddTransaction = false;\r\n        },\r\n        setSaveModalDateStatic: state => {\r\n            state.isSaveModalDateStatic = true;\r\n        },\r\n        clearSaveModalDateStatic: state => {\r\n            state.isSaveModalDateStatic = false;\r\n        },\r\n        setLimit: (state, { payload }) => {\r\n            state.limit = payload;\r\n        },\r\n    },\r\n    extraReducers: {\r\n        [getFinanceOpertaion.getOperations.pending]: state => {\r\n            state.isLoading = true;\r\n            state.error = null;\r\n        },\r\n        [getFinanceOpertaion.getOperations.fulfilled]: (state, { payload }) => {\r\n            state.data = [...payload.transactions];\r\n            state.userBalance = payload.user_balance;\r\n            if (payload.page) {\r\n                state.currentPage = payload.page;\r\n            }\r\n            if (payload.totalPage) {\r\n                state.totalPage = payload.totalPage;\r\n            }\r\n            if (payload.total) {\r\n                state.total = payload.total;\r\n            }\r\n            state.isLoading = false;\r\n        },\r\n        [getFinanceOpertaion.getOperations.rejected]: (state, { error }) => {\r\n            state.isLoading = false;\r\n            state.error = error.message;\r\n        },\r\n\r\n        [getFinanceOpertaion.addOperation.pending]: state => {\r\n            state.isLoading = true;\r\n            state.error = null;\r\n        },\r\n        [getFinanceOpertaion.addOperation.fulfilled]: (state, { payload }) => {\r\n            state.data = [payload, ...state.data];\r\n            state.isLoading = false;\r\n            state.isSaveModalDateStatic = true;\r\n        },\r\n        [getFinanceOpertaion.addOperation.rejected]: (state, { error }) => {\r\n            state.isLoading = false;\r\n            state.error = error.message;\r\n        },\r\n        [clear]: state => {\r\n            state.data = [];\r\n            state.userBalance = 0;\r\n            state.currentPage = 1;\r\n            state.total = 0;\r\n            state.totalPage = 1;\r\n            state.limit = 5;\r\n            state.isModalAddTransaction = false;\r\n            state.isSaveModalDateStatic = false;\r\n            state.isLoading = false;\r\n            state.error = null;\r\n        },\r\n    },\r\n});\r\n\r\nexport const {\r\n    openModalTransaction,\r\n    closeModalTransaction,\r\n    setSaveModalDateStatic,\r\n    clearSaveModalDateStatic,\r\n    setLimit,\r\n} = financeSlice.actions;\r\nexport default financeSlice;\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { getCategoryAPI } from '@api';\r\n\r\nconst getCategories = createAsyncThunk('getCategories', async () => {\r\n    const result = await getCategoryAPI();\r\n    return result;\r\n});\r\n\r\nexport const categoriesOperation = { getCategories };\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { getStatisticAPI } from '@api';\r\n\r\nconst getStatistic = createAsyncThunk('getStatistic', async data => {\r\n    const result = await getStatisticAPI(data);\r\n    return result;\r\n});\r\nexport const statisticOperation = { getStatistic };\r\n"],"sourceRoot":""}