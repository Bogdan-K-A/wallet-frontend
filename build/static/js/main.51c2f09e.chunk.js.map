{"version":3,"sources":["redux/user/user-selector.js","assets/sprite.svg","component/shared/logo/Logo.js","services/api/index.js","redux/user/user-operation.js","redux/user/user-slice.js","data/media.js","data/navigation.js","component/shared/buttonExit/ButtonExit.js","component/shared/itemNav/ItemNav.js","component/headerNav/HeaderNav.js","component/navigation/Navigation.js","component/balans/Balans.js","component/header/Header.js","component/modalTransaction/ModalTransaction.js","component/backdrop/Backdrop.js","services/currencyApi.js","assets/constants.js","component/currency/Currency.jsx","redux/finance/finance-operation.js","redux/finance/finance-selector.js","component/homeTabItemMobile/homeTabItemMobile.jsx","component/homeTabItemTabletAndDesktop/homeTabItemTabletAndDesktop.jsx","component/homeTabList/HomeTabList.jsx","component/homeTab/HomeTab.jsx","component/buttonClose/buttonClose.js","redux/categories/categories-operation.js","redux/statistic/statistic-operation.js","redux/finance/finance-slice.js","redux/categories/categories-selector.js","pages/dashboard/Dashboard.js","component/loginForm/LoginForm.js","pages/login/LoginPage.js","component/spinnerLoader/spinnerLoader.js","services/hoc/withAuth.js","App.js","redux/categories/categories-slice.js","redux/statistic/statistic-slice.js","redux/store.js","index.js"],"names":["isAuth","state","user","isToken","token","isLoading","error","isModalLogout","getName","name","getBalance","balance","Logo","className","href","sprite","axios","defaults","baseURL","tempData","categories","id","income","transaction","categoryId","sum","comment","datetime","Date","now","month","year","email","password","statistic","category","operations","date","loginAPI","Error","login","createAsyncThunk","data","a","result","register","userOperation","logout","status","code","currentUser","userSlice","createSlice","initialState","reducers","openModalLogout","closeModalLogout","extraReducers","pending","fulfilled","payload","rejected","message","actions","globalMedia","small","medium","mediumOnly","large","navList","icon","text","linkTo","ButtonExit","dispatch","useDispatch","onClick","queries","matches","ItemNav","isActive","to","HeaderNav","userName","useSelector","Navigation","map","el","idx","Balans","n","balans","parseFloat","toFixed","replace","Header","ModalTransaction","useState","modalTypeTransaction","setModalTypeTransaction","setDate","setCategory","listActive","setListActive","categoryClick","e","target","textContent","preventDefault","dropListSelectJSX","DropMenuActive","onSubmit","switchActiveDebet","htmlFor","onChange","checked","type","defaultChecked","switchActive","required","min","step","placeholder","console","log","_d","inputProps","initialValue","closeOnSelect","timeFormat","Backdrop","children","modalRoot","document","querySelector","createPortal","fetch","response","json","fetchCurrency","currencies","CurrencyTable","currency","setCurrency","useEffect","currencyApi","filteredCurrencies","forEach","element","parseInt","buy","ccy","push","Number","sale","localStorage","setItem","JSON","stringify","currencyLS","parse","getItem","currencyTime","item","getOperations","getFinanceOpertaion","addOperation","finance","isModalTransaction","isModalAddTransaction","homeTabItemMobile","operation","moment","format","homeTabItemTabletAndDesktop","index","HomeTabList","HomeTab","length","ButtonClose","categoriesOperation","getCategories","getStatistic","statisticOperation","financeSlice","openModalTransaction","closeModalTransaction","isCategoriesFull","Dashboard","isCategories","isOpenModalTransaction","isOpenModalLogout","onOpenModalTransaction","path","LoginForm","setEmail","setPassword","handleChange","value","autoComplete","LoginPage","isLoggedIn","LoaderRoket","withAuth","Component","App","isUserToken","isUserAuth","loading","isError","categoriesSlice","statisticSlice","persistConfig","key","storage","whitelist","userReducer","persistReducer","reducer","store","configureStore","categorySlice","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","devTools","process","rootStore","persistedStore","persistStore","ReactDOM","render","StrictMode","loader","persistor","getElementById"],"mappings":"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","file":"static/js/main.51c2f09e.chunk.js","sourcesContent":["export const isAuth = state => state.user.isAuth;\r\n\r\nexport const isToken = state => (state.user.token ? true : false);\r\n\r\nexport const isLoading = state => state.user.isLoading;\r\n\r\nexport const error = state => state.user.error;\r\n\r\nexport const isModalLogout = state => state.user.isModalLogout;\r\n\r\nexport const getName = state => state.user.user.name;\r\n\r\nexport const getUser = state => state.user.user;\r\n\r\nexport const getBalance = state => state.user.user.balance;\r\n","export default __webpack_public_path__ + \"static/media/sprite.632e7fa7.svg\";","import sprite from '@assets/sprite.svg';\r\nimport './logo.scss';\r\n\r\nexport const Logo = () => {\r\n    return (\r\n        <div className=\"logo\">\r\n            <a href=\"/\" className=\"logo_link\">\r\n                <svg className=\"logo_icon\">\r\n                    <use href={`${sprite}#wallet`}></use>\r\n                </svg>\r\n                <p className=\"logo_text\">Wallet</p>\r\n            </a>\r\n        </div>\r\n    );\r\n};\r\n","import axios from 'axios';\r\naxios.defaults.baseURL = 'https://';\r\n\r\nconst tempData = {\r\n    categories: [\r\n        {\r\n            id: 1,\r\n            income: true,\r\n            name: 'Основний дохід',\r\n        },\r\n        {\r\n            id: 2,\r\n            income: true,\r\n            name: 'Додатково',\r\n        },\r\n        {\r\n            id: 3,\r\n            income: false,\r\n            name: 'Авто',\r\n        },\r\n        {\r\n            id: 4,\r\n            income: false,\r\n            name: 'Їжа',\r\n        },\r\n    ],\r\n    transaction: [\r\n        {\r\n            id: 1,\r\n            categoryId: 1,\r\n            income: true,\r\n            sum: 2500,\r\n            comment: 'my comment',\r\n            balance: 2500,\r\n            datetime: Date.now(),\r\n            month: 5,\r\n            year: 2022,\r\n        },\r\n    ],\r\n    user: {\r\n        name: 'Guest',\r\n        email: 'test@gmail.com',\r\n        password: 'qwerty',\r\n        balance: 2500,\r\n        token: 'qwetyyuuiioopppkkcjhcggfufufj',\r\n    },\r\n    statistic: [\r\n        { category: 1, sum: 3000 },\r\n        { category: 2, sum: 1000 },\r\n        { category: 3, sum: 500 },\r\n        { category: 4, sum: 1000 },\r\n    ],\r\n    operations: [\r\n        {\r\n            id: 1,\r\n            category: 'Регулярний дохід',\r\n            income: true,\r\n            sum: 10000,\r\n            comment: 'Робота',\r\n            balance: 10000,\r\n            date: Date.now(),\r\n            month: 5,\r\n            year: 2022,\r\n        },\r\n        {\r\n            id: 2,\r\n            category: 'Різне',\r\n            income: false,\r\n            sum: 1000,\r\n            comment: 'Подарок дружині',\r\n            balance: 9000,\r\n            date: Date.now(),\r\n            month: 5,\r\n            year: 2022,\r\n        },\r\n        {\r\n            id: 3,\r\n            category: 'Не регулярний дохід',\r\n            income: true,\r\n            sum: 2000,\r\n            comment: 'Подарок',\r\n            balance: 11000,\r\n            date: Date.now(),\r\n            month: 5,\r\n            year: 2022,\r\n        },\r\n        {\r\n            id: 4,\r\n            category: 'Машина',\r\n            income: false,\r\n            sum: 3000,\r\n            comment: 'Ремонт',\r\n            balance: 8000,\r\n            date: Date.now(),\r\n            month: 5,\r\n            year: 2022,\r\n        },\r\n        {\r\n            id: 5,\r\n            category: 'Продукти',\r\n            income: false,\r\n            sum: 500,\r\n            comment: 'На тиждень',\r\n            balance: 7500,\r\n            date: Date.now(),\r\n            month: 5,\r\n            year: 2022,\r\n        },\r\n    ],\r\n};\r\n\r\n//  ----------------   USER   -----------------------\r\n\r\nexport const registerAPI = user => {\r\n    return tempData.user;\r\n};\r\n\r\nexport const loginAPI = user => {\r\n    if (\r\n        user.email === tempData.user.email &&\r\n        user.password === tempData.user.password\r\n    ) {\r\n        return tempData.user;\r\n    }\r\n    throw new Error('Wrong email or password');\r\n};\r\n\r\nexport const logoutAPI = () => {\r\n    return { status: 'ok', code: 200 };\r\n};\r\n\r\nexport const getUserAPI = () => {\r\n    return tempData.user;\r\n};\r\n\r\n// -------------  Category  --------------------------\r\n\r\nexport const getCategoryAPI = () => {\r\n    return tempData.categories;\r\n};\r\n\r\n// ------------ Statistic ----------------------------\r\n\r\nexport const getStatisticAPI = data => {\r\n    return tempData.statistic;\r\n};\r\n\r\n// ------------  Finance (operations) ----------------------------\r\n\r\nexport const getOperationsAPI = data => {\r\n    return tempData.operations;\r\n};\r\n\r\nexport const addTransactionAPI = data => {\r\n    return data;\r\n};\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { registerAPI, loginAPI, logoutAPI, getUserAPI } from '@api';\r\n\r\nconst login = createAsyncThunk('login', async data => {\r\n    const result = await loginAPI(data);\r\n\r\n    return result;\r\n});\r\n\r\nconst register = createAsyncThunk('register', async data => {\r\n    const result = await registerAPI(data);\r\n    return result;\r\n});\r\n\r\nconst logout = createAsyncThunk('logout', async () => {\r\n    const result = await logoutAPI();\r\n    return result;\r\n});\r\n\r\nconst currentUser = createAsyncThunk('current', async () => {\r\n    const result = await getUserAPI();\r\n    return result;\r\n});\r\n\r\nexport const userOperation = { login, register, logout, currentUser };\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nimport { userOperation } from './user-operation';\r\n\r\nconst initialState = {\r\n    user: {},\r\n    token: null,\r\n    isAuth: false,\r\n    isModalLogout: false,\r\n    isLoading: false,\r\n    error: null,\r\n};\r\n\r\nconst userSlice = createSlice({\r\n    name: 'user',\r\n    initialState,\r\n    reducers: {\r\n        openModalLogout: state => {\r\n            state.isModalLogout = true;\r\n        },\r\n        closeModalLogout: state => {\r\n            state.isModalLogout = false;\r\n        },\r\n    },\r\n    extraReducers: {\r\n        [userOperation.register.pending]: state => {\r\n            state.isLoading = true;\r\n            state.error = null;\r\n            state.isAuth = false;\r\n        },\r\n        [userOperation.register.fulfilled]: (state, { payload }) => {\r\n            state.user.name = payload.name;\r\n            state.user.email = payload.email;\r\n            state.token = payload.token;\r\n            state.isAuth = true;\r\n            state.isLoading = false;\r\n        },\r\n        [userOperation.register.rejected]: (state, { error }) => {\r\n            state.isLoading = false;\r\n            state.error = error.message;\r\n        },\r\n\r\n        [userOperation.login.pending]: state => {\r\n            state.isLoading = true;\r\n            state.error = null;\r\n            state.isAuth = false;\r\n        },\r\n\r\n        [userOperation.login.fulfilled]: (state, { payload }) => {\r\n            state.user.name = payload.name;\r\n            state.user.email = payload.email;\r\n            state.token = payload.token;\r\n            state.isAuth = true;\r\n            state.isLoading = false;\r\n        },\r\n\r\n        [userOperation.login.rejected]: (state, { error }) => {\r\n            state.isLoading = false;\r\n            state.error = error.message;\r\n        },\r\n\r\n        [userOperation.logout.pending]: state => {\r\n            state.isLoading = true;\r\n            state.error = null;\r\n        },\r\n        [userOperation.logout.fulfilled]: (state, { payload }) => {\r\n            state.user = [];\r\n            state.token = null;\r\n            state.isAuth = false;\r\n            state.isLoading = false;\r\n        },\r\n        [userOperation.logout.rejected]: (state, { error }) => {\r\n            state.isLoading = false;\r\n            state.error = error.message;\r\n        },\r\n        [userOperation.currentUser.pending]: state => {\r\n            state.isLoading = true;\r\n            state.error = null;\r\n        },\r\n        [userOperation.currentUser.fulfilled]: (state, { payload }) => {\r\n            state.user.name = payload.name;\r\n            state.user.email = payload.email;\r\n            state.user.balance = payload.balance;\r\n            state.isAuth = true;\r\n            state.isLoading = false;\r\n        },\r\n        [userOperation.currentUser.rejected]: (state, { error }) => {\r\n            state.isLoading = false;\r\n            state.error = error.message;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { openModalLogout, closeModalLogout } = userSlice.actions;\r\nexport default userSlice;\r\n","export const globalMedia = {\r\n    small: '(max-width: 767px)',\r\n    medium: '(min-width: 768px)',\r\n    mediumOnly: '(min-width: 768px) and (max-width: 1199px)',\r\n    large: '(min-width: 1200px)',\r\n};\r\n","export const navList = [\r\n    { icon: 'home', text: 'Головна', linkTo: '/home' },\r\n    { icon: 'statistic', text: 'Статистика', linkTo: '/diagram' },\r\n    { icon: 'currency', text: '', linkTo: '/currency' },\r\n];\r\n","import { useDispatch } from 'react-redux';\r\nimport Media from 'react-media';\r\n\r\nimport sprite from '@assets/sprite.svg';\r\nimport './buttonExit.scss';\r\n\r\nimport { openModalLogout } from '@redux/user/user-slice';\r\nimport { globalMedia } from '@data';\r\n\r\nexport const ButtonExit = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const onClick = () => {\r\n        dispatch(openModalLogout());\r\n    };\r\n\r\n    return (\r\n        <button className=\"button_exit\" onClick={onClick}>\r\n            <div className=\"button_exit__block\">\r\n                <svg className=\"button_exit__icon\">\r\n                    <use href={`${sprite}#exit`}></use>\r\n                </svg>\r\n            </div>\r\n            <Media queries={globalMedia}>\r\n                {matches => (\r\n                    <>\r\n                        {matches.medium && (\r\n                            <p className=\"button_exit__text\">Вийти</p>\r\n                        )}\r\n                    </>\r\n                )}\r\n            </Media>\r\n        </button>\r\n    );\r\n};\r\n","import { NavLink } from 'react-router-dom';\r\nimport Media from 'react-media';\r\n\r\nimport sprite from '@assets/sprite.svg';\r\nimport './itemNav.scss';\r\nimport { globalMedia } from '@data';\r\n\r\nexport const ItemNav = ({ icon, text, linkTo }) => {\r\n    return (\r\n        <NavLink\r\n            className={({ isActive }) =>\r\n                isActive ? 'nav_item active' : 'nav_item'\r\n            }\r\n            to={linkTo}\r\n        >\r\n            <svg className=\"nav_item__icon\">\r\n                <use href={`${sprite}#${icon}`}></use>\r\n            </svg>\r\n            <Media queries={globalMedia}>\r\n                {matches => (\r\n                    <>\r\n                        {matches.medium && (\r\n                            <p className=\"nav_item__text\">{text}</p>\r\n                        )}\r\n                    </>\r\n                )}\r\n            </Media>\r\n        </NavLink>\r\n    );\r\n};\r\n","import { useSelector } from 'react-redux';\r\n\r\nimport { getName } from '@redux/user/user-selector';\r\nimport { ButtonExit } from '@shared';\r\nimport './headerNav.scss';\r\n\r\nexport const HeaderNav = () => {\r\n    const userName = useSelector(getName);\r\n    return (\r\n        <ul className=\"header_nav__list\">\r\n            <li className=\"header_nav__item\">\r\n                <span className=\"header_nav__text\">{userName}</span>\r\n            </li>\r\n            <li className=\"header_nav__item\">\r\n                <ButtonExit />\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n","import Media from 'react-media';\r\nimport { navList, globalMedia } from '@data';\r\nimport { ItemNav } from '@shared';\r\nimport './navigation.scss';\r\n\r\nexport const Navigation = () => {\r\n    return (\r\n        <ul className=\"nav_list\">\r\n            {navList.map((el, idx) => {\r\n                return (\r\n                    <Media queries={globalMedia} key={idx}>\r\n                        {matches => (\r\n                            <>\r\n                                {matches.medium && el.text === '' ? null : (\r\n                                    <li className=\"nav_list__item\" key={idx}>\r\n                                        <ItemNav\r\n                                            icon={el.icon}\r\n                                            text={el.text}\r\n                                            linkTo={el.linkTo}\r\n                                        />\r\n                                    </li>\r\n                                )}\r\n                            </>\r\n                        )}\r\n                    </Media>\r\n                );\r\n            })}\r\n        </ul>\r\n    );\r\n};\r\n","import { useSelector } from 'react-redux';\r\nimport './balans.scss';\r\nimport { getBalance } from '@redux/user/user-selector';\r\n\r\nexport const Balans = () => {\r\n    const balans = useSelector(getBalance);\r\n\r\n    const makeMoney = n => {\r\n        return parseFloat(n)\r\n            .toFixed(2)\r\n            .replace(/(\\d)(?=(\\d{3})+\\.)/g, '$1 ');\r\n    };\r\n\r\n    return (\r\n        <div className=\"balans\">\r\n            <p className=\"balans__title\">Ваш баланс</p>\r\n            <p className=\"balans__order\">&#8372; {makeMoney(balans)}</p>\r\n        </div>\r\n    );\r\n};\r\n","import { HeaderNav } from '@component';\r\nimport { Logo } from '@shared';\r\nimport './header.scss';\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <>\r\n            <div className=\"header\">\r\n                <div className=\"container container__header\">\r\n                    <Logo />\r\n                    <HeaderNav />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Datetime from 'react-datetime';\r\nimport 'moment/locale/ru';\r\n\r\nimport sprite from '@assets/sprite.svg';\r\nimport './modalTransaction.scss';\r\n\r\nexport const ModalTransaction = () => {\r\n    const [modalTypeTransaction, setModalTypeTransaction] = useState('income');\r\n    const [date, setDate] = useState(new Date());\r\n    const [category, setCategory] = useState('Регулярный доход');\r\n    const [listActive, setListActive] = useState(false);\r\n\r\n    function dateChange(e) {\r\n        console.log(e._d);\r\n        setDate(e._d);\r\n    }\r\n    function listOpen() {\r\n        setListActive(!listActive);\r\n    }\r\n    function categoryClick(e) {\r\n        setCategory(e.target.textContent);\r\n        setListActive(!listActive);\r\n    }\r\n\r\n    function switchToggle() {\r\n        if (modalTypeTransaction === 'income') {\r\n            return 'toggleIncome';\r\n        }\r\n        return 'toggleIncomeSwitch';\r\n    }\r\n\r\n    function switchActiveDebet() {\r\n        if (modalTypeTransaction === 'income') {\r\n            const notActiv = 'switchTypeBalance__text';\r\n            const active = 'switchTypeBalance__text__active';\r\n            return `${notActiv} ${active}`;\r\n        }\r\n\r\n        return 'switchTypeBalance__text';\r\n    }\r\n    function switchActive() {\r\n        if (modalTypeTransaction === 'spending') {\r\n            const notActiv = 'switchTypeBalance__text';\r\n            const active = 'switchTypeBalance__text__active';\r\n            return `${notActiv} ${active}`;\r\n        }\r\n\r\n        return 'switchTypeBalance__text';\r\n    }\r\n\r\n    async function submitHandler(e) {\r\n        e.preventDefault();\r\n    }\r\n\r\n    function switchClickHandler(e) {\r\n        if (!e.target.checked) {\r\n            setModalTypeTransaction('spending');\r\n            setCategory('Выберите категорию');\r\n            return;\r\n        }\r\n        setModalTypeTransaction('income');\r\n        setCategory('Регулярный доход');\r\n    }\r\n    // випадающий список\r\n    function DropMenuActive() {\r\n        if (category !== 'Выберите категорию') {\r\n            const notActiv = 'dropField';\r\n            const active = 'dropFieldActive';\r\n\r\n            return `${notActiv} ${active}`;\r\n        }\r\n\r\n        return 'dropField';\r\n    }\r\n    const dropListSelectJSX = (\r\n        <div className=\"dropContainer\">\r\n            <div className={DropMenuActive()} onClick={listOpen}>\r\n                <span className=\"categoryDrop\">{category}</span>\r\n            </div>\r\n\r\n            {listActive && (\r\n                <ul className=\"dropList\">\r\n                    {/* категории для доходв */}\r\n                    {modalTypeTransaction === 'income' && (\r\n                        <li onClick={categoryClick} className=\"dropListItem\">\r\n                            Регулярный доход\r\n                        </li>\r\n                    )}\r\n                    {modalTypeTransaction === 'income' && (\r\n                        <li onClick={categoryClick} className=\"dropListItem\">\r\n                            Нерегулярный доход\r\n                        </li>\r\n                    )}\r\n\r\n                    {/* категории для расхода */}\r\n                    {modalTypeTransaction === 'spending' && (\r\n                        <li onClick={categoryClick} className=\"dropListItem\">\r\n                            Основной\r\n                        </li>\r\n                    )}\r\n                    {modalTypeTransaction === 'spending' && (\r\n                        <li onClick={categoryClick} className=\"dropListItem\">\r\n                            Еда\r\n                        </li>\r\n                    )}\r\n                    {modalTypeTransaction === 'spending' && (\r\n                        <li onClick={categoryClick} className=\"dropListItem\">\r\n                            Авто\r\n                        </li>\r\n                    )}\r\n                    {modalTypeTransaction === 'spending' && (\r\n                        <li onClick={categoryClick} className=\"dropListItem\">\r\n                            Развитие\r\n                        </li>\r\n                    )}\r\n                    {modalTypeTransaction === 'spending' && (\r\n                        <li onClick={categoryClick} className=\"dropListItem\">\r\n                            Дети\r\n                        </li>\r\n                    )}\r\n                    {modalTypeTransaction === 'spending' && (\r\n                        <li onClick={categoryClick} className=\"dropListItem\">\r\n                            Дом\r\n                        </li>\r\n                    )}\r\n                    {modalTypeTransaction === 'spending' && (\r\n                        <li onClick={categoryClick} className=\"dropListItem\">\r\n                            Образование\r\n                        </li>\r\n                    )}\r\n                    {modalTypeTransaction === 'spending' && (\r\n                        <li onClick={categoryClick} className=\"dropListItem\">\r\n                            Остальное\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n            )}\r\n\r\n            <span className=\"dropIconModal\">\r\n                <svg className=\"dropIcon\">\r\n                    <use href={`${sprite}#dropItemModal`}></use>\r\n                </svg>\r\n            </span>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"modalContainer\">\r\n            <div className=\"containerClose\">\r\n                <span className=\"itemCloseModal\">\r\n                    <svg className=\"iconCloseBtn\">\r\n                        <use href={`${sprite}#closeModal`}></use>\r\n                    </svg>\r\n                </span>\r\n            </div>\r\n            <h2 className=\"titleText\">Добавить Транзакцию</h2>\r\n            <form\r\n                onSubmit={submitHandler}\r\n                id=\"modalTransaction\"\r\n                className=\"modalForm\"\r\n            >\r\n                <div className=\"switchTypeBalance\">\r\n                    <span className={switchActiveDebet()}>Доход</span>\r\n                    <div className=\"toggleContainerType\">\r\n                        <label\r\n                            className=\"toggleTypeBody\"\r\n                            htmlFor=\"switchType\"\r\n                        ></label>\r\n                        <span className={switchToggle()} id=\"toggle\">\r\n                            <svg className=\"modalBtnPlus\">\r\n                                <use\r\n                                    href={\r\n                                        modalTypeTransaction === 'income'\r\n                                            ? `${sprite}#plusSvg`\r\n                                            : `${sprite}#modalMinus`\r\n                                    }\r\n                                ></use>\r\n                            </svg>\r\n                        </span>\r\n                    </div>\r\n                    <input\r\n                        className=\"switchToggleInput\"\r\n                        onChange={switchClickHandler}\r\n                        name=\"modalTypeTransaction\"\r\n                        type=\"checkbox\"\r\n                        id=\"switchType\"\r\n                        defaultChecked\r\n                    />\r\n                    <span className={switchActive()}>Расход</span>\r\n                </div>\r\n                {dropListSelectJSX}\r\n                <div className=\"sumContainer\">\r\n                    <input\r\n                        className=\"sumField\"\r\n                        required\r\n                        min=\"0.00\"\r\n                        step=\"0.01\"\r\n                        type=\"number\"\r\n                        placeholder=\"0.00\"\r\n                        // value={}\r\n                    />\r\n                </div>\r\n                <div className=\"calendarContainer\">\r\n                    <Datetime\r\n                        onChange={dateChange}\r\n                        inputProps={{ className: 'calendarField' }}\r\n                        initialValue={date}\r\n                        closeOnSelect={true}\r\n                        timeFormat={false}\r\n                    />\r\n                    <svg className=\"calendarIcon\">\r\n                        <use href={`${sprite}#calendarSvg`}></use>\r\n                    </svg>\r\n                </div>\r\n                <div className=\"commentContainer\">\r\n                    <textarea\r\n                        className=\"commentField\"\r\n                        placeholder=\"коментарий\"\r\n                    />\r\n                </div>\r\n            </form>\r\n            <div className=\"buttonContainer\">\r\n                <button className=\"submitButton\" type=\"submit\">\r\n                    Добавить\r\n                </button>\r\n                <button className=\"cancelButton\">Отмена</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport './Backdrop.scss';\r\n\r\nexport const Backdrop = ({ children }) => {\r\n    const modalRoot = document.querySelector('#modalroot');\r\n    return createPortal(\r\n        <div id=\"backdrop\" className=\"backdrop\">\r\n            {children}\r\n        </div>,\r\n        modalRoot,\r\n    );\r\n};\r\n","async function fetchCurrency() {\r\n  const response = await fetch(\r\n    'https://api.privatbank.ua/p24api/pubinfo?exchange&json&coursid=11',\r\n  );\r\n  const data = await response.json();\r\n\r\n  return data;\r\n}\r\n\r\nexport default { fetchCurrency };\r\n","export const currencies = ['USD', 'EUR', 'RUR'];\r\n","import React, { useEffect, useState } from 'react';\r\nimport currencyApi from '../../services/currencyApi';\r\n\r\nimport { currencies } from '../../assets/constants.js';\r\n// import styles from \"./Currency.module.css\";\r\nimport './curr.scss';\r\n\r\nexport default function CurrencyTable() {\r\n    const [currency, setCurrency] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchCurrency = async () => {\r\n            const data = await currencyApi.fetchCurrency();\r\n            const filteredCurrencies = [];\r\n            currencies.forEach(currency => {\r\n                data.forEach(element => {\r\n                    parseInt(element.buy).toFixed(2);\r\n                    if (element.ccy === currency) {\r\n                        filteredCurrencies.push({\r\n                            ccy: element.ccy,\r\n                            buy: Number(element.buy).toFixed(2),\r\n                            sale: Number(element.sale).toFixed(2),\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n            setCurrency(filteredCurrencies);\r\n            localStorage.setItem(\r\n                'currency',\r\n                JSON.stringify(filteredCurrencies),\r\n            );\r\n            localStorage.setItem('currencyTime', Date.now());\r\n        };\r\n        let currencyLS = JSON.parse(localStorage.getItem('currency'));\r\n        let currencyTime = JSON.parse(localStorage.getItem('currencyTime'));\r\n        if (!currencyLS) {\r\n            fetchCurrency();\r\n        }\r\n        if (Date.now() - currencyTime > 3600000) {\r\n            fetchCurrency();\r\n        } else {\r\n            setCurrency(currencyLS);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"currency\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <td>Валюта</td>\r\n                        <td>Покупка</td>\r\n                        <td>Продажа</td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {currency.map(item => {\r\n                        return (\r\n                            <tr key={item.ccy}>\r\n                                <td>{item.ccy}</td>\r\n                                <td>{item.buy}</td>\r\n                                <td>{item.sale}</td>\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { getOperationsAPI, addTransactionAPI } from '@api';\r\n\r\nconst getOperations = createAsyncThunk('getOperations', async data => {\r\n    const result = await getOperationsAPI(data);\r\n\r\n    return result;\r\n});\r\n\r\nconst addOperation = createAsyncThunk('addOperation', async () => {\r\n    const result = await addTransactionAPI();\r\n    return result;\r\n});\r\n\r\nexport const getFinanceOpertaion = { getOperations, addOperation };\r\n","export const getOperations = state => {\r\n    return state.finance.data;\r\n};\r\n\r\nexport const isLoading = state => state.finance.isLoading;\r\n\r\nexport const isModalTransaction = state => state.finance.isModalAddTransaction;\r\n","import './homeTabItemMobile.scss';\r\nimport moment from 'moment';\r\n\r\nconst homeTabItemMobile = ({\r\n    operation: { category, income, sum, balance, comment, date },\r\n}) => {\r\n    return (\r\n        <li\r\n            className={\r\n                income\r\n                    ? 'homeTabItem homeTabItem--green'\r\n                    : 'homeTabItem homeTabItem--red'\r\n            }\r\n        >\r\n            <p>\r\n                Дата:\r\n                <span>{moment(date).format('DD.MM.YY')}</span>\r\n            </p>\r\n            <p>\r\n                Тип:<span>{income ? '+' : '-'}</span>\r\n            </p>\r\n            <p>\r\n                Категория:<span>{category}</span>\r\n            </p>\r\n            <p>\r\n                Комментарий:<span>{comment}</span>\r\n            </p>\r\n            <p>\r\n                Сумма:\r\n                <span className=\"homeTabItemResult\">{sum}</span>\r\n            </p>\r\n            <p>\r\n                Баланс:<span>{balance}</span>\r\n            </p>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default homeTabItemMobile;\r\n","import './homeTabItemTabletAndDesktop.scss';\r\nimport moment from 'moment';\r\n\r\nconst homeTabItemTabletAndDesktop = ({\r\n    operation: { category, income, sum, balance, comment, date },\r\n    index,\r\n}) => {\r\n    return (\r\n        <li className=\"homeTabItemTabletAndDesktop\">\r\n            <p>{moment(date).format('DD.MM.YY')}</p>\r\n            <p>{income ? '+' : '-'}</p>\r\n            <p>{category}</p>\r\n            <p>{comment}</p>\r\n            <p\r\n                className={\r\n                    income\r\n                        ? 'homeTabItemAndDesktopResult homeTabItemAndDesktopResult--green'\r\n                        : 'homeTabItemAndDesktopResult homeTabItemAndDesktopResult--red'\r\n                }\r\n            >\r\n                {sum}\r\n            </p>\r\n            <p>{balance}</p>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default homeTabItemTabletAndDesktop;\r\n","import './HomeTabList.scss';\r\nimport Media from 'react-media';\r\nimport HomeTabItemMobile from '@component/homeTabItemMobile';\r\nimport HomeTabItemTabletAndDesktop from '@component/homeTabItemTabletAndDesktop';\r\n\r\nconst HomeTabList = ({ operations }) => {\r\n    return (\r\n        <ul className=\"homeTabList\">\r\n            <Media\r\n                queries={{\r\n                    small: '(min-width: 320px) and (max-width: 767px)',\r\n                    medium: '(min-width: 768px)',\r\n                }}\r\n            >\r\n                {matches => {\r\n                    switch (true) {\r\n                        case matches.small:\r\n                            return operations.map(operation => {\r\n                                return (\r\n                                    <HomeTabItemMobile\r\n                                        operation={operation}\r\n                                        key={operation.id}\r\n                                    />\r\n                                );\r\n                            });\r\n                        case matches.medium:\r\n                            return (\r\n                                <>\r\n                                    <li\r\n                                        className=\"homeTabTabletAndDesktop\"\r\n                                        key={0}\r\n                                    >\r\n                                        <h3>Дата</h3>\r\n                                        <h3>Тип</h3>\r\n                                        <h3>Категорія</h3>\r\n                                        <h3>Коментар</h3>\r\n                                        <h3>Сума</h3>\r\n                                        <h3>Баланс</h3>\r\n                                    </li>\r\n                                    {operations.map((operation, index) => {\r\n                                        return (\r\n                                            <>\r\n                                                <HomeTabItemTabletAndDesktop\r\n                                                    operation={operation}\r\n                                                    index\r\n                                                    key={operation.id}\r\n                                                />\r\n                                            </>\r\n                                        );\r\n                                    })}\r\n                                </>\r\n                            );\r\n                        default:\r\n                            console.log('Error in switch handleTabList');\r\n                            return <h1>Ууупс... Сталась помилка</h1>;\r\n                    }\r\n                }}\r\n            </Media>\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default HomeTabList;\r\n","import './homeTab.scss';\r\nimport { getFinanceOpertaion } from '@redux/finance/finance-operation';\r\nimport { getOperations } from '@redux/finance/finance-selector';\r\nimport HomeTabList from '../homeTabList';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\n\r\nconst HomeTab = () => {\r\n    const dispatch = useDispatch();\r\n    const operations = useSelector(getOperations);\r\n\r\n    useEffect(() => {\r\n        if (operations.length === 0) {\r\n            dispatch(getFinanceOpertaion.getOperations());\r\n        }\r\n    }, []);\r\n\r\n    return operations.length !== 0 ? (\r\n        <section className=\"homeTab-section\">\r\n            {/* <div className=\"container\"> */}\r\n            <HomeTabList operations={operations} />\r\n            {/* </div> */}\r\n        </section>\r\n    ) : (\r\n        <h1>Загрузка...</h1>\r\n    );\r\n};\r\n\r\nexport default HomeTab;\r\n","import './buttonClose.scss';\r\n\r\n//import PropTypes from 'prop-types'; {onClick}\r\n\r\nconst ButtonClose = ({ onClick }) => {\r\n    return (\r\n        <button className=\"button\" onClick={onClick}>\r\n            <span className=\"button_vectotA\"></span>\r\n            <span className=\"button_vectotB\"></span>\r\n        </button>\r\n    );\r\n};\r\nexport default ButtonClose;\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { getCategoryAPI } from '@api';\r\n\r\nconst getCategories = createAsyncThunk('getCategories', async () => {\r\n    const result = await getCategoryAPI();\r\n    return result;\r\n});\r\n\r\nexport const categoriesOperation = { getCategories };\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { getStatisticAPI } from '@api';\r\n\r\nconst getStatistic = createAsyncThunk('getStatistic', async data => {\r\n    const result = await getStatisticAPI(data);\r\n    return result;\r\n});\r\nexport const statisticOperation = { getStatistic };\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nimport { getFinanceOpertaion } from './finance-operation';\r\n\r\nconst initialState = {\r\n    data: [],\r\n    isLoading: false,\r\n    error: null,\r\n    isModalAddTransaction: false,\r\n};\r\n\r\nconst financeSlice = createSlice({\r\n    name: 'finance',\r\n    initialState,\r\n    reducers: {\r\n        openModalTransaction: state => {\r\n            state.isModalAddTransaction = true;\r\n        },\r\n        closeModalTransaction: state => {\r\n            state.isModalAddTransaction = false;\r\n        },\r\n    },\r\n    extraReducers: {\r\n        [getFinanceOpertaion.getOperations.pending]: state => {\r\n            state.isLoading = true;\r\n            state.error = null;\r\n        },\r\n        [getFinanceOpertaion.getOperations.fulfilled]: (state, { payload }) => {\r\n            state.data = [...payload];\r\n            state.isLoading = false;\r\n        },\r\n        [getFinanceOpertaion.getOperations.rejected]: (state, { error }) => {\r\n            state.isLoading = false;\r\n            state.error = error.message;\r\n        },\r\n\r\n        [getFinanceOpertaion.addOperation.pending]: state => {\r\n            state.isLoading = true;\r\n            state.error = null;\r\n        },\r\n        [getFinanceOpertaion.addOperation.fulfilled]: (state, { payload }) => {\r\n            state.data = [...payload];\r\n            state.isLoading = false;\r\n        },\r\n        [getFinanceOpertaion.addOperation.rejected]: (state, { error }) => {\r\n            state.isLoading = false;\r\n            state.error = error.message;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { openModalTransaction, closeModalTransaction } =\r\n    financeSlice.actions;\r\nexport default financeSlice;\r\n","export const isLoadingCategories = state => state.categories.isLoading;\r\n\r\nexport const isCategoriesFull = state =>\r\n    state.categories.data.length > 0 ? true : false;\r\n\r\nexport const getCategoryDebet = state =>\r\n    state.categories.data.filter(el => el.income);\r\n\r\nexport const getCategoryCredit = state =>\r\n    state.categories.data.filter(el => !el.income);\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Navigate, Route, Routes } from 'react-router-dom';\r\nimport Media from 'react-media';\r\n\r\nimport {\r\n    Header,\r\n    Balans,\r\n    Navigation,\r\n    ModalTransaction,\r\n    Backdrop,\r\n} from '@component';\r\nimport Currency from '@component/currency';\r\nimport HomeTab from '@component/homeTab';\r\nimport ButtonClose from '@component/buttonClose/buttonClose';\r\n\r\nimport { categoriesOperation } from '@redux/categories/categories-operation';\r\nimport { statisticOperation } from '@redux/statistic/statistic-operation';\r\nimport { openModalTransaction } from '@redux/finance/finance-slice';\r\nimport { isModalTransaction } from '@redux/finance/finance-selector';\r\nimport { isModalLogout } from '@redux/user/user-selector';\r\nimport { isCategoriesFull } from '@redux/categories/categories-selector';\r\nimport { globalMedia } from '@data';\r\n\r\nexport const Dashboard = () => {\r\n    const dispatch = useDispatch();\r\n    const isCategories = useSelector(isCategoriesFull);\r\n    const isOpenModalTransaction = useSelector(isModalTransaction);\r\n    const isOpenModalLogout = useSelector(isModalLogout);\r\n\r\n    const onOpenModalTransaction = () => {\r\n        dispatch(openModalTransaction());\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!isCategories) {\r\n            dispatch(categoriesOperation.getCategories());\r\n        }\r\n        // dispatch(getFinanceOpertaion.getOperations());\r\n        dispatch(statisticOperation.getStatistic());\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <main>\r\n                <div className=\"container container__main\">\r\n                    <div className=\"main dashboardMain\">\r\n                        <Media queries={globalMedia}>\r\n                            {matches => (\r\n                                <>\r\n                                    {matches.small && (\r\n                                        <>\r\n                                            <Navigation />\r\n                                            <Routes>\r\n                                                <Route\r\n                                                    path=\"home\"\r\n                                                    element={<Balans />}\r\n                                                />\r\n                                                <Route path=\"diagram\" />\r\n                                                <Route\r\n                                                    path=\"currency\"\r\n                                                    element={<Currency />}\r\n                                                />\r\n                                                <Route\r\n                                                    path=\"*\"\r\n                                                    element={<h1>Not Found</h1>}\r\n                                                />\r\n                                            </Routes>\r\n                                        </>\r\n                                    )}\r\n                                    {matches.medium && (\r\n                                        <div className=\"main_block\">\r\n                                            <div>\r\n                                                <Navigation />\r\n                                                <Balans />\r\n                                            </div>\r\n                                            <Currency />\r\n                                        </div>\r\n                                    )}\r\n                                </>\r\n                            )}\r\n                        </Media>\r\n                    </div>\r\n                    <Routes>\r\n                        <Route\r\n                            path=\"/home\"\r\n                            element={\r\n                                <>\r\n                                    <HomeTab />\r\n                                    <ButtonClose\r\n                                        onClick={onOpenModalTransaction}\r\n                                    />\r\n                                </>\r\n                            }\r\n                        />\r\n                        <Route\r\n                            path=\"/currency\"\r\n                            element={\r\n                                <Media queries={globalMedia}>\r\n                                    {matches => (\r\n                                        <>\r\n                                            {matches.medium && (\r\n                                                <>\r\n                                                    <HomeTab />\r\n                                                    <ButtonClose\r\n                                                        onClick={\r\n                                                            onOpenModalTransaction\r\n                                                        }\r\n                                                    />\r\n                                                </>\r\n                                            )}\r\n                                        </>\r\n                                    )}\r\n                                </Media>\r\n                            }\r\n                        />\r\n                        <Route path=\"/diagram\" element={<h1>Diagram</h1>} />\r\n                    </Routes>\r\n                </div>\r\n            </main>\r\n            {isOpenModalTransaction && (\r\n                <>\r\n                    <Backdrop>\r\n                        <ModalTransaction />\r\n                    </Backdrop>\r\n                </>\r\n            )}\r\n            {isOpenModalLogout && (\r\n                <>\r\n                    <Backdrop></Backdrop>\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { userOperation } from '../../redux/user/user-operation';\r\nimport { Logo } from '../shared/logo';\r\nimport sprite from '../../assets/sprite.svg';\r\nimport './loginForm.scss';\r\n\r\nexport default function LoginForm() {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const handleChange = ({ target: { name, value } }) => {\r\n        switch (name) {\r\n            case 'email':\r\n                return setEmail(value);\r\n\r\n            case 'password':\r\n                return setPassword(value);\r\n\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    const handelSubmit = e => {\r\n        e.preventDefault();\r\n        console.log(e);\r\n\r\n        dispatch(userOperation.login({ email, password }));\r\n        setEmail('');\r\n        setPassword('');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form\r\n                onSubmit={handelSubmit}\r\n                autoComplete=\"off\"\r\n                className=\"login_form\"\r\n            >\r\n                <div className=\"login_form__logo\">\r\n                    <Logo />\r\n                </div>\r\n                <label className=\"login_form__label\">\r\n                    <svg className=\"login_form__icon\">\r\n                        <use href={`${sprite}#email`}></use>\r\n                    </svg>\r\n                    <input\r\n                        className=\"login_form__input\"\r\n                        placeholder=\"E-mail\"\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={email}\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n                <label className=\"login_form__label\">\r\n                    <svg className=\"login_form__icon\">\r\n                        <use href={`${sprite}#password`}></use>\r\n                    </svg>\r\n                    <input\r\n                        className=\"login_form__input\"\r\n                        placeholder=\"Пароль\"\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={password}\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n\r\n                <button\r\n                    className=\"login_form__btn login_form__btn--current  \"\r\n                    type=\"submit\"\r\n                >\r\n                    <span>Вход</span>\r\n                </button>\r\n                <button\r\n                    className=\"login_form__btn login_form__btn_color\"\r\n                    type=\"button\"\r\n                >\r\n                    <span>Регистрация</span>\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport LoginForm from '../../component/loginForm';\r\nimport { isLoading } from '../../redux/user/user-selector';\r\n// import RegisterForm from '../register/RegisterForm';\r\n// import Dashboard from '../dashboard/Dashboard';\r\n// console.log(LoginForm);\r\n\r\nconst LoginPage = () => {\r\n    const isLoggedIn = useSelector(isLoading);\r\n    console.log(isLoggedIn);\r\n    return (\r\n        <div>\r\n            {/* <RegisterForm /> */}\r\n            <LoginForm />\r\n            {/* {isLoggedIn ? <Dashboard /> : <RegisterForm />} */}\r\n        </div>\r\n    );\r\n};\r\nexport default LoginPage;\r\n","import './spinnerLoader.scss';\r\n\r\nfunction LoaderRoket() {\r\n    return <div className=\"loader\">Loading...</div>;\r\n}\r\nexport default LoaderRoket;\r\n","import { Navigate } from 'react-router-dom';\r\n\r\nexport const withAuth = (isAuth, Component) => {\r\n    if (isAuth) {\r\n        return  Component ? Component : <Navigate to=\"/home\" />;\r\n    } else {\r\n        return  <Navigate to=\"/login\" />;\r\n    }\r\n};\r\n","// import './App.scss';\r\n\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Route, Routes } from 'react-router-dom';\r\n\r\nimport { Dashboard } from '@pages';\r\nimport LoginPage from '@pages/login';\r\nimport Loader from '@component/spinnerLoader/spinnerLoader';\r\nimport { withAuth } from '@hoc';\r\n\r\nimport { isAuth, isToken, isLoading, error } from '@redux/user/user-selector';\r\nimport { userOperation } from '@redux/user/user-operation';\r\n\r\nfunction App() {\r\n    const isUserToken = useSelector(isToken);\r\n    const isUserAuth = useSelector(isAuth);\r\n    const loading = useSelector(isLoading);\r\n    const isError = useSelector(error);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        // console.log('Use effect');\r\n        if (isUserToken && !isUserAuth) {\r\n            dispatch(userOperation.currentUser());\r\n        } else {\r\n            dispatch(\r\n                userOperation.login({\r\n                    email: 'test@gmail.com',\r\n                    password: 'qwerty',\r\n                }),\r\n            );\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {loading && <Loader />}\r\n            {isError && <h1>Error: {isError}</h1>}\r\n            {!loading && !isError && isUserAuth === isUserToken && (\r\n                <Routes>\r\n                    <Route path=\"login\" element={<LoginPage />} />\r\n                    <Route path=\"register\" element={<h1>Registration</h1>} />\r\n                    <Route path=\"/\" element={withAuth(isUserAuth)} />\r\n                    <Route\r\n                        path=\"/*\"\r\n                        element={withAuth(isUserAuth, <Dashboard />)}\r\n                    />\r\n                </Routes>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nimport { categoriesOperation } from './categories-operation';\r\n\r\nconst initialState = {\r\n    data: [],\r\n    isLoading: false,\r\n    error: null,\r\n};\r\n\r\nconst categoriesSlice = createSlice({\r\n    name: 'categories',\r\n    initialState,\r\n    extraReducers: {\r\n        [categoriesOperation.getCategories.pending]: state => {\r\n            state.isLoading = true;\r\n            state.error = null;\r\n        },\r\n        [categoriesOperation.getCategories.fulfilled]: (state, { payload }) => {\r\n            state.data = [...payload];\r\n            state.isLoading = false;\r\n        },\r\n        [categoriesOperation.getCategories.rejected]: (state, { error }) => {\r\n            state.isLoading = false;\r\n            state.error = error.message;\r\n        },\r\n    },\r\n});\r\n\r\nexport default categoriesSlice;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nimport { statisticOperation } from './statistic-operation';\r\n\r\nconst initialState = {\r\n    data: [],\r\n    isLoading: false,\r\n    error: null,\r\n};\r\n\r\nconst statisticSlice = createSlice({\r\n    name: 'statistic',\r\n    initialState,\r\n    extraReducers: {\r\n        [statisticOperation.getStatistic.pending]: state => {\r\n            state.isLoading = true;\r\n            state.error = null;\r\n        },\r\n        [statisticOperation.getStatistic.fulfilled]: (state, { payload }) => {\r\n            state.data = [...payload];\r\n            state.isLoading = false;\r\n        },\r\n        [statisticOperation.getStatistic.rejected]: (state, { error }) => {\r\n            state.isLoading = false;\r\n            state.error = error.message;\r\n        },\r\n    },\r\n});\r\n\r\nexport default statisticSlice;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist';\r\nimport logger from 'redux-logger';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport categorySlice from './categories/categories-slice';\r\nimport statisticSlice from './statistic/statistic-slice';\r\nimport userSlice from './user/user-slice';\r\nimport financeSlice from './finance/finance-slice';\r\n\r\nconst persistConfig = {\r\n    key: 'user',\r\n    storage,\r\n    whitelist: ['token'],\r\n};\r\n\r\nconst userReducer = persistReducer(persistConfig, userSlice.reducer);\r\n\r\nconst middleware = getDefaultMiddleware => [\r\n    ...getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n        },\r\n    }),\r\n    logger,\r\n];\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        [userSlice.name]: userReducer,\r\n        [categorySlice.name]: categorySlice.reducer,\r\n        [statisticSlice.name]: statisticSlice.reducer,\r\n        [financeSlice.name]: financeSlice.reducer,\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistedStore = persistStore(store);\r\n\r\nexport const rootStore = { store, persistedStore };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport '@style/style.scss';\r\nimport App from '@root/App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { rootStore } from '@redux/store';\r\nimport 'react-datetime/css/react-datetime.css';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={rootStore.store}>\r\n            <PersistGate loader={null} persistor={rootStore.persistedStore}>\r\n                <BrowserRouter>\r\n                    <App />\r\n                </BrowserRouter>\r\n            </PersistGate>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}